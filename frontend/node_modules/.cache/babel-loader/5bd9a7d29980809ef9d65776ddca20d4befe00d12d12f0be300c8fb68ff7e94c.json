{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\NodalGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport ReactFlow, { useNodesState, useEdgesState, Controls, Background } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NodalGraph = ({\n  companies,\n  currentUserEmail\n}) => {\n  _s();\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Build nodes and edges whenever companies array changes\n  useEffect(() => {\n    if (!companies || companies.length === 0) return;\n    const newNodes = companies.map((c, i) => ({\n      id: c.id.toString(),\n      position: c.position || {\n        x: i * 200,\n        y: i * 150\n      },\n      data: {\n        label: c.name,\n        email: c.email,\n        produces: Array.isArray(c.produces) ? c.produces : [],\n        needs: Array.isArray(c.needs) ? c.needs : []\n      },\n      style: {\n        background: c.email === currentUserEmail ? \"red\" : \"#fff\",\n        color: \"#000\",\n        border: \"2px solid #222\",\n        width: 150,\n        height: 50,\n        borderRadius: 50,\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }\n    }));\n    const newEdges = [];\n    companies.forEach(c1 => {\n      companies.forEach(c2 => {\n        if (Array.isArray(c1.needs) && Array.isArray(c2.produces) && c1.needs.some(need => c2.produces.includes(need))) {\n          newEdges.push({\n            id: `e${c2.id}-${c1.id}`,\n            source: c2.id.toString(),\n            target: c1.id.toString(),\n            animated: true,\n            style: {\n              stroke: \"#888\"\n            }\n          });\n        }\n      });\n    });\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [companies, currentUserEmail]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      fitView: true,\n      nodesDraggable: true,\n      nodesConnectable: false,\n      zoomOnScroll: true,\n      zoomOnPinch: true,\n      panOnScroll: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: selectedNode.position.x + 160,\n        top: selectedNode.position.y,\n        background: \"#fff\",\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        border: \"1px solid #222\",\n        boxShadow: \"0px 0px 8px rgba(0,0,0,0.2)\",\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedNode.data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", selectedNode.data.email || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Produces:\", \" \", Array.isArray(selectedNode.data.produces) ? selectedNode.data.produces.join(\", \") : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Needs:\", \" \", Array.isArray(selectedNode.data.needs) ? selectedNode.data.needs.join(\", \") : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(NodalGraph, \"mhNSb4WSlwFgzcnGk1SsxSkbPL4=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = NodalGraph;\nexport default NodalGraph;\nvar _c;\n$RefreshReg$(_c, \"NodalGraph\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","useNodesState","useEdgesState","Controls","Background","jsxDEV","_jsxDEV","NodalGraph","companies","currentUserEmail","_s","selectedNode","setSelectedNode","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","length","newNodes","map","c","i","id","toString","position","x","y","data","label","name","email","produces","Array","isArray","needs","style","background","color","border","width","height","borderRadius","textAlign","display","justifyContent","alignItems","newEdges","forEach","c1","c2","some","need","includes","push","source","target","animated","stroke","onNodeClick","event","node","children","fitView","nodesDraggable","nodesConnectable","zoomOnScroll","zoomOnPinch","panOnScroll","gap","fileName","_jsxFileName","lineNumber","columnNumber","left","top","padding","boxShadow","zIndex","join","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/NodalGraph.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ReactFlow, { useNodesState, useEdgesState, Controls, Background } from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nconst NodalGraph = ({ companies, currentUserEmail }) => {\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n    const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n\r\n    // Build nodes and edges whenever companies array changes\r\n    useEffect(() => {\r\n        if (!companies || companies.length === 0) return;\r\n\r\n        const newNodes = companies.map((c, i) => ({\r\n            id: c.id.toString(),\r\n            position: c.position || { x: i * 200, y: i * 150 },\r\n            data: {\r\n                label: c.name,\r\n                email: c.email,\r\n                produces: Array.isArray(c.produces) ? c.produces : [],\r\n                needs: Array.isArray(c.needs) ? c.needs : [],\r\n            },\r\n            style: {\r\n                background: c.email === currentUserEmail ? \"red\" : \"#fff\",\r\n                color: \"#000\",\r\n                border: \"2px solid #222\",\r\n                width: 150,\r\n                height: 50,\r\n                borderRadius: 50,\r\n                textAlign: \"center\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n        }));\r\n\r\n        const newEdges = [];\r\n        companies.forEach((c1) => {\r\n            companies.forEach((c2) => {\r\n                if (\r\n                    Array.isArray(c1.needs) &&\r\n                    Array.isArray(c2.produces) &&\r\n                    c1.needs.some((need) => c2.produces.includes(need))\r\n                ) {\r\n                    newEdges.push({\r\n                        id: `e${c2.id}-${c1.id}`,\r\n                        source: c2.id.toString(),\r\n                        target: c1.id.toString(),\r\n                        animated: true,\r\n                        style: { stroke: \"#888\" },\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        setNodes(newNodes);\r\n        setEdges(newEdges);\r\n    }, [companies, currentUserEmail]);\r\n\r\n    const onNodeClick = useCallback((event, node) => {\r\n        setSelectedNode(node);\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"100%\" }}>\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onNodeClick={onNodeClick}\r\n                fitView\r\n                nodesDraggable\r\n                nodesConnectable={false}\r\n                zoomOnScroll\r\n                zoomOnPinch\r\n                panOnScroll\r\n            >\r\n                <Background color=\"#aaa\" gap={16} />\r\n                <Controls />\r\n            </ReactFlow>\r\n\r\n            {selectedNode && (\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: selectedNode.position.x + 160,\r\n                        top: selectedNode.position.y,\r\n                        background: \"#fff\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"8px\",\r\n                        border: \"1px solid #222\",\r\n                        boxShadow: \"0px 0px 8px rgba(0,0,0,0.2)\",\r\n                        zIndex: 10,\r\n                    }}\r\n                >\r\n                    <strong>{selectedNode.data.label}</strong>\r\n                    <div>Email: {selectedNode.data.email || \"N/A\"}</div>\r\n                    <div>\r\n                        Produces:{\" \"}\r\n                        {Array.isArray(selectedNode.data.produces)\r\n                            ? selectedNode.data.produces.join(\", \")\r\n                            : \"N/A\"}\r\n                    </div>\r\n                    <div>\r\n                        Needs:{\" \"}\r\n                        {Array.isArray(selectedNode.data.needs)\r\n                            ? selectedNode.data.needs.join(\", \")\r\n                            : \"N/A\"}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}