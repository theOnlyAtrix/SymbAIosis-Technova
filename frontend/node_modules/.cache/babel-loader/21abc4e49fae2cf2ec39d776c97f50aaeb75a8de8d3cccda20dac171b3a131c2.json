{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\Blueprints.jsx\",\n  _s = $RefreshSig$();\n// ✅ Import at the top\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [companyName, setCompanyName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [goals, setGoals] = useState(\"\");\n  const [emails, setEmails] = useState([]);\n  const [blueprint, setBlueprint] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleGenerateBlueprint = async () => {\n    if (!companyName || !description || !goals) {\n      setError(\"Please fill out all fields before generating a blueprint.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setBlueprint(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/generateBlueprint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          companyName,\n          description,\n          goals,\n          companyEmails: emails // ✅ match backend exactly\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(\"Server returned error:\", data);\n        setError(data.error || \"Failed to generate blueprint.\");\n      } else if (data.blueprint) {\n        setBlueprint(data.blueprint);\n      } else {\n        setError(\"Blueprint generation failed: No response content.\");\n      }\n    } catch (err) {\n      console.error(\"Error generating blueprint:\", err);\n      setError(\"Network or server error. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Company Blueprint Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value),\n        className: \"p-3 border rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"p-3 border rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Goals\",\n        value: goals,\n        onChange: e => setGoals(e.target.value),\n        className: \"p-3 border rounded-lg col-span-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateBlueprint,\n      disabled: loading,\n      className: `px-6 py-3 rounded-lg font-semibold ${loading ? \"bg-gray-400\" : \"bg-blue-600 hover:bg-blue-700\"} text-white`,\n      children: loading ? \"Generating...\" : \"Generate Blueprint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), blueprint && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-4 border rounded-lg bg-gray-50 whitespace-pre-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Generated Blueprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blueprint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"aZbAjvEPhLjzDR6bitjMj3o+2wQ=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Dashboard","_s","companyName","setCompanyName","description","setDescription","goals","setGoals","emails","setEmails","blueprint","setBlueprint","loading","setLoading","error","setError","handleGenerateBlueprint","response","fetch","method","headers","body","JSON","stringify","companyEmails","data","json","ok","console","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/Blueprints.jsx"],"sourcesContent":["// ✅ Import at the top\r\nimport { useState } from \"react\";\r\n\r\nexport default function Dashboard() {\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [goals, setGoals] = useState(\"\");\r\n    const [emails, setEmails] = useState([]);\r\n    const [blueprint, setBlueprint] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleGenerateBlueprint = async () => {\r\n        if (!companyName || !description || !goals) {\r\n            setError(\"Please fill out all fields before generating a blueprint.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(\"\");\r\n        setBlueprint(\"\");\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/generateBlueprint\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    companyName,\r\n                    description,\r\n                    goals,\r\n                    companyEmails: emails, // ✅ match backend exactly\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                console.error(\"Server returned error:\", data);\r\n                setError(data.error || \"Failed to generate blueprint.\");\r\n            } else if (data.blueprint) {\r\n                setBlueprint(data.blueprint);\r\n            } else {\r\n                setError(\"Blueprint generation failed: No response content.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error generating blueprint:\", err);\r\n            setError(\"Network or server error. Please try again.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Company Blueprint Generator</h1>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Company Name\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    className=\"p-3 border rounded-lg\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Company Description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    className=\"p-3 border rounded-lg\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Company Goals\"\r\n                    value={goals}\r\n                    onChange={(e) => setGoals(e.target.value)}\r\n                    className=\"p-3 border rounded-lg col-span-2\"\r\n                />\r\n            </div>\r\n\r\n            <button\r\n                onClick={handleGenerateBlueprint}\r\n                disabled={loading}\r\n                className={`px-6 py-3 rounded-lg font-semibold ${\r\n                    loading ? \"bg-gray-400\" : \"bg-blue-600 hover:bg-blue-700\"\r\n                } text-white`}\r\n            >\r\n                {loading ? \"Generating...\" : \"Generate Blueprint\"}\r\n            </button>\r\n\r\n            {error && (\r\n                <p className=\"text-red-500 mt-4\">\r\n                    <strong>Error:</strong> {error}\r\n                </p>\r\n            )}\r\n\r\n            {blueprint && (\r\n                <div className=\"mt-8 p-4 border rounded-lg bg-gray-50 whitespace-pre-wrap\">\r\n                    <h2 className=\"text-xl font-bold mb-2\">Generated Blueprint</h2>\r\n                    <p>{blueprint}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}