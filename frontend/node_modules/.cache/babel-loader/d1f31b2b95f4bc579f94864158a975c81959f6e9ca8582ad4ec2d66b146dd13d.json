{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// Dashboard.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [currentUserEmail, setCurrentUserEmail] = useState(\"\");\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [blueprint, setBlueprint] = useState(\"\");\n\n  // Get current user email\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) setCurrentUserEmail(user.email);else setCurrentUserEmail(\"\");\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Fetch all companies from Firestore\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"companies\"));\n        const companyList = [];\n        querySnapshot.forEach(doc => {\n          companyList.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setCompanies(companyList);\n      } catch (err) {\n        console.error(\"Error fetching companies:\", err);\n        setError(\"Failed to load companies.\");\n      }\n    };\n    fetchCompanies();\n  }, []);\n\n  // Generate blueprint handler\n  const handleGenerateBlueprint = async targetCompany => {\n    const targetEmail = targetCompany.email;\n    if (!currentUserEmail) {\n      setError(\"You must be signed in to generate a blueprint.\");\n      return;\n    }\n    if (!targetEmail) {\n      setError(\"Target company email is missing.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setBlueprint(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/generateBlueprint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          companyName: targetEmail.split(\"@\")[0] || \"Unnamed Company\",\n          description: `Collaboration with ${targetEmail}`,\n          goals: `Exchange waste and resources between ${currentUserEmail} and ${targetEmail}`,\n          companyEmails: [currentUserEmail, targetEmail]\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.error || \"Failed to generate blueprint.\");\n      } else if (data.blueprint) {\n        setBlueprint(data.blueprint);\n      } else {\n        setError(\"Blueprint generation failed: No content returned.\");\n      }\n    } catch (err) {\n      console.error(\"Error generating blueprint:\", err);\n      setError(\"Network or server error. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"20px\"\n      },\n      children: companies.filter(c => c.email !== currentUserEmail).map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"15px\",\n          borderRadius: \"10px\",\n          width: \"250px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: company.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", company.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenerateBlueprint(company),\n          disabled: loading,\n          style: {\n            padding: \"8px 12px\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#4caf50\",\n            color: \"#fff\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: loading ? \"Generating...\" : \"Generate Blueprint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this)]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), blueprint && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        padding: \"15px\",\n        border: \"1px solid #aaa\",\n        borderRadius: \"10px\",\n        maxHeight: \"400px\",\n        overflowY: \"auto\",\n        backgroundColor: \"#f9f9f9\",\n        whiteSpace: \"pre-wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Blueprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: blueprint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"/HptYYcc3iLPvImKKnqrwxl1mIc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","auth","db","onAuthStateChanged","collection","getDocs","jsxDEV","_jsxDEV","Dashboard","_s","currentUserEmail","setCurrentUserEmail","companies","setCompanies","loading","setLoading","error","setError","blueprint","setBlueprint","unsubscribe","user","email","fetchCompanies","querySnapshot","companyList","forEach","doc","push","id","data","err","console","handleGenerateBlueprint","targetCompany","targetEmail","response","fetch","method","headers","body","JSON","stringify","companyName","split","description","goals","companyEmails","json","ok","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","display","flexWrap","gap","filter","c","map","company","border","borderRadius","width","name","onClick","disabled","backgroundColor","cursor","marginTop","maxHeight","overflowY","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/Dashboard.jsx"],"sourcesContent":["// Dashboard.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\n\r\nconst Dashboard = () => {\r\n    const [currentUserEmail, setCurrentUserEmail] = useState(\"\");\r\n    const [companies, setCompanies] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [blueprint, setBlueprint] = useState(\"\");\r\n\r\n    // Get current user email\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            if (user) setCurrentUserEmail(user.email);\r\n            else setCurrentUserEmail(\"\");\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Fetch all companies from Firestore\r\n    useEffect(() => {\r\n        const fetchCompanies = async () => {\r\n            try {\r\n                const querySnapshot = await getDocs(collection(db, \"companies\"));\r\n                const companyList = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    companyList.push({ id: doc.id, ...doc.data() });\r\n                });\r\n                setCompanies(companyList);\r\n            } catch (err) {\r\n                console.error(\"Error fetching companies:\", err);\r\n                setError(\"Failed to load companies.\");\r\n            }\r\n        };\r\n\r\n        fetchCompanies();\r\n    }, []);\r\n\r\n    // Generate blueprint handler\r\n    const handleGenerateBlueprint = async (targetCompany) => {\r\n        const targetEmail = targetCompany.email;\r\n        if (!currentUserEmail) {\r\n            setError(\"You must be signed in to generate a blueprint.\");\r\n            return;\r\n        }\r\n        if (!targetEmail) {\r\n            setError(\"Target company email is missing.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(\"\");\r\n        setBlueprint(\"\");\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/generateBlueprint\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    companyName: targetEmail.split(\"@\")[0] || \"Unnamed Company\",\r\n                    description: `Collaboration with ${targetEmail}`,\r\n                    goals: `Exchange waste and resources between ${currentUserEmail} and ${targetEmail}`,\r\n                    companyEmails: [currentUserEmail, targetEmail],\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                setError(data.error || \"Failed to generate blueprint.\");\r\n            } else if (data.blueprint) {\r\n                setBlueprint(data.blueprint);\r\n            } else {\r\n                setError(\"Blueprint generation failed: No content returned.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error generating blueprint:\", err);\r\n            setError(\"Network or server error. Please try again.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\" }}>\r\n            <h1>Dashboard</h1>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\" }}>\r\n                {companies\r\n                    .filter((c) => c.email !== currentUserEmail)\r\n                    .map((company) => (\r\n                        <div\r\n                            key={company.id}\r\n                            style={{\r\n                                border: \"1px solid #ccc\",\r\n                                padding: \"15px\",\r\n                                borderRadius: \"10px\",\r\n                                width: \"250px\",\r\n                            }}\r\n                        >\r\n                            <h3>{company.name}</h3>\r\n                            <p>Email: {company.email}</p>\r\n                            <button\r\n                                onClick={() => handleGenerateBlueprint(company)}\r\n                                disabled={loading}\r\n                                style={{\r\n                                    padding: \"8px 12px\",\r\n                                    borderRadius: \"5px\",\r\n                                    backgroundColor: \"#4caf50\",\r\n                                    color: \"#fff\",\r\n                                    border: \"none\",\r\n                                    cursor: \"pointer\",\r\n                                }}\r\n                            >\r\n                                {loading ? \"Generating...\" : \"Generate Blueprint\"}\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n\r\n            {blueprint && (\r\n                <div\r\n                    style={{\r\n                        marginTop: \"20px\",\r\n                        padding: \"15px\",\r\n                        border: \"1px solid #aaa\",\r\n                        borderRadius: \"10px\",\r\n                        maxHeight: \"400px\",\r\n                        overflowY: \"auto\",\r\n                        backgroundColor: \"#f9f9f9\",\r\n                        whiteSpace: \"pre-wrap\",\r\n                    }}\r\n                >\r\n                    <h2>Generated Blueprint</h2>\r\n                    <pre>{blueprint}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}