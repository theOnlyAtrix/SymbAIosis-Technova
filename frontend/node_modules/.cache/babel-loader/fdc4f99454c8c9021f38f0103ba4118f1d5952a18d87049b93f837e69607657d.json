{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\NodalGraph.jsx\",\n  _s = $RefreshSig$();\n// NodalGraph.jsx\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport ReactFlow, { ReactFlowProvider, Background, Controls, useNodesState, useEdgesState } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NodalGraph = ({\n  companies,\n  currentUserEmail\n}) => {\n  _s();\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // Initialize nodes\n  const initialNodes = useMemo(() => companies.map((c, i) => ({\n    id: c.id.toString(),\n    position: c.position || {\n      x: i * 200,\n      y: i * 150\n    },\n    data: {\n      label: c.name,\n      email: c.email,\n      produces: Array.isArray(c.produces) ? c.produces : [],\n      needs: Array.isArray(c.needs) ? c.needs : []\n    },\n    style: {\n      background: c.email === currentUserEmail ? \"red\" : \"#fff\",\n      color: \"#000\",\n      border: \"2px solid #222\",\n      width: 150,\n      height: 50,\n      borderRadius: 50,\n      textAlign: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      cursor: \"pointer\"\n    }\n  })), [companies, currentUserEmail]);\n  const [nodes, setNodes] = useState(() => companies.map((c, i) => ({\n    id: c.id.toString(),\n    position: c.position || {\n      x: i * 200,\n      y: i * 150\n    },\n    data: {\n      label: c.name,\n      email: c.email,\n      produces: Array.isArray(c.produces) ? c.produces : [],\n      needs: Array.isArray(c.needs) ? c.needs : []\n    },\n    style: {\n      background: c.email === currentUserEmail ? \"red\" : \"#fff\",\n      color: \"#000\",\n      border: \"2px solid #222\",\n      width: 150,\n      height: 50,\n      borderRadius: 50,\n      textAlign: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  })));\n  const [edges, setEdges] = useState(() => {\n    const e = [];\n    companies.forEach(c1 => {\n      companies.forEach(c2 => {\n        if (Array.isArray(c1.needs) && Array.isArray(c2.produces) && c1.needs.some(n => c2.produces.includes(n))) {\n          e.push({\n            id: `e${c1.id}-${c2.id}`,\n            source: c2.id.toString(),\n            target: c1.id.toString(),\n            animated: true,\n            style: {\n              stroke: \"#888\"\n            }\n          });\n        }\n      });\n    });\n    return e;\n  });\n\n  // Create edges based on company produces/needs correlation\n  const initialEdges = useMemo(() => {\n    const edges = [];\n    companies.forEach(c1 => {\n      companies.forEach(c2 => {\n        var _c1$needs;\n        if ((_c1$needs = c1.needs) !== null && _c1$needs !== void 0 && _c1$needs.some(need => Array.isArray(c2.produces) && c2.produces.includes(need))) {\n          edges.push({\n            id: `e${c1.id}-${c2.id}`,\n            source: c2.id.toString(),\n            target: c1.id.toString(),\n            animated: true,\n            style: {\n              stroke: \"#888\"\n            }\n          });\n        }\n      });\n    });\n    return edges;\n  }, [companies]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"80vh\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onNodeClick: onNodeClick,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          left: selectedNode.position.x + 160,\n          // offset to the right\n          top: selectedNode.position.y,\n          background: \"#fff\",\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          border: \"1px solid #222\",\n          boxShadow: \"0px 0px 8px rgba(0,0,0,0.2)\",\n          zIndex: 10,\n          width: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedNode.data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Email: \", selectedNode.data.email || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Produces:\", \" \", Array.isArray(selectedNode.data.produces) ? selectedNode.data.produces.join(\", \") : \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Needs:\", \" \", Array.isArray(selectedNode.data.needs) ? selectedNode.data.needs.join(\", \") : \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(NodalGraph, \"RAiuPgPJr97F8QMfZk8Ax+p1ysU=\");\n_c = NodalGraph;\nexport default NodalGraph;\nvar _c;\n$RefreshReg$(_c, \"NodalGraph\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","ReactFlow","ReactFlowProvider","Background","Controls","useNodesState","useEdgesState","jsxDEV","_jsxDEV","NodalGraph","companies","currentUserEmail","_s","selectedNode","setSelectedNode","initialNodes","map","c","i","id","toString","position","x","y","data","label","name","email","produces","Array","isArray","needs","style","background","color","border","width","height","borderRadius","textAlign","display","justifyContent","alignItems","cursor","nodes","setNodes","edges","setEdges","e","forEach","c1","c2","some","n","includes","push","source","target","animated","stroke","initialEdges","_c1$needs","need","onNodeClick","event","node","children","onNodesChange","onEdgesChange","fitView","gap","fileName","_jsxFileName","lineNumber","columnNumber","left","top","padding","boxShadow","zIndex","join","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/NodalGraph.jsx"],"sourcesContent":["// NodalGraph.jsx\r\nimport React, { useState, useCallback, useMemo } from \"react\";\r\nimport ReactFlow, {\r\n    ReactFlowProvider,\r\n    Background,\r\n    Controls,\r\n    useNodesState,\r\n    useEdgesState,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nconst NodalGraph = ({ companies, currentUserEmail }) => {\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n    // Initialize nodes\r\n    const initialNodes = useMemo(() => companies.map((c, i) => ({\r\n        id: c.id.toString(),\r\n        position: c.position || { x: i * 200, y: i * 150 },\r\n        data: {\r\n            label: c.name,\r\n            email: c.email,\r\n            produces: Array.isArray(c.produces) ? c.produces : [],\r\n            needs: Array.isArray(c.needs) ? c.needs : [],\r\n        },\r\n        style: {\r\n            background: c.email === currentUserEmail ? \"red\" : \"#fff\",\r\n            color: \"#000\",\r\n            border: \"2px solid #222\",\r\n            width: 150,\r\n            height: 50,\r\n            borderRadius: 50,\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            cursor: \"pointer\",\r\n        },\r\n    })), [companies, currentUserEmail]);\r\n\r\n    const [nodes, setNodes] = useState(() =>\r\n        companies.map((c, i) => ({\r\n            id: c.id.toString(),\r\n            position: c.position || { x: i * 200, y: i * 150 },\r\n            data: {\r\n                label: c.name,\r\n                email: c.email,\r\n                produces: Array.isArray(c.produces) ? c.produces : [],\r\n                needs: Array.isArray(c.needs) ? c.needs : [],\r\n            },\r\n            style: {\r\n                background: c.email === currentUserEmail ? \"red\" : \"#fff\",\r\n                color: \"#000\",\r\n                border: \"2px solid #222\",\r\n                width: 150,\r\n                height: 50,\r\n                borderRadius: 50,\r\n                textAlign: \"center\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n        }))\r\n    );\r\n\r\n    const [edges, setEdges] = useState(() => {\r\n        const e = [];\r\n        companies.forEach((c1) => {\r\n            companies.forEach((c2) => {\r\n                if (\r\n                    Array.isArray(c1.needs) &&\r\n                    Array.isArray(c2.produces) &&\r\n                    c1.needs.some((n) => c2.produces.includes(n))\r\n                ) {\r\n                    e.push({\r\n                        id: `e${c1.id}-${c2.id}`,\r\n                        source: c2.id.toString(),\r\n                        target: c1.id.toString(),\r\n                        animated: true,\r\n                        style: { stroke: \"#888\" },\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return e;\r\n    });\r\n\r\n    // Create edges based on company produces/needs correlation\r\n    const initialEdges = useMemo(() => {\r\n        const edges = [];\r\n        companies.forEach((c1) => {\r\n            companies.forEach((c2) => {\r\n                if (\r\n                    c1.needs?.some((need) =>\r\n                        Array.isArray(c2.produces) && c2.produces.includes(need)\r\n                    )\r\n                ) {\r\n                    edges.push({\r\n                        id: `e${c1.id}-${c2.id}`,\r\n                        source: c2.id.toString(),\r\n                        target: c1.id.toString(),\r\n                        animated: true,\r\n                        style: { stroke: \"#888\" },\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return edges;\r\n    }, [companies]);\r\n\r\n    const onNodeClick = useCallback((event, node) => {\r\n        setSelectedNode(node);\r\n    }, []);\r\n\r\n    return (\r\n        <ReactFlowProvider>\r\n            <div style={{ width: \"100%\", height: \"80vh\", position: \"relative\" }}>\r\n                <ReactFlow\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodesChange={onNodesChange}\r\n                    onEdgesChange={onEdgesChange}\r\n                    onNodeClick={onNodeClick}\r\n                    fitView\r\n                >\r\n                    <Background color=\"#aaa\" gap={16} />\r\n                    <Controls />\r\n                </ReactFlow>\r\n\r\n                {/* Bubble for selected node */}\r\n                {selectedNode && (\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            left: selectedNode.position.x + 160, // offset to the right\r\n                            top: selectedNode.position.y,\r\n                            background: \"#fff\",\r\n                            padding: \"10px\",\r\n                            borderRadius: \"8px\",\r\n                            border: \"1px solid #222\",\r\n                            boxShadow: \"0px 0px 8px rgba(0,0,0,0.2)\",\r\n                            zIndex: 10,\r\n                            width: 200,\r\n                        }}\r\n                    >\r\n                        <strong>{selectedNode.data.label}</strong>\r\n                        <div>Email: {selectedNode.data.email || \"N/A\"}</div>\r\n                        <div>\r\n                            Produces:{\" \"}\r\n                            {Array.isArray(selectedNode.data.produces)\r\n                                ? selectedNode.data.produces.join(\", \")\r\n                                : \"N/A\"}\r\n                        </div>\r\n                        <div>\r\n                            Needs:{\" \"}\r\n                            {Array.isArray(selectedNode.data.needs)\r\n                                ? selectedNode.data.needs.join(\", \")\r\n                                : \"N/A\"}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </ReactFlowProvider>\r\n    );\r\n};\r\n\r\nexport default NodalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}