{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// Dashboard.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport NodalGraph from \"./NodalGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [currentUserEmail, setCurrentUserEmail] = useState(\"\");\n  const [currentUserCompany, setCurrentUserCompany] = useState(null);\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [blueprint, setBlueprint] = useState(\"\");\n\n  // Get current user email\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) setCurrentUserEmail(user.email);else setCurrentUserEmail(\"\");\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // Fetch all companies and current user's company info\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"companies\"));\n        const companyList = [];\n        let currentCompany = null;\n        querySnapshot.forEach(doc => {\n          const data = doc.data();\n          const company = {\n            id: doc.id,\n            ...data\n          };\n          companyList.push(company);\n          if (data.email === currentUserEmail) {\n            currentCompany = company;\n          }\n        });\n        setCompanies(companyList);\n        setCurrentUserCompany(currentCompany);\n      } catch (err) {\n        console.error(\"Error fetching companies:\", err);\n        setError(\"Failed to load companies.\");\n      }\n    };\n    if (currentUserEmail) fetchCompanies();\n  }, [currentUserEmail]);\n\n  // Check if two companies have a correlation\n  const hasCorrelation = (companyA, companyB) => {\n    if (!companyA || !companyB) return false;\n    const aProduces = Array.isArray(companyA.produces) ? companyA.produces : [];\n    const aNeeds = Array.isArray(companyA.needs) ? companyA.needs : [];\n    const bProduces = Array.isArray(companyB.produces) ? companyB.produces : [];\n    const bNeeds = Array.isArray(companyB.needs) ? companyB.needs : [];\n    const aProducesBNeeds = aProduces.some(item => bNeeds.includes(item));\n    const bProducesANeeds = bProduces.some(item => aNeeds.includes(item));\n    return aProducesBNeeds || bProducesANeeds;\n  };\n\n  // Generate blueprint handler\n  const handleGenerateBlueprint = async targetCompany => {\n    if (!currentUserCompany || !targetCompany) {\n      setError(\"Missing company information.\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setBlueprint(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/generateBlueprint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          companyName: targetCompany.name || targetCompany.email.split(\"@\")[0],\n          description: `Collaboration between ${currentUserCompany.name} and ${targetCompany.name}`,\n          goals: `Exchange waste and resources between ${currentUserCompany.name} and ${targetCompany.name}`,\n          companyEmails: [currentUserCompany.email, targetCompany.email]\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.error || \"Failed to generate blueprint.\");\n      } else if (data.blueprint) {\n        setBlueprint(data.blueprint);\n      } else {\n        setError(\"Blueprint generation failed: No content returned.\");\n      }\n    } catch (err) {\n      console.error(\"Error generating blueprint:\", err);\n      setError(\"Network or server error. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!currentUserEmail) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please sign in to view dashboard.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Company Nodal Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NodalGraph, {\n        companies: companies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"20px\"\n      },\n      children: companies.filter(c => c.email !== currentUserEmail).map(company => {\n        const enabled = hasCorrelation(currentUserCompany, company);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            padding: \"15px\",\n            borderRadius: \"10px\",\n            width: \"250px\",\n            backgroundColor: enabled ? \"#fff\" : \"#f5f5f5\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", company.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleGenerateBlueprint(company),\n            disabled: loading || !enabled,\n            style: {\n              padding: \"8px 12px\",\n              borderRadius: \"5px\",\n              backgroundColor: enabled ? \"#4caf50\" : \"#999\",\n              color: \"#fff\",\n              border: \"none\",\n              cursor: loading || !enabled ? \"not-allowed\" : \"pointer\",\n              opacity: loading || !enabled ? 0.5 : 1\n            },\n            children: loading ? \"Generating...\" : \"Generate Blueprint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this), !enabled && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"12px\",\n              color: \"#555\"\n            },\n            children: \"No matching resources/waste to exchange.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 37\n          }, this)]\n        }, company.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), blueprint && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        padding: \"15px\",\n        border: \"1px solid #aaa\",\n        borderRadius: \"10px\",\n        maxHeight: \"400px\",\n        overflowY: \"auto\",\n        backgroundColor: \"#f9f9f9\",\n        whiteSpace: \"pre-wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Blueprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: blueprint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"+7co1kykvR/F/8dZ2zi2b79OlAY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","auth","db","onAuthStateChanged","collection","getDocs","query","where","NodalGraph","jsxDEV","_jsxDEV","Dashboard","_s","currentUserEmail","setCurrentUserEmail","currentUserCompany","setCurrentUserCompany","companies","setCompanies","loading","setLoading","error","setError","blueprint","setBlueprint","unsubscribe","user","email","fetchCompanies","querySnapshot","companyList","currentCompany","forEach","doc","data","company","id","push","err","console","hasCorrelation","companyA","companyB","aProduces","Array","isArray","produces","aNeeds","needs","bProduces","bNeeds","aProducesBNeeds","some","item","includes","bProducesANeeds","handleGenerateBlueprint","targetCompany","response","fetch","method","headers","body","JSON","stringify","companyName","name","split","description","goals","companyEmails","json","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","color","marginTop","display","flexWrap","gap","filter","c","map","enabled","border","borderRadius","width","backgroundColor","onClick","disabled","cursor","opacity","fontSize","maxHeight","overflowY","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/Dashboard.jsx"],"sourcesContent":["// Dashboard.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport NodalGraph from \"./NodalGraph\";\r\n\r\nconst Dashboard = () => {\r\n    const [currentUserEmail, setCurrentUserEmail] = useState(\"\");\r\n    const [currentUserCompany, setCurrentUserCompany] = useState(null);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [blueprint, setBlueprint] = useState(\"\");\r\n\r\n    // Get current user email\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            if (user) setCurrentUserEmail(user.email);\r\n            else setCurrentUserEmail(\"\");\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Fetch all companies and current user's company info\r\n    useEffect(() => {\r\n        const fetchCompanies = async () => {\r\n            try {\r\n                const querySnapshot = await getDocs(collection(db, \"companies\"));\r\n                const companyList = [];\r\n                let currentCompany = null;\r\n\r\n                querySnapshot.forEach((doc) => {\r\n                    const data = doc.data();\r\n                    const company = { id: doc.id, ...data };\r\n                    companyList.push(company);\r\n\r\n                    if (data.email === currentUserEmail) {\r\n                        currentCompany = company;\r\n                    }\r\n                });\r\n\r\n                setCompanies(companyList);\r\n                setCurrentUserCompany(currentCompany);\r\n            } catch (err) {\r\n                console.error(\"Error fetching companies:\", err);\r\n                setError(\"Failed to load companies.\");\r\n            }\r\n        };\r\n\r\n        if (currentUserEmail) fetchCompanies();\r\n    }, [currentUserEmail]);\r\n\r\n    // Check if two companies have a correlation\r\n    const hasCorrelation = (companyA, companyB) => {\r\n        if (!companyA || !companyB) return false;\r\n\r\n        const aProduces = Array.isArray(companyA.produces) ? companyA.produces : [];\r\n        const aNeeds = Array.isArray(companyA.needs) ? companyA.needs : [];\r\n        const bProduces = Array.isArray(companyB.produces) ? companyB.produces : [];\r\n        const bNeeds = Array.isArray(companyB.needs) ? companyB.needs : [];\r\n\r\n        const aProducesBNeeds = aProduces.some((item) => bNeeds.includes(item));\r\n        const bProducesANeeds = bProduces.some((item) => aNeeds.includes(item));\r\n\r\n        return aProducesBNeeds || bProducesANeeds;\r\n    };\r\n\r\n    // Generate blueprint handler\r\n    const handleGenerateBlueprint = async (targetCompany) => {\r\n        if (!currentUserCompany || !targetCompany) {\r\n            setError(\"Missing company information.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(\"\");\r\n        setBlueprint(\"\");\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/generateBlueprint\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    companyName: targetCompany.name || targetCompany.email.split(\"@\")[0],\r\n                    description: `Collaboration between ${currentUserCompany.name} and ${targetCompany.name}`,\r\n                    goals: `Exchange waste and resources between ${currentUserCompany.name} and ${targetCompany.name}`,\r\n                    companyEmails: [currentUserCompany.email, targetCompany.email],\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                setError(data.error || \"Failed to generate blueprint.\");\r\n            } else if (data.blueprint) {\r\n                setBlueprint(data.blueprint);\r\n            } else {\r\n                setError(\"Blueprint generation failed: No content returned.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error generating blueprint:\", err);\r\n            setError(\"Network or server error. Please try again.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!currentUserEmail) return <p>Please sign in to view dashboard.</p>;\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\" }}>\r\n            <h1>Dashboard</h1>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n            <div style={{ marginTop: \"30px\" }}>\r\n                <h2>Company Nodal Map</h2>\r\n                <NodalGraph companies={companies} />\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\" }}>\r\n                {companies\r\n                    .filter((c) => c.email !== currentUserEmail)\r\n                    .map((company) => {\r\n                        const enabled = hasCorrelation(currentUserCompany, company);\r\n                        return (\r\n                            <div\r\n                                key={company.id}\r\n                                style={{\r\n                                    border: \"1px solid #ccc\",\r\n                                    padding: \"15px\",\r\n                                    borderRadius: \"10px\",\r\n                                    width: \"250px\",\r\n                                    backgroundColor: enabled ? \"#fff\" : \"#f5f5f5\",\r\n                                }}\r\n                            >\r\n                                <h3>{company.name}</h3>\r\n                                <p>Email: {company.email}</p>\r\n                                <button\r\n                                    onClick={() => handleGenerateBlueprint(company)}\r\n                                    disabled={loading || !enabled}\r\n                                    style={{\r\n                                        padding: \"8px 12px\",\r\n                                        borderRadius: \"5px\",\r\n                                        backgroundColor: enabled ? \"#4caf50\" : \"#999\",\r\n                                        color: \"#fff\",\r\n                                        border: \"none\",\r\n                                        cursor:\r\n                                            loading || !enabled ? \"not-allowed\" : \"pointer\",\r\n                                        opacity: loading || !enabled ? 0.5 : 1,\r\n                                    }}\r\n                                >\r\n                                    {loading ? \"Generating...\" : \"Generate Blueprint\"}\r\n                                </button>\r\n                                {!enabled && (\r\n                                    <p style={{ fontSize: \"12px\", color: \"#555\" }}>\r\n                                        No matching resources/waste to exchange.\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </div>\r\n\r\n            {blueprint && (\r\n                <div\r\n                    style={{\r\n                        marginTop: \"20px\",\r\n                        padding: \"15px\",\r\n                        border: \"1px solid #aaa\",\r\n                        borderRadius: \"10px\",\r\n                        maxHeight: \"400px\",\r\n                        overflowY: \"auto\",\r\n                        backgroundColor: \"#f9f9f9\",\r\n                        whiteSpace: \"pre-wrap\",\r\n                    }}\r\n                >\r\n                    <h2>Generated Blueprint</h2>\r\n                    <pre>{blueprint}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}