{"ast":null,"code":"import React, { memo, useRef, useEffect } from 'react';\nimport cc from 'classcat';\nimport { shallow } from 'zustand/shallow';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { useStore, getNodePositionWithOrigin, useStoreApi, Panel, getBoundsOfRects, getNodesBounds } from '@reactflow/core';\nconst MiniMapNode = _ref => {\n  let {\n    id,\n    x,\n    y,\n    width,\n    height,\n    style,\n    color,\n    strokeColor,\n    strokeWidth,\n    className,\n    borderRadius,\n    shapeRendering,\n    onClick,\n    selected\n  } = _ref;\n  const {\n    background,\n    backgroundColor\n  } = style || {};\n  const fill = color || background || backgroundColor;\n  return React.createElement(\"rect\", {\n    className: cc(['react-flow__minimap-node', {\n      selected\n    }, className]),\n    x: x,\n    y: y,\n    rx: borderRadius,\n    ry: borderRadius,\n    width: width,\n    height: height,\n    fill: fill,\n    stroke: strokeColor,\n    strokeWidth: strokeWidth,\n    shapeRendering: shapeRendering,\n    onClick: onClick ? event => onClick(event, id) : undefined\n  });\n};\nMiniMapNode.displayName = 'MiniMapNode';\nvar MiniMapNode$1 = memo(MiniMapNode);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst selector$1 = s => s.nodeOrigin;\nconst selectorNodes = s => s.getNodes().filter(node => !node.hidden && node.width && node.height);\nconst getAttrFunction = func => func instanceof Function ? func : () => func;\nfunction MiniMapNodes(_ref2) {\n  let {\n    nodeStrokeColor = 'transparent',\n    nodeColor = '#e2e2e2',\n    nodeClassName = '',\n    nodeBorderRadius = 5,\n    nodeStrokeWidth = 2,\n    // We need to rename the prop to be `CapitalCase` so that JSX will render it as\n    // a component properly.\n    nodeComponent: NodeComponent = MiniMapNode$1,\n    onClick\n  } = _ref2;\n  const nodes = useStore(selectorNodes, shallow);\n  const nodeOrigin = useStore(selector$1);\n  const nodeColorFunc = getAttrFunction(nodeColor);\n  const nodeStrokeColorFunc = getAttrFunction(nodeStrokeColor);\n  const nodeClassNameFunc = getAttrFunction(nodeClassName);\n  const shapeRendering = typeof window === 'undefined' || !!window.chrome ? 'crispEdges' : 'geometricPrecision';\n  return React.createElement(React.Fragment, null, nodes.map(node => {\n    const {\n      x,\n      y\n    } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n    return React.createElement(NodeComponent, {\n      key: node.id,\n      x: x,\n      y: y,\n      width: node.width,\n      height: node.height,\n      style: node.style,\n      selected: node.selected,\n      className: nodeClassNameFunc(node),\n      color: nodeColorFunc(node),\n      borderRadius: nodeBorderRadius,\n      strokeColor: nodeStrokeColorFunc(node),\n      strokeWidth: nodeStrokeWidth,\n      shapeRendering: shapeRendering,\n      onClick: onClick,\n      id: node.id\n    });\n  }));\n}\nvar MiniMapNodes$1 = memo(MiniMapNodes);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst defaultWidth = 200;\nconst defaultHeight = 150;\nconst selector = s => {\n  const nodes = s.getNodes();\n  const viewBB = {\n    x: -s.transform[0] / s.transform[2],\n    y: -s.transform[1] / s.transform[2],\n    width: s.width / s.transform[2],\n    height: s.height / s.transform[2]\n  };\n  return {\n    viewBB,\n    boundingRect: nodes.length > 0 ? getBoundsOfRects(getNodesBounds(nodes, s.nodeOrigin), viewBB) : viewBB,\n    rfId: s.rfId\n  };\n};\nconst ARIA_LABEL_KEY = 'react-flow__minimap-desc';\nfunction MiniMap(_ref3) {\n  var _style$width, _style$height;\n  let {\n    style,\n    className,\n    nodeStrokeColor = 'transparent',\n    nodeColor = '#e2e2e2',\n    nodeClassName = '',\n    nodeBorderRadius = 5,\n    nodeStrokeWidth = 2,\n    // We need to rename the prop to be `CapitalCase` so that JSX will render it as\n    // a component properly.\n    nodeComponent,\n    maskColor = 'rgb(240, 240, 240, 0.6)',\n    maskStrokeColor = 'none',\n    maskStrokeWidth = 1,\n    position = 'bottom-right',\n    onClick,\n    onNodeClick,\n    pannable = false,\n    zoomable = false,\n    ariaLabel = 'React Flow mini map',\n    inversePan = false,\n    zoomStep = 10,\n    offsetScale = 5\n  } = _ref3;\n  const store = useStoreApi();\n  const svg = useRef(null);\n  const {\n    boundingRect,\n    viewBB,\n    rfId\n  } = useStore(selector, shallow);\n  const elementWidth = (_style$width = style === null || style === void 0 ? void 0 : style.width) !== null && _style$width !== void 0 ? _style$width : defaultWidth;\n  const elementHeight = (_style$height = style === null || style === void 0 ? void 0 : style.height) !== null && _style$height !== void 0 ? _style$height : defaultHeight;\n  const scaledWidth = boundingRect.width / elementWidth;\n  const scaledHeight = boundingRect.height / elementHeight;\n  const viewScale = Math.max(scaledWidth, scaledHeight);\n  const viewWidth = viewScale * elementWidth;\n  const viewHeight = viewScale * elementHeight;\n  const offset = offsetScale * viewScale;\n  const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n  const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n  const width = viewWidth + offset * 2;\n  const height = viewHeight + offset * 2;\n  const labelledBy = \"\".concat(ARIA_LABEL_KEY, \"-\").concat(rfId);\n  const viewScaleRef = useRef(0);\n  viewScaleRef.current = viewScale;\n  useEffect(() => {\n    if (svg.current) {\n      const selection = select(svg.current);\n      const zoomHandler = event => {\n        const {\n          transform,\n          d3Selection,\n          d3Zoom\n        } = store.getState();\n        if (event.sourceEvent.type !== 'wheel' || !d3Selection || !d3Zoom) {\n          return;\n        }\n        const pinchDelta = -event.sourceEvent.deltaY * (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) * zoomStep;\n        const zoom = transform[2] * Math.pow(2, pinchDelta);\n        d3Zoom.scaleTo(d3Selection, zoom);\n      };\n      const panHandler = event => {\n        const {\n          transform,\n          d3Selection,\n          d3Zoom,\n          translateExtent,\n          width,\n          height\n        } = store.getState();\n        if (event.sourceEvent.type !== 'mousemove' || !d3Selection || !d3Zoom) {\n          return;\n        }\n        // @TODO: how to calculate the correct next position? Math.max(1, transform[2]) is a workaround.\n        const moveScale = viewScaleRef.current * Math.max(1, transform[2]) * (inversePan ? -1 : 1);\n        const position = {\n          x: transform[0] - event.sourceEvent.movementX * moveScale,\n          y: transform[1] - event.sourceEvent.movementY * moveScale\n        };\n        const extent = [[0, 0], [width, height]];\n        const nextTransform = zoomIdentity.translate(position.x, position.y).scale(transform[2]);\n        const constrainedTransform = d3Zoom.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n      };\n      const zoomAndPanHandler = zoom()\n      // @ts-ignore\n      .on('zoom', pannable ? panHandler : null)\n      // @ts-ignore\n      .on('zoom.wheel', zoomable ? zoomHandler : null);\n      selection.call(zoomAndPanHandler);\n      return () => {\n        selection.on('zoom', null);\n      };\n    }\n  }, [pannable, zoomable, inversePan, zoomStep]);\n  const onSvgClick = onClick ? event => {\n    const rfCoord = pointer(event);\n    onClick(event, {\n      x: rfCoord[0],\n      y: rfCoord[1]\n    });\n  } : undefined;\n  const onSvgNodeClick = onNodeClick ? (event, nodeId) => {\n    const node = store.getState().nodeInternals.get(nodeId);\n    onNodeClick(event, node);\n  } : undefined;\n  return React.createElement(Panel, {\n    position: position,\n    style: style,\n    className: cc(['react-flow__minimap', className]),\n    \"data-testid\": \"rf__minimap\"\n  }, React.createElement(\"svg\", {\n    width: elementWidth,\n    height: elementHeight,\n    viewBox: \"\".concat(x, \" \").concat(y, \" \").concat(width, \" \").concat(height),\n    role: \"img\",\n    \"aria-labelledby\": labelledBy,\n    ref: svg,\n    onClick: onSvgClick\n  }, ariaLabel && React.createElement(\"title\", {\n    id: labelledBy\n  }, ariaLabel), React.createElement(MiniMapNodes$1, {\n    onClick: onSvgNodeClick,\n    nodeColor: nodeColor,\n    nodeStrokeColor: nodeStrokeColor,\n    nodeBorderRadius: nodeBorderRadius,\n    nodeClassName: nodeClassName,\n    nodeStrokeWidth: nodeStrokeWidth,\n    nodeComponent: nodeComponent\n  }), React.createElement(\"path\", {\n    className: \"react-flow__minimap-mask\",\n    d: \"M\".concat(x - offset, \",\").concat(y - offset, \"h\").concat(width + offset * 2, \"v\").concat(height + offset * 2, \"h\").concat(-width - offset * 2, \"z\\n        M\").concat(viewBB.x, \",\").concat(viewBB.y, \"h\").concat(viewBB.width, \"v\").concat(viewBB.height, \"h\").concat(-viewBB.width, \"z\"),\n    fill: maskColor,\n    fillRule: \"evenodd\",\n    stroke: maskStrokeColor,\n    strokeWidth: maskStrokeWidth,\n    pointerEvents: \"none\"\n  })));\n}\nMiniMap.displayName = 'MiniMap';\nvar MiniMap$1 = memo(MiniMap);\nexport { MiniMap$1 as MiniMap };","map":{"version":3,"names":["React","memo","useRef","useEffect","cc","shallow","zoom","zoomIdentity","select","pointer","useStore","getNodePositionWithOrigin","useStoreApi","Panel","getBoundsOfRects","getNodesBounds","MiniMapNode","_ref","id","x","y","width","height","style","color","strokeColor","strokeWidth","className","borderRadius","shapeRendering","onClick","selected","background","backgroundColor","fill","createElement","rx","ry","stroke","event","undefined","displayName","MiniMapNode$1","selector$1","s","nodeOrigin","selectorNodes","getNodes","filter","node","hidden","getAttrFunction","func","Function","MiniMapNodes","_ref2","nodeStrokeColor","nodeColor","nodeClassName","nodeBorderRadius","nodeStrokeWidth","nodeComponent","NodeComponent","nodes","nodeColorFunc","nodeStrokeColorFunc","nodeClassNameFunc","window","chrome","Fragment","map","positionAbsolute","key","MiniMapNodes$1","defaultWidth","defaultHeight","selector","viewBB","transform","boundingRect","length","rfId","ARIA_LABEL_KEY","MiniMap","_ref3","_style$width","_style$height","maskColor","maskStrokeColor","maskStrokeWidth","position","onNodeClick","pannable","zoomable","ariaLabel","inversePan","zoomStep","offsetScale","store","svg","elementWidth","elementHeight","scaledWidth","scaledHeight","viewScale","Math","max","viewWidth","viewHeight","offset","labelledBy","concat","viewScaleRef","current","selection","zoomHandler","d3Selection","d3Zoom","getState","sourceEvent","type","pinchDelta","deltaY","deltaMode","pow","scaleTo","panHandler","translateExtent","moveScale","movementX","movementY","extent","nextTransform","translate","scale","constrainedTransform","constrain","zoomAndPanHandler","on","call","onSvgClick","rfCoord","onSvgNodeClick","nodeId","nodeInternals","get","viewBox","role","ref","d","fillRule","pointerEvents","MiniMap$1"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/node_modules/@reactflow/minimap/dist/esm/index.mjs"],"sourcesContent":["import React, { memo, useRef, useEffect } from 'react';\nimport cc from 'classcat';\nimport { shallow } from 'zustand/shallow';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { useStore, getNodePositionWithOrigin, useStoreApi, Panel, getBoundsOfRects, getNodesBounds } from '@reactflow/core';\n\nconst MiniMapNode = ({ id, x, y, width, height, style, color, strokeColor, strokeWidth, className, borderRadius, shapeRendering, onClick, selected, }) => {\n    const { background, backgroundColor } = style || {};\n    const fill = (color || background || backgroundColor);\n    return (React.createElement(\"rect\", { className: cc(['react-flow__minimap-node', { selected }, className]), x: x, y: y, rx: borderRadius, ry: borderRadius, width: width, height: height, fill: fill, stroke: strokeColor, strokeWidth: strokeWidth, shapeRendering: shapeRendering, onClick: onClick ? (event) => onClick(event, id) : undefined }));\n};\nMiniMapNode.displayName = 'MiniMapNode';\nvar MiniMapNode$1 = memo(MiniMapNode);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst selector$1 = (s) => s.nodeOrigin;\nconst selectorNodes = (s) => s.getNodes().filter((node) => !node.hidden && node.width && node.height);\nconst getAttrFunction = (func) => (func instanceof Function ? func : () => func);\nfunction MiniMapNodes({ nodeStrokeColor = 'transparent', nodeColor = '#e2e2e2', nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth = 2, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent: NodeComponent = MiniMapNode$1, onClick, }) {\n    const nodes = useStore(selectorNodes, shallow);\n    const nodeOrigin = useStore(selector$1);\n    const nodeColorFunc = getAttrFunction(nodeColor);\n    const nodeStrokeColorFunc = getAttrFunction(nodeStrokeColor);\n    const nodeClassNameFunc = getAttrFunction(nodeClassName);\n    const shapeRendering = typeof window === 'undefined' || !!window.chrome ? 'crispEdges' : 'geometricPrecision';\n    return (React.createElement(React.Fragment, null, nodes.map((node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return (React.createElement(NodeComponent, { key: node.id, x: x, y: y, width: node.width, height: node.height, style: node.style, selected: node.selected, className: nodeClassNameFunc(node), color: nodeColorFunc(node), borderRadius: nodeBorderRadius, strokeColor: nodeStrokeColorFunc(node), strokeWidth: nodeStrokeWidth, shapeRendering: shapeRendering, onClick: onClick, id: node.id }));\n    })));\n}\nvar MiniMapNodes$1 = memo(MiniMapNodes);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst defaultWidth = 200;\nconst defaultHeight = 150;\nconst selector = (s) => {\n    const nodes = s.getNodes();\n    const viewBB = {\n        x: -s.transform[0] / s.transform[2],\n        y: -s.transform[1] / s.transform[2],\n        width: s.width / s.transform[2],\n        height: s.height / s.transform[2],\n    };\n    return {\n        viewBB,\n        boundingRect: nodes.length > 0 ? getBoundsOfRects(getNodesBounds(nodes, s.nodeOrigin), viewBB) : viewBB,\n        rfId: s.rfId,\n    };\n};\nconst ARIA_LABEL_KEY = 'react-flow__minimap-desc';\nfunction MiniMap({ style, className, nodeStrokeColor = 'transparent', nodeColor = '#e2e2e2', nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth = 2, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent, maskColor = 'rgb(240, 240, 240, 0.6)', maskStrokeColor = 'none', maskStrokeWidth = 1, position = 'bottom-right', onClick, onNodeClick, pannable = false, zoomable = false, ariaLabel = 'React Flow mini map', inversePan = false, zoomStep = 10, offsetScale = 5, }) {\n    const store = useStoreApi();\n    const svg = useRef(null);\n    const { boundingRect, viewBB, rfId } = useStore(selector, shallow);\n    const elementWidth = style?.width ?? defaultWidth;\n    const elementHeight = style?.height ?? defaultHeight;\n    const scaledWidth = boundingRect.width / elementWidth;\n    const scaledHeight = boundingRect.height / elementHeight;\n    const viewScale = Math.max(scaledWidth, scaledHeight);\n    const viewWidth = viewScale * elementWidth;\n    const viewHeight = viewScale * elementHeight;\n    const offset = offsetScale * viewScale;\n    const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n    const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n    const width = viewWidth + offset * 2;\n    const height = viewHeight + offset * 2;\n    const labelledBy = `${ARIA_LABEL_KEY}-${rfId}`;\n    const viewScaleRef = useRef(0);\n    viewScaleRef.current = viewScale;\n    useEffect(() => {\n        if (svg.current) {\n            const selection = select(svg.current);\n            const zoomHandler = (event) => {\n                const { transform, d3Selection, d3Zoom } = store.getState();\n                if (event.sourceEvent.type !== 'wheel' || !d3Selection || !d3Zoom) {\n                    return;\n                }\n                const pinchDelta = -event.sourceEvent.deltaY *\n                    (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) *\n                    zoomStep;\n                const zoom = transform[2] * Math.pow(2, pinchDelta);\n                d3Zoom.scaleTo(d3Selection, zoom);\n            };\n            const panHandler = (event) => {\n                const { transform, d3Selection, d3Zoom, translateExtent, width, height } = store.getState();\n                if (event.sourceEvent.type !== 'mousemove' || !d3Selection || !d3Zoom) {\n                    return;\n                }\n                // @TODO: how to calculate the correct next position? Math.max(1, transform[2]) is a workaround.\n                const moveScale = viewScaleRef.current * Math.max(1, transform[2]) * (inversePan ? -1 : 1);\n                const position = {\n                    x: transform[0] - event.sourceEvent.movementX * moveScale,\n                    y: transform[1] - event.sourceEvent.movementY * moveScale,\n                };\n                const extent = [\n                    [0, 0],\n                    [width, height],\n                ];\n                const nextTransform = zoomIdentity.translate(position.x, position.y).scale(transform[2]);\n                const constrainedTransform = d3Zoom.constrain()(nextTransform, extent, translateExtent);\n                d3Zoom.transform(d3Selection, constrainedTransform);\n            };\n            const zoomAndPanHandler = zoom()\n                // @ts-ignore\n                .on('zoom', pannable ? panHandler : null)\n                // @ts-ignore\n                .on('zoom.wheel', zoomable ? zoomHandler : null);\n            selection.call(zoomAndPanHandler);\n            return () => {\n                selection.on('zoom', null);\n            };\n        }\n    }, [pannable, zoomable, inversePan, zoomStep]);\n    const onSvgClick = onClick\n        ? (event) => {\n            const rfCoord = pointer(event);\n            onClick(event, { x: rfCoord[0], y: rfCoord[1] });\n        }\n        : undefined;\n    const onSvgNodeClick = onNodeClick\n        ? (event, nodeId) => {\n            const node = store.getState().nodeInternals.get(nodeId);\n            onNodeClick(event, node);\n        }\n        : undefined;\n    return (React.createElement(Panel, { position: position, style: style, className: cc(['react-flow__minimap', className]), \"data-testid\": \"rf__minimap\" },\n        React.createElement(\"svg\", { width: elementWidth, height: elementHeight, viewBox: `${x} ${y} ${width} ${height}`, role: \"img\", \"aria-labelledby\": labelledBy, ref: svg, onClick: onSvgClick },\n            ariaLabel && React.createElement(\"title\", { id: labelledBy }, ariaLabel),\n            React.createElement(MiniMapNodes$1, { onClick: onSvgNodeClick, nodeColor: nodeColor, nodeStrokeColor: nodeStrokeColor, nodeBorderRadius: nodeBorderRadius, nodeClassName: nodeClassName, nodeStrokeWidth: nodeStrokeWidth, nodeComponent: nodeComponent }),\n            React.createElement(\"path\", { className: \"react-flow__minimap-mask\", d: `M${x - offset},${y - offset}h${width + offset * 2}v${height + offset * 2}h${-width - offset * 2}z\n        M${viewBB.x},${viewBB.y}h${viewBB.width}v${viewBB.height}h${-viewBB.width}z`, fill: maskColor, fillRule: \"evenodd\", stroke: maskStrokeColor, strokeWidth: maskStrokeWidth, pointerEvents: \"none\" }))));\n}\nMiniMap.displayName = 'MiniMap';\nvar MiniMap$1 = memo(MiniMap);\n\nexport { MiniMap$1 as MiniMap };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}