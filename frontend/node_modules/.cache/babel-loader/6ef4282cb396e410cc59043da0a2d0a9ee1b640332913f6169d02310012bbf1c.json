{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\NodalGraph.jsx\",\n  _s = $RefreshSig$();\n// NodalGraph.jsx\nimport React, { useState, useCallback } from \"react\";\nimport ReactFlow, { Background, Controls, MiniMap, MarkerType } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NodalGraph = ({\n  companies,\n  currentUserEmail\n}) => {\n  _s();\n  const [selectedNode, setSelectedNode] = useState(null);\n  if (!companies || companies.length === 0) return null;\n\n  // Convert companies to nodes\n  const nodes = companies.map((company, index) => {\n    var _company$emails;\n    const isCurrentUserCompany = (_company$emails = company.emails) === null || _company$emails === void 0 ? void 0 : _company$emails.includes(currentUserEmail);\n    return {\n      id: company.id || company.name,\n      type: \"default\",\n      position: {\n        x: 100 + index % 5 * 180,\n        y: 100 + Math.floor(index / 5) * 180\n      },\n      data: {\n        label: company.name,\n        company\n      },\n      style: {\n        background: isCurrentUserCompany ? \"#ef4444\" : \"#4ade80\",\n        color: \"#fff\",\n        border: \"2px solid #000\",\n        width: 100,\n        height: 100,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        borderRadius: \"50%\",\n        cursor: \"pointer\"\n      }\n    };\n  });\n\n  // Create edges for companies that have overlapping produces/needs\n  // Create edges for companies that have overlapping produces/needs\n  const edges = [];\n  companies.forEach(a => {\n    companies.forEach(b => {\n      if (a === b) return;\n      const produces = Array.isArray(a.produces) ? a.produces : [];\n      const needs = Array.isArray(b.needs) ? b.needs : [];\n      const hasMatch = produces.some(p => needs.includes(p));\n      if (hasMatch) {\n        edges.push({\n          id: `${a.id}-${b.id}`,\n          source: a.id || a.name,\n          target: b.id || b.name,\n          type: \"smoothstep\",\n          markerEnd: {\n            type: MarkerType.Arrow\n          },\n          style: {\n            stroke: \"#888\"\n          }\n        });\n      }\n    });\n  });\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node.data.company);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodeClick: onNodeClick,\n      fitView: true,\n      panOnDrag: true,\n      zoomOnScroll: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 15,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: n => n.style.background === \"#ef4444\" ? \"red\" : \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: \"50%\",\n        bottom: 20,\n        transform: \"translateX(-50%)\",\n        width: \"300px\",\n        maxHeight: \"200px\",\n        overflowY: \"auto\",\n        backgroundColor: \"#f3f4f6\",\n        padding: \"12px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 12px rgba(0,0,0,0.25)\",\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedNode.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Produces:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), \" \", Array.isArray(selectedNode.produces) ? selectedNode.produces.join(\", \") : \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Needs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), \" \", Array.isArray(selectedNode.needs) ? selectedNode.needs.join(\", \") : \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"8px\",\n          padding: \"6px 12px\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          backgroundColor: \"#3b82f6\",\n          color: \"#fff\",\n          cursor: \"pointer\"\n        },\n        onClick: () => setSelectedNode(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(NodalGraph, \"on/VChLRqzzy4vwPBJqFLOwwq44=\");\n_c = NodalGraph;\nexport default NodalGraph;\nvar _c;\n$RefreshReg$(_c, \"NodalGraph\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","Background","Controls","MiniMap","MarkerType","jsxDEV","_jsxDEV","NodalGraph","companies","currentUserEmail","_s","selectedNode","setSelectedNode","length","nodes","map","company","index","_company$emails","isCurrentUserCompany","emails","includes","id","name","type","position","x","y","Math","floor","data","label","style","background","color","border","width","height","display","alignItems","justifyContent","textAlign","borderRadius","cursor","edges","forEach","a","b","produces","Array","isArray","needs","hasMatch","some","p","push","source","target","markerEnd","Arrow","stroke","onNodeClick","event","node","children","fitView","panOnDrag","zoomOnScroll","variant","gap","size","fileName","_jsxFileName","lineNumber","columnNumber","nodeColor","n","left","bottom","transform","maxHeight","overflowY","backgroundColor","padding","boxShadow","zIndex","join","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/NodalGraph.jsx"],"sourcesContent":["// NodalGraph.jsx\r\nimport React, { useState, useCallback } from \"react\";\r\nimport ReactFlow, {\r\n    Background,\r\n    Controls,\r\n    MiniMap,\r\n    MarkerType,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nconst NodalGraph = ({ companies, currentUserEmail }) => {\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n    if (!companies || companies.length === 0) return null;\r\n\r\n    // Convert companies to nodes\r\n    const nodes = companies.map((company, index) => {\r\n        const isCurrentUserCompany = company.emails?.includes(currentUserEmail);\r\n\r\n        return {\r\n            id: company.id || company.name,\r\n            type: \"default\",\r\n            position: { x: 100 + (index % 5) * 180, y: 100 + Math.floor(index / 5) * 180 },\r\n            data: { label: company.name, company },\r\n            style: {\r\n                background: isCurrentUserCompany ? \"#ef4444\" : \"#4ade80\",\r\n                color: \"#fff\",\r\n                border: \"2px solid #000\",\r\n                width: 100,\r\n                height: 100,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n                borderRadius: \"50%\",\r\n                cursor: \"pointer\",\r\n            },\r\n        };\r\n    });\r\n\r\n    // Create edges for companies that have overlapping produces/needs\r\n    // Create edges for companies that have overlapping produces/needs\r\n    const edges = [];\r\n    companies.forEach((a) => {\r\n        companies.forEach((b) => {\r\n            if (a === b) return;\r\n\r\n            const produces = Array.isArray(a.produces) ? a.produces : [];\r\n            const needs = Array.isArray(b.needs) ? b.needs : [];\r\n\r\n            const hasMatch = produces.some((p) => needs.includes(p));\r\n            if (hasMatch) {\r\n                edges.push({\r\n                    id: `${a.id}-${b.id}`,\r\n                    source: a.id || a.name,\r\n                    target: b.id || b.name,\r\n                    type: \"smoothstep\",\r\n                    markerEnd: { type: MarkerType.Arrow },\r\n                    style: { stroke: \"#888\" },\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    const onNodeClick = useCallback((event, node) => {\r\n        setSelectedNode(node.data.company);\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"600px\" }}>\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodeClick={onNodeClick}\r\n                fitView\r\n                panOnDrag\r\n                zoomOnScroll\r\n            >\r\n                <Background variant=\"dots\" gap={15} size={1} />\r\n                <Controls />\r\n                <MiniMap\r\n                    nodeColor={(n) => (n.style.background === \"#ef4444\" ? \"red\" : \"green\")}\r\n                />\r\n            </ReactFlow>\r\n\r\n            {/* Selected Node Bubble */}\r\n            {selectedNode && (\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: \"50%\",\r\n                        bottom: 20,\r\n                        transform: \"translateX(-50%)\",\r\n                        width: \"300px\",\r\n                        maxHeight: \"200px\",\r\n                        overflowY: \"auto\",\r\n                        backgroundColor: \"#f3f4f6\",\r\n                        padding: \"12px\",\r\n                        borderRadius: \"8px\",\r\n                        boxShadow: \"0 2px 12px rgba(0,0,0,0.25)\",\r\n                        zIndex: 10,\r\n                    }}\r\n                >\r\n                    <h3>{selectedNode.name}</h3>\r\n                    <p>\r\n                        <strong>Produces:</strong>{\" \"}\r\n                        {Array.isArray(selectedNode.produces)\r\n                            ? selectedNode.produces.join(\", \")\r\n                            : \"None\"}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Needs:</strong>{\" \"}\r\n                        {Array.isArray(selectedNode.needs)\r\n                            ? selectedNode.needs.join(\", \")\r\n                            : \"None\"}\r\n                    </p>\r\n                    <button\r\n                        style={{\r\n                            marginTop: \"8px\",\r\n                            padding: \"6px 12px\",\r\n                            border: \"none\",\r\n                            borderRadius: \"4px\",\r\n                            backgroundColor: \"#3b82f6\",\r\n                            color: \"#fff\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => setSelectedNode(null)}\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}