{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\NodalGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NodalGraph = ({\n  companies,\n  currentUserEmail\n}) => {\n  _s();\n  // Create nodes and edges safely\n  const {\n    initialNodes,\n    initialEdges\n  } = useMemo(() => {\n    const nodes = companies.map((company, idx) => {\n      const produces = Array.isArray(company.produces) ? company.produces : [];\n      const needs = Array.isArray(company.needs) ? company.needs : [];\n      return {\n        id: company.email,\n        data: {\n          company\n        },\n        position: {\n          x: 200 + idx * 150,\n          y: 200 + idx % 3 * 150\n        },\n        style: {\n          border: \"2px solid\",\n          borderColor: company.email === currentUserEmail ? \"red\" : \"#777\",\n          borderRadius: \"50%\",\n          padding: 10,\n          width: 100,\n          textAlign: \"center\",\n          background: \"#fff\",\n          cursor: \"pointer\"\n        }\n      };\n    });\n    const edges = [];\n    companies.forEach(a => {\n      const aProduces = Array.isArray(a.produces) ? a.produces : [];\n      companies.forEach(b => {\n        const bNeeds = Array.isArray(b.needs) ? b.needs : [];\n        if (a.email !== b.email && aProduces.some(p => bNeeds.includes(p))) {\n          edges.push({\n            id: `${a.email}-${b.email}`,\n            source: a.email,\n            target: b.email,\n            type: \"smoothstep\",\n            markerEnd: {\n              type: MarkerType.Arrow\n            }\n          });\n        }\n      });\n    });\n    return {\n      initialNodes: nodes,\n      initialEdges: edges\n    };\n  }, [companies, currentUserEmail]);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"600px\",\n      width: \"100%\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      fitView: true,\n      panOnDrag: true,\n      zoomOnScroll: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeStrokeColor: n => n.id === currentUserEmail ? \"red\" : \"#777\",\n        nodeColor: n => n.id === currentUserEmail ? \"#f00\" : \"#fff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: selectedNode.position.x + 120,\n        top: selectedNode.position.y,\n        padding: 10,\n        border: \"1px solid #333\",\n        borderRadius: 5,\n        background: \"#fff\",\n        zIndex: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedNode.data.company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", selectedNode.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Produces:\", \" \", Array.isArray(selectedNode.data.company.produces) ? selectedNode.data.company.produces.join(\", \") : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Needs:\", \" \", Array.isArray(selectedNode.data.company.needs) ? selectedNode.data.company.needs.join(\", \") : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(NodalGraph, \"tCa/70EuUKQ8yYx8vDPXOFfX0j8=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = NodalGraph;\nexport default NodalGraph;\nvar _c;\n$RefreshReg$(_c, \"NodalGraph\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","jsxDEV","_jsxDEV","NodalGraph","companies","currentUserEmail","_s","initialNodes","initialEdges","nodes","map","company","idx","produces","Array","isArray","needs","id","email","data","position","x","y","style","border","borderColor","borderRadius","padding","width","textAlign","background","cursor","edges","forEach","a","aProduces","b","bNeeds","some","p","includes","push","source","target","type","markerEnd","Arrow","setNodes","onNodesChange","setEdges","onEdgesChange","selectedNode","setSelectedNode","onNodeClick","event","node","height","children","fitView","panOnDrag","zoomOnScroll","variant","gap","size","fileName","_jsxFileName","lineNumber","columnNumber","nodeStrokeColor","n","nodeColor","left","top","zIndex","name","join","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/NodalGraph.jsx"],"sourcesContent":["import React, { useState, useMemo, useCallback } from \"react\";\r\nimport ReactFlow, {\r\n    Background,\r\n    Controls,\r\n    MiniMap,\r\n    useNodesState,\r\n    useEdgesState,\r\n    MarkerType,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nconst NodalGraph = ({ companies, currentUserEmail }) => {\r\n    // Create nodes and edges safely\r\n    const { initialNodes, initialEdges } = useMemo(() => {\r\n        const nodes = companies.map((company, idx) => {\r\n            const produces = Array.isArray(company.produces) ? company.produces : [];\r\n            const needs = Array.isArray(company.needs) ? company.needs : [];\r\n\r\n            return {\r\n                id: company.email,\r\n                data: { company },\r\n                position: { x: 200 + idx * 150, y: 200 + (idx % 3) * 150 },\r\n                style: {\r\n                    border: \"2px solid\",\r\n                    borderColor: company.email === currentUserEmail ? \"red\" : \"#777\",\r\n                    borderRadius: \"50%\",\r\n                    padding: 10,\r\n                    width: 100,\r\n                    textAlign: \"center\",\r\n                    background: \"#fff\",\r\n                    cursor: \"pointer\",\r\n                },\r\n            };\r\n        });\r\n\r\n        const edges = [];\r\n        companies.forEach((a) => {\r\n            const aProduces = Array.isArray(a.produces) ? a.produces : [];\r\n            companies.forEach((b) => {\r\n                const bNeeds = Array.isArray(b.needs) ? b.needs : [];\r\n                if (a.email !== b.email && aProduces.some((p) => bNeeds.includes(p))) {\r\n                    edges.push({\r\n                        id: `${a.email}-${b.email}`,\r\n                        source: a.email,\r\n                        target: b.email,\r\n                        type: \"smoothstep\",\r\n                        markerEnd: { type: MarkerType.Arrow },\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        return { initialNodes: nodes, initialEdges: edges };\r\n    }, [companies, currentUserEmail]);\r\n\r\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n    const onNodeClick = useCallback((event, node) => {\r\n        setSelectedNode(node);\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ height: \"600px\", width: \"100%\", position: \"relative\" }}>\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onNodeClick={onNodeClick}\r\n                fitView\r\n                panOnDrag\r\n                zoomOnScroll\r\n            >\r\n                <Background variant=\"dots\" gap={12} size={1} />\r\n                <Controls />\r\n                <MiniMap\r\n                    nodeStrokeColor={(n) =>\r\n                        n.id === currentUserEmail ? \"red\" : \"#777\"\r\n                    }\r\n                    nodeColor={(n) =>\r\n                        n.id === currentUserEmail ? \"#f00\" : \"#fff\"\r\n                    }\r\n                />\r\n            </ReactFlow>\r\n\r\n            {selectedNode && (\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: selectedNode.position.x + 120,\r\n                        top: selectedNode.position.y,\r\n                        padding: 10,\r\n                        border: \"1px solid #333\",\r\n                        borderRadius: 5,\r\n                        background: \"#fff\",\r\n                        zIndex: 100,\r\n                    }}\r\n                >\r\n                    <strong>{selectedNode.data.company.name}</strong>\r\n                    <div>Email: {selectedNode.id}</div>\r\n                    <div>\r\n                        Produces:{\" \"}\r\n                        {Array.isArray(selectedNode.data.company.produces)\r\n                            ? selectedNode.data.company.produces.join(\", \")\r\n                            : \"N/A\"}\r\n                    </div>\r\n                    <div>\r\n                        Needs:{\" \"}\r\n                        {Array.isArray(selectedNode.data.company.needs)\r\n                            ? selectedNode.data.company.needs.join(\", \")\r\n                            : \"N/A\"}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}