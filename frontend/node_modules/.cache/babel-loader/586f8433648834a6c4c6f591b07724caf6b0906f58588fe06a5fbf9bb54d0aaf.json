{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\NodalGraph.jsx\",\n  _s = $RefreshSig$();\n// NodalGraph.jsx\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport ReactFlow, { useNodesState, useEdgesState, Controls, Background } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NodalGraph = ({\n  companies,\n  currentUserEmail\n}) => {\n  _s();\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // Generate nodes only once when companies change\n  const initialNodes = useMemo(() => {\n    return companies.map((c, i) => ({\n      id: c.id.toString(),\n      position: c.position || {\n        x: i * 200,\n        y: i * 150\n      },\n      data: {\n        label: c.name,\n        email: c.email,\n        produces: Array.isArray(c.produces) ? c.produces : [],\n        needs: Array.isArray(c.needs) ? c.needs : []\n      },\n      style: {\n        background: c.email === currentUserEmail ? \"red\" : \"#fff\",\n        color: \"#000\",\n        border: \"2px solid #222\",\n        width: 150,\n        height: 50,\n        borderRadius: 50,\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }\n    }));\n  }, [companies, currentUserEmail]);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n\n  // Generate edges only once\n  const initialEdges = useMemo(() => {\n    const edges = [];\n    companies.forEach(c1 => {\n      const c1Needs = Array.isArray(c1.needs) ? c1.needs : [];\n      companies.forEach(c2 => {\n        const c2Produces = Array.isArray(c2.produces) ? c2.produces : [];\n        if (c1Needs.some(need => c2Produces.includes(need))) {\n          edges.push({\n            id: `e${c2.id}-${c1.id}`,\n            source: c2.id.toString(),\n            target: c1.id.toString(),\n            animated: true,\n            style: {\n              stroke: \"#888\"\n            }\n          });\n        }\n      });\n    });\n    return edges;\n  }, [companies]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      fitView: true,\n      nodesDraggable: true,\n      nodesConnectable: false,\n      zoomOnScroll: true,\n      zoomOnPinch: true,\n      panOnScroll: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: selectedNode.position.x + 160,\n        top: selectedNode.position.y,\n        background: \"#fff\",\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        border: \"1px solid #222\",\n        boxShadow: \"0px 0px 8px rgba(0,0,0,0.2)\",\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedNode.data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", selectedNode.data.email || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Produces: \", selectedNode.data.produces.join(\", \") || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Needs: \", selectedNode.data.needs.join(\", \") || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(NodalGraph, \"5R+0Ut1lFdpvZ4lOwT7CJ1KQD78=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = NodalGraph;\nexport default NodalGraph;\nvar _c;\n$RefreshReg$(_c, \"NodalGraph\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","ReactFlow","useNodesState","useEdgesState","Controls","Background","jsxDEV","_jsxDEV","NodalGraph","companies","currentUserEmail","_s","selectedNode","setSelectedNode","initialNodes","map","c","i","id","toString","position","x","y","data","label","name","email","produces","Array","isArray","needs","style","background","color","border","width","height","borderRadius","textAlign","display","justifyContent","alignItems","nodes","setNodes","onNodesChange","initialEdges","edges","forEach","c1","c1Needs","c2","c2Produces","some","need","includes","push","source","target","animated","stroke","setEdges","onEdgesChange","onNodeClick","event","node","children","fitView","nodesDraggable","nodesConnectable","zoomOnScroll","zoomOnPinch","panOnScroll","gap","fileName","_jsxFileName","lineNumber","columnNumber","left","top","padding","boxShadow","zIndex","join","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/NodalGraph.jsx"],"sourcesContent":["// NodalGraph.jsx\r\nimport React, { useState, useMemo, useCallback } from \"react\";\r\nimport ReactFlow, { useNodesState, useEdgesState, Controls, Background } from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nconst NodalGraph = ({ companies, currentUserEmail }) => {\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n    // Generate nodes only once when companies change\r\n    const initialNodes = useMemo(() => {\r\n        return companies.map((c, i) => ({\r\n            id: c.id.toString(),\r\n            position: c.position || { x: i * 200, y: i * 150 },\r\n            data: {\r\n                label: c.name,\r\n                email: c.email,\r\n                produces: Array.isArray(c.produces) ? c.produces : [],\r\n                needs: Array.isArray(c.needs) ? c.needs : [],\r\n            },\r\n            style: {\r\n                background: c.email === currentUserEmail ? \"red\" : \"#fff\",\r\n                color: \"#000\",\r\n                border: \"2px solid #222\",\r\n                width: 150,\r\n                height: 50,\r\n                borderRadius: 50,\r\n                textAlign: \"center\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n        }));\r\n    }, [companies, currentUserEmail]);\r\n\r\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n\r\n    // Generate edges only once\r\n    const initialEdges = useMemo(() => {\r\n        const edges = [];\r\n        companies.forEach((c1) => {\r\n            const c1Needs = Array.isArray(c1.needs) ? c1.needs : [];\r\n            companies.forEach((c2) => {\r\n                const c2Produces = Array.isArray(c2.produces) ? c2.produces : [];\r\n                if (c1Needs.some((need) => c2Produces.includes(need))) {\r\n                    edges.push({\r\n                        id: `e${c2.id}-${c1.id}`,\r\n                        source: c2.id.toString(),\r\n                        target: c1.id.toString(),\r\n                        animated: true,\r\n                        style: { stroke: \"#888\" },\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        return edges;\r\n    }, [companies]);\r\n\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n\r\n    const onNodeClick = useCallback((event, node) => {\r\n        setSelectedNode(node);\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"100%\" }}>\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onNodeClick={onNodeClick}\r\n                fitView\r\n                nodesDraggable\r\n                nodesConnectable={false}\r\n                zoomOnScroll\r\n                zoomOnPinch\r\n                panOnScroll\r\n            >\r\n                <Background color=\"#aaa\" gap={16} />\r\n                <Controls />\r\n            </ReactFlow>\r\n\r\n            {selectedNode && (\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: selectedNode.position.x + 160,\r\n                        top: selectedNode.position.y,\r\n                        background: \"#fff\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"8px\",\r\n                        border: \"1px solid #222\",\r\n                        boxShadow: \"0px 0px 8px rgba(0,0,0,0.2)\",\r\n                        zIndex: 10,\r\n                    }}\r\n                >\r\n                    <strong>{selectedNode.data.label}</strong>\r\n                    <div>Email: {selectedNode.data.email || \"N/A\"}</div>\r\n                    <div>\r\n                        Produces: {selectedNode.data.produces.join(\", \") || \"N/A\"}\r\n                    </div>\r\n                    <div>\r\n                        Needs: {selectedNode.data.needs.join(\", \") || \"N/A\"}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodalGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}