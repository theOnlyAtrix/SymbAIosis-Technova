{"ast":null,"code":"import _objectSpread from \"C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"position\", \"children\", \"className\", \"style\"],\n  _excluded2 = [\"x\", \"y\", \"label\", \"labelStyle\", \"labelShowBg\", \"labelBgStyle\", \"labelBgPadding\", \"labelBgBorderRadius\", \"children\", \"className\"],\n  _excluded3 = [\"id\"],\n  _excluded4 = [\"type\", \"position\", \"isValidConnection\", \"isConnectable\", \"isConnectableStart\", \"isConnectableEnd\", \"id\", \"onConnect\", \"children\", \"className\", \"onMouseDown\", \"onTouchStart\"],\n  _excluded5 = [\"nodes\", \"edges\", \"defaultNodes\", \"defaultEdges\", \"className\", \"nodeTypes\", \"edgeTypes\", \"onNodeClick\", \"onEdgeClick\", \"onInit\", \"onMove\", \"onMoveStart\", \"onMoveEnd\", \"onConnect\", \"onConnectStart\", \"onConnectEnd\", \"onClickConnectStart\", \"onClickConnectEnd\", \"onNodeMouseEnter\", \"onNodeMouseMove\", \"onNodeMouseLeave\", \"onNodeContextMenu\", \"onNodeDoubleClick\", \"onNodeDragStart\", \"onNodeDrag\", \"onNodeDragStop\", \"onNodesDelete\", \"onEdgesDelete\", \"onSelectionChange\", \"onSelectionDragStart\", \"onSelectionDrag\", \"onSelectionDragStop\", \"onSelectionContextMenu\", \"onSelectionStart\", \"onSelectionEnd\", \"connectionMode\", \"connectionLineType\", \"connectionLineStyle\", \"connectionLineComponent\", \"connectionLineContainerStyle\", \"deleteKeyCode\", \"selectionKeyCode\", \"selectionOnDrag\", \"selectionMode\", \"panActivationKeyCode\", \"multiSelectionKeyCode\", \"zoomActivationKeyCode\", \"snapToGrid\", \"snapGrid\", \"onlyRenderVisibleElements\", \"selectNodesOnDrag\", \"nodesDraggable\", \"nodesConnectable\", \"nodesFocusable\", \"nodeOrigin\", \"edgesFocusable\", \"edgesUpdatable\", \"elementsSelectable\", \"defaultViewport\", \"minZoom\", \"maxZoom\", \"translateExtent\", \"preventScrolling\", \"nodeExtent\", \"defaultMarkerColor\", \"zoomOnScroll\", \"zoomOnPinch\", \"panOnScroll\", \"panOnScrollSpeed\", \"panOnScrollMode\", \"zoomOnDoubleClick\", \"panOnDrag\", \"onPaneClick\", \"onPaneMouseEnter\", \"onPaneMouseMove\", \"onPaneMouseLeave\", \"onPaneScroll\", \"onPaneContextMenu\", \"children\", \"onEdgeContextMenu\", \"onEdgeDoubleClick\", \"onEdgeMouseEnter\", \"onEdgeMouseMove\", \"onEdgeMouseLeave\", \"onEdgeUpdate\", \"onEdgeUpdateStart\", \"onEdgeUpdateEnd\", \"onReconnect\", \"onReconnectStart\", \"onReconnectEnd\", \"reconnectRadius\", \"edgeUpdaterRadius\", \"onNodesChange\", \"onEdgesChange\", \"noDragClassName\", \"noWheelClassName\", \"noPanClassName\", \"fitView\", \"fitViewOptions\", \"connectOnClick\", \"attributionPosition\", \"proOptions\", \"defaultEdgeOptions\", \"elevateNodesOnSelect\", \"elevateEdgesOnSelect\", \"disableKeyboardA11y\", \"autoPanOnConnect\", \"autoPanOnNodeDrag\", \"connectionRadius\", \"isValidConnection\", \"onError\", \"style\", \"id\", \"nodeDragThreshold\"];\nimport React, { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\nconst errorMessages = {\n  error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n  error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n  error003: nodeType => \"Node type \\\"\".concat(nodeType, \"\\\" not found. Using fallback type \\\"default\\\".\"),\n  error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n  error005: () => 'Only child nodes can use a parent extent.',\n  error006: () => \"Can't create edge. An edge needs a source and a target.\",\n  error007: id => \"The old edge with id=\".concat(id, \" does not exist.\"),\n  error009: type => \"Marker type \\\"\".concat(type, \"\\\" doesn't exist.\"),\n  error008: (sourceHandle, edge) => \"Couldn't create edge for \".concat(!sourceHandle ? 'source' : 'target', \" handle id: \\\"\").concat(!sourceHandle ? edge.sourceHandle : edge.targetHandle, \"\\\", edge id: \").concat(edge.id, \".\"),\n  error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n  error011: edgeType => \"Edge type \\\"\".concat(edgeType, \"\\\" not found. Using fallback type \\\"default\\\".\"),\n  error012: id => \"Node with id \\\"\".concat(id, \"\\\" does not exist, it may have been removed. This can happen when a node is deleted before the \\\"onNodeClick\\\" handler is called.\")\n};\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(() => ({\n    getState: store.getState,\n    setState: store.setState,\n    subscribe: store.subscribe,\n    destroy: store.destroy\n  }), [store]);\n};\nconst selector$g = s => s.userSelectionActive ? 'none' : 'all';\nfunction Panel(_ref) {\n  let {\n      position,\n      children,\n      className,\n      style\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const pointerEvents = useStore(selector$g);\n  const positionClasses = \"\".concat(position).split('-');\n  return React.createElement(\"div\", _objectSpread({\n    className: cc(['react-flow__panel', className, ...positionClasses]),\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      pointerEvents\n    })\n  }, rest), children);\n}\nfunction Attribution(_ref2) {\n  let {\n    proOptions,\n    position = 'bottom-right'\n  } = _ref2;\n  if (proOptions !== null && proOptions !== void 0 && proOptions.hideAttribution) {\n    return null;\n  }\n  return React.createElement(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://reactflow.dev/pro\"\n  }, React.createElement(\"a\", {\n    href: \"https://reactflow.dev\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    \"aria-label\": \"React Flow attribution\"\n  }, \"React Flow\"));\n}\nconst EdgeText = _ref3 => {\n  let {\n      x,\n      y,\n      label,\n      labelStyle = {},\n      labelShowBg = true,\n      labelBgStyle = {},\n      labelBgPadding = [2, 4],\n      labelBgBorderRadius = 2,\n      children,\n      className\n    } = _ref3,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  const edgeRef = useRef(null);\n  const [edgeTextBbox, setEdgeTextBbox] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(() => {\n    if (edgeRef.current) {\n      const textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return React.createElement(\"g\", _objectSpread({\n    transform: \"translate(\".concat(x - edgeTextBbox.width / 2, \" \").concat(y - edgeTextBbox.height / 2, \")\"),\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden'\n  }, rest), labelShowBg && React.createElement(\"rect\", {\n    width: edgeTextBbox.width + 2 * labelBgPadding[0],\n    x: -labelBgPadding[0],\n    y: -labelBgPadding[1],\n    height: edgeTextBbox.height + 2 * labelBgPadding[1],\n    className: \"react-flow__edge-textbg\",\n    style: labelBgStyle,\n    rx: labelBgBorderRadius,\n    ry: labelBgBorderRadius\n  }), React.createElement(\"text\", {\n    className: \"react-flow__edge-text\",\n    y: edgeTextBbox.height / 2,\n    dy: \"0.3em\",\n    ref: edgeRef,\n    style: labelStyle\n  }, label), children);\n};\nvar EdgeText$1 = memo(EdgeText);\nconst getDimensions = node => ({\n  width: node.offsetWidth,\n  height: node.offsetHeight\n});\nconst clamp = function (val) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nconst clampPosition = function () {\n  let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  let extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n  const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nconst getHostForElement = element => {\n  var _element$getRootNode, _window;\n  return ((_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element)) || ((_window = window) === null || _window === void 0 ? void 0 : _window.document);\n};\nconst getBoundsOfBoxes = (box1, box2) => ({\n  x: Math.min(box1.x, box2.x),\n  y: Math.min(box1.y, box2.y),\n  x2: Math.max(box1.x2, box2.x2),\n  y2: Math.max(box1.y2, box2.y2)\n});\nconst rectToBox = _ref4 => {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = _ref4;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nconst boxToRect = _ref5 => {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref5;\n  return {\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nconst nodeToRect = node => _objectSpread(_objectSpread({}, node.positionAbsolute || {\n  x: 0,\n  y: 0\n}), {}, {\n  width: node.width || 0,\n  height: node.height || 0\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n  const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = obj => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = n => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\"[React Flow]: \".concat(message, \" Help: https://reactflow.dev/error#\").concat(id));\n  }\n};\nconst isReactKeyboardEvent = event => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n  var _kbEvent$composedPath;\n  const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  const target = ((_kbEvent$composedPath = kbEvent.composedPath) === null || _kbEvent$composedPath === void 0 || (_kbEvent$composedPath = _kbEvent$composedPath.call(kbEvent)) === null || _kbEvent$composedPath === void 0 ? void 0 : _kbEvent$composedPath[0]) || event.target;\n  const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target === null || target === void 0 ? void 0 : target.nodeName) || (target === null || target === void 0 ? void 0 : target.hasAttribute('contenteditable'));\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput || !!(target !== null && target !== void 0 && target.closest('.nokey'));\n}\nconst isMouseEvent = event => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n  var _event$touches, _event$touches2, _bounds$left, _bounds$top;\n  const isMouseTriggered = isMouseEvent(event);\n  const evtX = isMouseTriggered ? event.clientX : (_event$touches = event.touches) === null || _event$touches === void 0 ? void 0 : _event$touches[0].clientX;\n  const evtY = isMouseTriggered ? event.clientY : (_event$touches2 = event.touches) === null || _event$touches2 === void 0 ? void 0 : _event$touches2[0].clientY;\n  return {\n    x: evtX - ((_bounds$left = bounds === null || bounds === void 0 ? void 0 : bounds.left) !== null && _bounds$left !== void 0 ? _bounds$left : 0),\n    y: evtY - ((_bounds$top = bounds === null || bounds === void 0 ? void 0 : bounds.top) !== null && _bounds$top !== void 0 ? _bounds$top : 0)\n  };\n};\nconst isMacOs = () => {\n  var _navigator;\n  return typeof navigator !== 'undefined' && ((_navigator = navigator) === null || _navigator === void 0 || (_navigator = _navigator.userAgent) === null || _navigator === void 0 ? void 0 : _navigator.indexOf('Mac')) >= 0;\n};\nconst BaseEdge = _ref6 => {\n  let {\n    id,\n    path,\n    labelX,\n    labelY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth = 20\n  } = _ref6;\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    id: id,\n    style: style,\n    d: path,\n    fill: \"none\",\n    className: \"react-flow__edge-path\",\n    markerEnd: markerEnd,\n    markerStart: markerStart\n  }), interactionWidth && React.createElement(\"path\", {\n    d: path,\n    fill: \"none\",\n    strokeOpacity: 0,\n    strokeWidth: interactionWidth,\n    className: \"react-flow__edge-interaction\"\n  }), label && isNumeric(labelX) && isNumeric(labelY) ? React.createElement(EdgeText$1, {\n    x: labelX,\n    y: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius\n  }) : null);\n};\nBaseEdge.displayName = 'BaseEdge';\nconst getMarkerEnd = (markerType, markerEndId) => {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return \"url(#\".concat(markerEndId, \")\");\n  }\n  return typeof markerType !== 'undefined' ? \"url(#react-flow__\".concat(markerType, \")\") : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const edge = getState().edges.find(e => e.id === id);\n    if (edge) {\n      handler(event, _objectSpread({}, edge));\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref7;\n  const xOffset = Math.abs(targetX - sourceX) / 2;\n  const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  const yOffset = Math.abs(targetY - sourceY) / 2;\n  const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  } = _ref8;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  const offsetX = Math.abs(centerX - sourceX);\n  const offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2\n  } = _ref9;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref0) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top\n  } = _ref0;\n  const [sourceControlX, sourceControlY] = getControl({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY\n  });\n  const [targetControlX, targetControlY] = getControl({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nconst SimpleBezierEdge = memo(_ref1 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref1;\n  const [path, labelX, labelY] = getSimpleBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nconst handleDirections = {\n  [Position.Left]: {\n    x: -1,\n    y: 0\n  },\n  [Position.Right]: {\n    x: 1,\n    y: 0\n  },\n  [Position.Top]: {\n    x: 0,\n    y: -1\n  },\n  [Position.Bottom]: {\n    x: 0,\n    y: 1\n  }\n};\nconst getDirection = _ref10 => {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target\n  } = _ref10;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref11) {\n  let {\n    source,\n    sourcePosition = Position.Bottom,\n    target,\n    targetPosition = Position.Top,\n    center,\n    offset\n  } = _ref11;\n  const sourceDir = handleDirections[sourcePosition];\n  const targetDir = handleDirections[targetPosition];\n  const sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  const targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  const dir = getDirection({\n    source: sourceGapped,\n    sourcePosition,\n    target: targetGapped\n  });\n  const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  const currDir = dir[dirAccessor];\n  let points = [];\n  let centerX, centerY;\n  const sourceGapOffset = {\n    x: 0,\n    y: 0\n  };\n  const targetGapOffset = {\n    x: 0,\n    y: 0\n  };\n  const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n    sourceX: source.x,\n    sourceY: source.y,\n    targetX: target.x,\n    targetY: target.y\n  });\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    var _center$x, _center$y;\n    centerX = (_center$x = center.x) !== null && _center$x !== void 0 ? _center$x : defaultCenterX;\n    centerY = (_center$y = center.y) !== null && _center$y !== void 0 ? _center$y : defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    const verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    const horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    const sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    const targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    if (sourcePosition === targetPosition) {\n      const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n      // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n      if (diff <= offset) {\n        const gapOffset = Math.min(offset - 1, offset - diff);\n        if (sourceDir[dirAccessor] === currDir) {\n          sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n        } else {\n          targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n        }\n      }\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      const flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    const sourceGapPoint = {\n      x: sourceGapped.x + sourceGapOffset.x,\n      y: sourceGapped.y + sourceGapOffset.y\n    };\n    const targetGapPoint = {\n      x: targetGapped.x + targetGapOffset.x,\n      y: targetGapped.y + targetGapOffset.y\n    };\n    const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n    const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n    // we want to place the label on the longest segment of the edge\n    if (maxXDistance >= maxYDistance) {\n      centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n      centerY = points[0].y;\n    } else {\n      centerX = points[0].x;\n      centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n    }\n  }\n  const pathPoints = [source, {\n    x: sourceGapped.x + sourceGapOffset.x,\n    y: sourceGapped.y + sourceGapOffset.y\n  }, ...points, {\n    x: targetGapped.x + targetGapOffset.x,\n    y: targetGapped.y + targetGapOffset.y\n  }, target];\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  const {\n    x,\n    y\n  } = b;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return \"L\".concat(x, \" \").concat(y);\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    const xDir = a.x < c.x ? -1 : 1;\n    const yDir = a.y < c.y ? 1 : -1;\n    return \"L \".concat(x + bendSize * xDir, \",\").concat(y, \"Q \").concat(x, \",\").concat(y, \" \").concat(x, \",\").concat(y + bendSize * yDir);\n  }\n  const xDir = a.x < c.x ? 1 : -1;\n  const yDir = a.y < c.y ? -1 : 1;\n  return \"L \".concat(x, \",\").concat(y + bendSize * yDir, \"Q \").concat(x, \",\").concat(y, \" \").concat(x + bendSize * xDir, \",\").concat(y);\n}\nfunction getSmoothStepPath(_ref12) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    borderRadius = 5,\n    centerX,\n    centerY,\n    offset = 20\n  } = _ref12;\n  const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n    source: {\n      x: sourceX,\n      y: sourceY\n    },\n    sourcePosition,\n    target: {\n      x: targetX,\n      y: targetY\n    },\n    targetPosition,\n    center: {\n      x: centerX,\n      y: centerY\n    },\n    offset\n  });\n  const path = points.reduce((res, p, i) => {\n    let segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = \"\".concat(i === 0 ? 'M' : 'L').concat(p.x, \" \").concat(p.y);\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(_ref13 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref13;\n  const [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    borderRadius: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.borderRadius,\n    offset: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.offset\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nconst StepEdge = memo(props => {\n  var _props$pathOptions2;\n  return React.createElement(SmoothStepEdge, _objectSpread(_objectSpread({}, props), {}, {\n    pathOptions: useMemo(() => {\n      var _props$pathOptions;\n      return {\n        borderRadius: 0,\n        offset: (_props$pathOptions = props.pathOptions) === null || _props$pathOptions === void 0 ? void 0 : _props$pathOptions.offset\n      };\n    }, [(_props$pathOptions2 = props.pathOptions) === null || _props$pathOptions2 === void 0 ? void 0 : _props$pathOptions2.offset])\n  }));\n});\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref14) {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  } = _ref14;\n  const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return [\"M \".concat(sourceX, \",\").concat(sourceY, \"L \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(_ref15 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    interactionWidth\n  } = _ref15;\n  const [path, labelX, labelY] = getStraightPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref16) {\n  let {\n    pos,\n    x1,\n    y1,\n    x2,\n    y2,\n    c\n  } = _ref16;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref17) {\n  let {\n    sourceX,\n    sourceY,\n    sourcePosition = Position.Bottom,\n    targetX,\n    targetY,\n    targetPosition = Position.Top,\n    curvature = 0.25\n  } = _ref17;\n  const [sourceControlX, sourceControlY] = getControlWithCurvature({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY,\n    c: curvature\n  });\n  const [targetControlX, targetControlY] = getControlWithCurvature({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY,\n    c: curvature\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nconst BezierEdge = memo(_ref18 => {\n  let {\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition = Position.Bottom,\n    targetPosition = Position.Top,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    markerEnd,\n    markerStart,\n    pathOptions,\n    interactionWidth\n  } = _ref18;\n  const [path, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.curvature\n  });\n  return React.createElement(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n  const nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nconst isEdge = element => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = element => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const outgoerIds = edges.filter(e => e.source === node.id).map(e => e.target);\n  return nodes.filter(n => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const incomersIds = edges.filter(e => e.target === node.id).map(e => e.source);\n  return nodes.filter(n => incomersIds.includes(n.id));\n};\nconst getEdgeId = _ref19 => {\n  let {\n    source,\n    sourceHandle,\n    target,\n    targetHandle\n  } = _ref19;\n  return \"reactflow__edge-\".concat(source).concat(sourceHandle || '', \"-\").concat(target).concat(targetHandle || '');\n};\nconst getMarkerId = (marker, rfId) => {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  const idPrefix = rfId ? \"\".concat(rfId, \"__\") : '';\n  return \"\".concat(idPrefix).concat(Object.keys(marker).sort().map(key => \"\".concat(key, \"=\").concat(marker[key])).join('&'));\n};\nconst connectionExists = (edge, edges) => {\n  return edges.some(el => el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle));\n};\nconst addEdge = (edgeParams, edges) => {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  let edge;\n  if (isEdge(edgeParams)) {\n    edge = _objectSpread({}, edgeParams);\n  } else {\n    edge = _objectSpread(_objectSpread({}, edgeParams), {}, {\n      id: getEdgeId(edgeParams)\n    });\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nconst reconnectEdge = function (oldEdge, newConnection, edges) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    shouldReplaceId: true\n  };\n  const {\n      id: oldEdgeId\n    } = oldEdge,\n    rest = _objectWithoutProperties(oldEdge, _excluded3);\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  const foundEdge = edges.find(e => e.id === oldEdgeId);\n  if (!foundEdge) {\n    devWarn('007', errorMessages['error007'](oldEdgeId));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  const edge = _objectSpread(_objectSpread({}, rest), {}, {\n    id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  });\n  return edges.filter(e => e.id !== oldEdgeId).concat(edge);\n};\n/**\n *\n * @deprecated Use `reconnectEdge` instead.\n */\nconst updateEdge = function (oldEdge, newConnection, edges) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    shouldReplaceId: true\n  };\n  console.warn('[DEPRECATED] `updateEdge` is deprecated. Instead use `reconnectEdge` https://reactflow.dev/api-reference/utils/reconnect-edge');\n  return reconnectEdge(oldEdge, newConnection, edges, options);\n};\nconst pointToRendererPoint = (_ref20, _ref21, snapToGrid, _ref22) => {\n  let {\n    x,\n    y\n  } = _ref20;\n  let [tx, ty, tScale] = _ref21;\n  let [snapX, snapY] = _ref22;\n  const position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nconst rendererPointToPoint = (_ref23, _ref24) => {\n  let {\n    x,\n    y\n  } = _ref23;\n  let [tx, ty, tScale] = _ref24;\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nconst getNodePositionWithOrigin = function (node) {\n  var _node$width, _node$height;\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  const offsetX = ((_node$width = node.width) !== null && _node$width !== void 0 ? _node$width : 0) * nodeOrigin[0];\n  const offsetY = ((_node$height = node.height) !== null && _node$height !== void 0 ? _node$height : 0) * nodeOrigin[1];\n  const position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return _objectSpread(_objectSpread({}, position), {}, {\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  });\n};\nconst getNodesBounds = function (nodes) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const box = nodes.reduce((currBox, node) => {\n    const {\n      x,\n      y\n    } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x,\n      y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\n// @deprecated Use `getNodesBounds`.\nconst getRectOfNodes = function (nodes) {\n  let nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  console.warn('[DEPRECATED] `getRectOfNodes` is deprecated. Instead use `getNodesBounds` https://reactflow.dev/api-reference/utils/get-nodes-bounds.');\n  return getNodesBounds(nodes, nodeOrigin);\n};\nconst getNodesInside = function (nodeInternals, rect) {\n  let [tx, ty, tScale] = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1];\n  let partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  const paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  const visibleNodes = [];\n  nodeInternals.forEach(node => {\n    const {\n      width,\n      height,\n      selectable = true,\n      hidden = false\n    } = node;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    const {\n      positionAbsolute\n    } = getNodePositionWithOrigin(node, nodeOrigin);\n    const nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    const partiallyVisible = partially && overlappingArea > 0;\n    const area = (width || 0) * (height || 0);\n    const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n  const nodeIds = nodes.map(node => node.id);\n  return edges.filter(edge => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\n// @deprecated Use `getViewportForBounds`.\nconst getTransformForBounds = function (bounds, width, height, minZoom, maxZoom) {\n  let padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  const {\n    x,\n    y,\n    zoom\n  } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, padding);\n  console.warn('[DEPRECATED] `getTransformForBounds` is deprecated. Instead use `getViewportForBounds`. Beware that the return value is type Viewport (`{ x: number, y: number, zoom: number }`) instead of Transform (`[number, number, number]`). https://reactflow.dev/api-reference/utils/get-viewport-for-bounds');\n  return [x, y, zoom];\n};\nconst getViewportForBounds = function (bounds, width, height, minZoom, maxZoom) {\n  let padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  const xZoom = width / (bounds.width * (1 + padding));\n  const yZoom = height / (bounds.height * (1 + padding));\n  const zoom = Math.min(xZoom, yZoom);\n  const clampedZoom = clamp(zoom, minZoom, maxZoom);\n  const boundsCenterX = bounds.x + bounds.width / 2;\n  const boundsCenterY = bounds.y + bounds.height / 2;\n  const x = width / 2 - boundsCenterX * clampedZoom;\n  const y = height / 2 - boundsCenterY * clampedZoom;\n  return {\n    x,\n    y,\n    zoom: clampedZoom\n  };\n};\nconst getD3Transition = function (selection) {\n  let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce((res, h) => {\n    if (\"\".concat(node.id, \"-\").concat(h.id, \"-\").concat(type) !== currentHandle) {\n      var _node$positionAbsolut, _node$positionAbsolut2, _node$positionAbsolut3, _node$positionAbsolut4;\n      res.push({\n        id: h.id || null,\n        type,\n        nodeId: node.id,\n        x: ((_node$positionAbsolut = (_node$positionAbsolut2 = node.positionAbsolute) === null || _node$positionAbsolut2 === void 0 ? void 0 : _node$positionAbsolut2.x) !== null && _node$positionAbsolut !== void 0 ? _node$positionAbsolut : 0) + h.x + h.width / 2,\n        y: ((_node$positionAbsolut3 = (_node$positionAbsolut4 = node.positionAbsolute) === null || _node$positionAbsolut4 === void 0 ? void 0 : _node$positionAbsolut4.y) !== null && _node$positionAbsolut3 !== void 0 ? _node$positionAbsolut3 : 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n  // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n  // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const domNodes = doc.elementsFromPoint(x, y);\n  const handleBelow = domNodes.find(el => el.classList.contains('react-flow__handle'));\n  if (handleBelow) {\n    const handleNodeId = handleBelow.getAttribute('data-nodeid');\n    if (handleNodeId) {\n      const handleType = getHandleType(undefined, handleBelow);\n      const handleId = handleBelow.getAttribute('data-handleid');\n      const validHandleResult = validator({\n        nodeId: handleNodeId,\n        id: handleId,\n        type: handleType\n      });\n      if (validHandleResult) {\n        const handle = handles.find(h => h.nodeId === handleNodeId && h.type === handleType && h.id === handleId);\n        return {\n          handle: {\n            id: handleId,\n            type: handleType,\n            nodeId: handleNodeId,\n            x: (handle === null || handle === void 0 ? void 0 : handle.x) || pos.x,\n            y: (handle === null || handle === void 0 ? void 0 : handle.y) || pos.y\n          },\n          validHandleResult\n        };\n      }\n    }\n  }\n  // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n  let closestHandles = [];\n  let minDistance = Infinity;\n  handles.forEach(handle => {\n    const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n    if (distance <= connectionRadius) {\n      const validHandleResult = validator(handle);\n      if (distance <= minDistance) {\n        if (distance < minDistance) {\n          closestHandles = [{\n            handle,\n            validHandleResult\n          }];\n        } else if (distance === minDistance) {\n          // when multiple handles are on the same distance we collect all of them\n          closestHandles.push({\n            handle,\n            validHandleResult\n          });\n        }\n        minDistance = distance;\n      }\n    }\n  });\n  if (!closestHandles.length) {\n    return {\n      handle: null,\n      validHandleResult: defaultResult()\n    };\n  }\n  if (closestHandles.length === 1) {\n    return closestHandles[0];\n  }\n  const hasValidHandle = closestHandles.some(_ref25 => {\n    let {\n      validHandleResult\n    } = _ref25;\n    return validHandleResult.isValid;\n  });\n  const hasTargetHandle = closestHandles.some(_ref26 => {\n    let {\n      handle\n    } = _ref26;\n    return handle.type === 'target';\n  });\n  // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n  return closestHandles.find(_ref27 => {\n    let {\n      handle,\n      validHandleResult\n    } = _ref27;\n    return hasTargetHandle ? handle.type === 'target' : hasValidHandle ? validHandleResult.isValid : true;\n  }) || closestHandles[0];\n}\nconst nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\nconst defaultResult = () => ({\n  handleDomNode: null,\n  isValid: false,\n  connection: nullConnection,\n  endHandle: null\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  const isTarget = fromType === 'target';\n  const handleToCheck = doc.querySelector(\".react-flow__handle[data-id=\\\"\".concat(handle === null || handle === void 0 ? void 0 : handle.nodeId, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.id, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.type, \"\\\"]\"));\n  const result = _objectSpread(_objectSpread({}, defaultResult()), {}, {\n    handleDomNode: handleToCheck\n  });\n  if (handleToCheck) {\n    const handleType = getHandleType(undefined, handleToCheck);\n    const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    const handleId = handleToCheck.getAttribute('data-handleid');\n    const connectable = handleToCheck.classList.contains('connectable');\n    const connectableEnd = handleToCheck.classList.contains('connectableend');\n    const connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    const isConnectable = connectable && connectableEnd;\n    // in strict mode we don't allow target to target or source to source connections\n    const isValid = isConnectable && (connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n    if (isValid) {\n      result.endHandle = {\n        nodeId: handleNodeId,\n        handleId,\n        type: handleType\n      };\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup(_ref28) {\n  let {\n    nodes,\n    nodeId,\n    handleId,\n    handleType\n  } = _ref28;\n  return nodes.reduce((res, node) => {\n    if (node[internalsSymbol]) {\n      const {\n        handleBounds\n      } = node[internalsSymbol];\n      let sourceHandles = [];\n      let targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n        targetHandles = getHandles(node, handleBounds, 'target', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n      }\n      res.push(...sourceHandles, ...targetHandles);\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode === null || handleDomNode === void 0 || handleDomNode.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  let connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown(_ref29) {\n  let {\n    event,\n    handleId,\n    nodeId,\n    onConnect,\n    isTarget,\n    getState,\n    setState,\n    isValidConnection,\n    edgeUpdaterType,\n    onReconnectEnd\n  } = _ref29;\n  // when react-flow is used inside a shadow root we can't use document\n  const doc = getHostForElement(event.target);\n  const {\n    connectionMode,\n    domNode,\n    autoPanOnConnect,\n    connectionRadius,\n    onConnectStart,\n    panBy,\n    getNodes,\n    cancelConnection\n  } = getState();\n  let autoPanId = 0;\n  let closestHandle;\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const clickedHandle = doc === null || doc === void 0 ? void 0 : doc.elementFromPoint(x, y);\n  const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  const containerBounds = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  let prevActiveHandle;\n  let connectionPosition = getEventPosition(event, containerBounds);\n  let autoPanStarted = false;\n  let connection = null;\n  let isValid = false;\n  let handleDomNode = null;\n  const handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId,\n    handleId,\n    handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  const autoPan = () => {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition,\n    connectionStatus: null,\n    // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStartHandle: {\n      nodeId,\n      handleId,\n      type: handleType\n    },\n    connectionEndHandle: null\n  });\n  onConnectStart === null || onConnectStart === void 0 || onConnectStart(event, {\n    nodeId,\n    handleId,\n    handleType\n  });\n  function onPointerMove(event) {\n    const {\n      transform\n    } = getState();\n    connectionPosition = getEventPosition(event, containerBounds);\n    const {\n      handle,\n      validHandleResult\n    } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, handle => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n    closestHandle = handle;\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    handleDomNode = validHandleResult.handleDomNode;\n    connection = validHandleResult.connection;\n    isValid = validHandleResult.isValid;\n    setState({\n      connectionPosition: closestHandle && isValid ? rendererPointToPoint({\n        x: closestHandle.x,\n        y: closestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n      connectionEndHandle: validHandleResult.endHandle\n    });\n    if (!closestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    var _getState$onConnectEn, _getState;\n    if ((closestHandle || handleDomNode) && connection && isValid) {\n      onConnect === null || onConnect === void 0 || onConnect(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    (_getState$onConnectEn = (_getState = getState()).onConnectEnd) === null || _getState$onConnectEn === void 0 || _getState$onConnectEn.call(_getState, event);\n    if (edgeUpdaterType) {\n      onReconnectEnd === null || onReconnectEnd === void 0 || onReconnectEnd(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nconst alwaysValid = () => true;\nconst selector$f = s => ({\n  connectionStartHandle: s.connectionStartHandle,\n  connectOnClick: s.connectOnClick,\n  noPanClassName: s.noPanClassName\n});\nconst connectingSelector = (nodeId, handleId, type) => state => {\n  const {\n    connectionStartHandle: startHandle,\n    connectionEndHandle: endHandle,\n    connectionClickStartHandle: clickHandle\n  } = state;\n  return {\n    connecting: (startHandle === null || startHandle === void 0 ? void 0 : startHandle.nodeId) === nodeId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.handleId) === handleId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.type) === type || (endHandle === null || endHandle === void 0 ? void 0 : endHandle.nodeId) === nodeId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.handleId) === handleId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.type) === type,\n    clickConnecting: (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.nodeId) === nodeId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.handleId) === handleId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.type) === type\n  };\n};\nconst Handle = forwardRef((_ref30, ref) => {\n  let {\n      type = 'source',\n      position = Position.Top,\n      isValidConnection,\n      isConnectable = true,\n      isConnectableStart = true,\n      isConnectableEnd = true,\n      id,\n      onConnect,\n      children,\n      className,\n      onMouseDown,\n      onTouchStart\n    } = _ref30,\n    rest = _objectWithoutProperties(_ref30, _excluded4);\n  const handleId = id || null;\n  const isTarget = type === 'target';\n  const store = useStoreApi();\n  const nodeId = useNodeId();\n  const {\n    connectOnClick,\n    noPanClassName\n  } = useStore(selector$f, shallow);\n  const {\n    connecting,\n    clickConnecting\n  } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n  if (!nodeId) {\n    var _store$getState$onErr, _store$getState;\n    (_store$getState$onErr = (_store$getState = store.getState()).onError) === null || _store$getState$onErr === void 0 || _store$getState$onErr.call(_store$getState, '010', errorMessages['error010']());\n  }\n  const onConnectExtended = params => {\n    const {\n      defaultEdgeOptions,\n      onConnect: onConnectAction,\n      hasDefaultEdges\n    } = store.getState();\n    const edgeParams = _objectSpread(_objectSpread({}, defaultEdgeOptions), params);\n    if (hasDefaultEdges) {\n      const {\n        edges,\n        setEdges\n      } = store.getState();\n      setEdges(addEdge(edgeParams, edges));\n    }\n    onConnectAction === null || onConnectAction === void 0 || onConnectAction(edgeParams);\n    onConnect === null || onConnect === void 0 || onConnect(edgeParams);\n  };\n  const onPointerDown = event => {\n    if (!nodeId) {\n      return;\n    }\n    const isMouseTriggered = isMouseEvent(event);\n    if (isConnectableStart && (isMouseTriggered && event.button === 0 || !isMouseTriggered)) {\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectExtended,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown === null || onMouseDown === void 0 || onMouseDown(event);\n    } else {\n      onTouchStart === null || onTouchStart === void 0 || onTouchStart(event);\n    }\n  };\n  const onClick = event => {\n    const {\n      onClickConnectStart,\n      onClickConnectEnd,\n      connectionClickStartHandle,\n      connectionMode,\n      isValidConnection: isValidConnectionStore\n    } = store.getState();\n    if (!nodeId || !connectionClickStartHandle && !isConnectableStart) {\n      return;\n    }\n    if (!connectionClickStartHandle) {\n      onClickConnectStart === null || onClickConnectStart === void 0 || onClickConnectStart(event, {\n        nodeId,\n        handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionClickStartHandle: {\n          nodeId,\n          type,\n          handleId\n        }\n      });\n      return;\n    }\n    const doc = getHostForElement(event.target);\n    const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n    const {\n      connection,\n      isValid\n    } = isValidHandle({\n      nodeId,\n      id: handleId,\n      type\n    }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd === null || onClickConnectEnd === void 0 || onClickConnectEnd(event);\n    store.setState({\n      connectionClickStartHandle: null\n    });\n  };\n  return React.createElement(\"div\", _objectSpread({\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(type),\n    className: cc(['react-flow__handle', \"react-flow__handle-\".concat(position), 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connectablestart: isConnectableStart,\n      connectableend: isConnectableEnd,\n      connecting: clickConnecting,\n      // this class is used to style the handle when the user is connecting\n      connectionindicator: isConnectable && (isConnectableStart && !connecting || isConnectableEnd && connecting)\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref\n  }, rest), children);\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nconst DefaultNode = _ref31 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top,\n    sourcePosition = Position.Bottom\n  } = _ref31;\n  return React.createElement(React.Fragment, null, React.createElement(Handle$1, {\n    type: \"target\",\n    position: targetPosition,\n    isConnectable: isConnectable\n  }), data === null || data === void 0 ? void 0 : data.label, React.createElement(Handle$1, {\n    type: \"source\",\n    position: sourcePosition,\n    isConnectable: isConnectable\n  }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nconst InputNode = _ref32 => {\n  let {\n    data,\n    isConnectable,\n    sourcePosition = Position.Bottom\n  } = _ref32;\n  return React.createElement(React.Fragment, null, data === null || data === void 0 ? void 0 : data.label, React.createElement(Handle$1, {\n    type: \"source\",\n    position: sourcePosition,\n    isConnectable: isConnectable\n  }));\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nconst OutputNode = _ref33 => {\n  let {\n    data,\n    isConnectable,\n    targetPosition = Position.Top\n  } = _ref33;\n  return React.createElement(React.Fragment, null, React.createElement(Handle$1, {\n    type: \"target\",\n    position: targetPosition,\n    isConnectable: isConnectable\n  }), data === null || data === void 0 ? void 0 : data.label);\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\nconst selector$e = s => ({\n  selectedNodes: s.getNodes().filter(n => n.selected),\n  selectedEdges: s.edges.filter(e => e.selected).map(e => _objectSpread({}, e))\n});\nconst selectId = obj => obj.id;\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(_ref34 => {\n  let {\n    onSelectionChange\n  } = _ref34;\n  const store = useStoreApi();\n  const {\n    selectedNodes,\n    selectedEdges\n  } = useStore(selector$e, areEqual);\n  useEffect(() => {\n    const params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange === null || onSelectionChange === void 0 || onSelectionChange(params);\n    store.getState().onSelectionChange.forEach(fn => fn(params));\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = s => !!s.onSelectionChange;\nfunction Wrapper$1(_ref35) {\n  let {\n    onSelectionChange\n  } = _ref35;\n  const storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return React.createElement(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nconst selector$d = s => ({\n  setNodes: s.setNodes,\n  setEdges: s.setEdges,\n  setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n  setMinZoom: s.setMinZoom,\n  setMaxZoom: s.setMaxZoom,\n  setTranslateExtent: s.setTranslateExtent,\n  setNodeExtent: s.setNodeExtent,\n  reset: s.reset\n});\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setState({\n        [key]: value\n      });\n    }\n  }, [value]);\n}\nconst StoreUpdater = _ref36 => {\n  let {\n    nodes,\n    edges,\n    defaultNodes,\n    defaultEdges,\n    onConnect,\n    onConnectStart,\n    onConnectEnd,\n    onClickConnectStart,\n    onClickConnectEnd,\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    edgesFocusable,\n    edgesUpdatable,\n    elevateNodesOnSelect,\n    minZoom,\n    maxZoom,\n    nodeExtent,\n    onNodesChange,\n    onEdgesChange,\n    elementsSelectable,\n    connectionMode,\n    snapGrid,\n    snapToGrid,\n    translateExtent,\n    connectOnClick,\n    defaultEdgeOptions,\n    fitView,\n    fitViewOptions,\n    onNodesDelete,\n    onEdgesDelete,\n    onNodeDrag,\n    onNodeDragStart,\n    onNodeDragStop,\n    onSelectionDrag,\n    onSelectionDragStart,\n    onSelectionDragStop,\n    noPanClassName,\n    nodeOrigin,\n    rfId,\n    autoPanOnConnect,\n    autoPanOnNodeDrag,\n    onError,\n    connectionRadius,\n    isValidConnection,\n    nodeDragThreshold\n  } = _ref36;\n  const {\n    setNodes,\n    setEdges,\n    setDefaultNodesAndEdges,\n    setMinZoom,\n    setMaxZoom,\n    setTranslateExtent,\n    setNodeExtent,\n    reset\n  } = useStore(selector$d, shallow);\n  const store = useStoreApi();\n  useEffect(() => {\n    const edgesWithDefaults = defaultEdges === null || defaultEdges === void 0 ? void 0 : defaultEdges.map(e => _objectSpread(_objectSpread({}, e), defaultEdgeOptions));\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return () => {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n  useDirectStoreUpdater('nodeDragThreshold', nodeDragThreshold, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nconst style = {\n  display: 'none'\n};\nconst ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = s => s.ariaLiveMessage;\nfunction AriaLiveMessage(_ref37) {\n  let {\n    rfId\n  } = _ref37;\n  const ariaLiveMessage = useStore(selector$c);\n  return React.createElement(\"div\", {\n    id: \"\".concat(ARIA_LIVE_MESSAGE, \"-\").concat(rfId),\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle\n  }, ariaLiveMessage);\n}\nfunction A11yDescriptions(_ref38) {\n  let {\n    rfId,\n    disableKeyboardA11y\n  } = _ref38;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n    style: style\n  }, \"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '), React.createElement(\"div\", {\n    id: \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId),\n    style: style\n  }, \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"), !disableKeyboardA11y && React.createElement(AriaLiveMessage, {\n    rfId: rfId\n  }));\n}\n\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function () {\n  let keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    actInsideInputWithModifier: true\n  };\n  const [keyPressed, setKeyPressed] = useState(false);\n  // we need to remember if a modifier key is pressed in order to track it\n  const modifierPressed = useRef(false);\n  // we need to remember the pressed keys in order to support combinations\n  const pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  const [keyCodes, keysToWatch] = useMemo(() => {\n    if (keyCode !== null) {\n      const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n      const keys = keyCodeArr.filter(kc => typeof kc === 'string').map(kc => kc.split('+'));\n      const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n      return [keys, keysFlat];\n    }\n    return [[], []];\n  }, [keyCode]);\n  useEffect(() => {\n    const doc = typeof document !== 'undefined' ? document : null;\n    const target = (options === null || options === void 0 ? void 0 : options.target) || doc;\n    if (keyCode !== null) {\n      const downHandler = event => {\n        modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n        const preventAction = (!modifierPressed.current || modifierPressed.current && !options.actInsideInputWithModifier) && isInputDOMNode(event);\n        if (preventAction) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      const upHandler = event => {\n        const preventAction = (!modifierPressed.current || modifierPressed.current && !options.actInsideInputWithModifier) && isInputDOMNode(event);\n        if (preventAction) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n        // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n        if (event.key === 'Meta') {\n          pressedKeys.current.clear();\n        }\n        modifierPressed.current = false;\n      };\n      const resetHandler = () => {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      target === null || target === void 0 || target.addEventListener('keydown', downHandler);\n      target === null || target === void 0 || target.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return () => {\n        target === null || target === void 0 || target.removeEventListener('keydown', downHandler);\n        target === null || target === void 0 || target.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(keys => isUp || keys.length === pressedKeys.size)\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(keys => keys.every(k => pressedKeys.has(k)));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  var _result$x, _result$y, _parentNode$internals, _parentNode$internals2, _result$z, _parentNode$internals3, _parentNode$internals4, _result$z2;\n  const parentId = node.parentNode || node.parentId;\n  if (!parentId) {\n    return result;\n  }\n  const parentNode = nodeInternals.get(parentId);\n  const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: ((_result$x = result.x) !== null && _result$x !== void 0 ? _result$x : 0) + parentNodePosition.x,\n    y: ((_result$y = result.y) !== null && _result$y !== void 0 ? _result$y : 0) + parentNodePosition.y,\n    z: ((_parentNode$internals = (_parentNode$internals2 = parentNode[internalsSymbol]) === null || _parentNode$internals2 === void 0 ? void 0 : _parentNode$internals2.z) !== null && _parentNode$internals !== void 0 ? _parentNode$internals : 0) > ((_result$z = result.z) !== null && _result$z !== void 0 ? _result$z : 0) ? (_parentNode$internals3 = (_parentNode$internals4 = parentNode[internalsSymbol]) === null || _parentNode$internals4 === void 0 ? void 0 : _parentNode$internals4.z) !== null && _parentNode$internals3 !== void 0 ? _parentNode$internals3 : 0 : (_result$z2 = result.z) !== null && _result$z2 !== void 0 ? _result$z2 : 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(node => {\n    const parentId = node.parentNode || node.parentId;\n    if (parentId && !nodeInternals.has(parentId)) {\n      throw new Error(\"Parent node \".concat(parentId, \" not found\"));\n    }\n    if (parentId || parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n      var _node$internalsSymbol, _node$internalsSymbol2;\n      const {\n        x,\n        y,\n        z\n      } = calculateXYZPosition(node, nodeInternals, _objectSpread(_objectSpread({}, node.position), {}, {\n        z: (_node$internalsSymbol = (_node$internalsSymbol2 = node[internalsSymbol]) === null || _node$internalsSymbol2 === void 0 ? void 0 : _node$internalsSymbol2.z) !== null && _node$internalsSymbol !== void 0 ? _node$internalsSymbol : 0\n      }), nodeOrigin);\n      node.positionAbsolute = {\n        x,\n        y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  const nextNodeInternals = new Map();\n  const parentNodes = {};\n  const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(node => {\n    var _currInternals$intern;\n    const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    const currInternals = nodeInternals.get(node.id);\n    const internals = _objectSpread(_objectSpread({}, node), {}, {\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    });\n    const parentId = node.parentNode || node.parentId;\n    if (parentId) {\n      parentNodes[parentId] = true;\n    }\n    const resetHandleBounds = (currInternals === null || currInternals === void 0 ? void 0 : currInternals.type) && (currInternals === null || currInternals === void 0 ? void 0 : currInternals.type) !== node.type;\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: resetHandleBounds ? undefined : currInternals === null || currInternals === void 0 || (_currInternals$intern = currInternals[internalsSymbol]) === null || _currInternals$intern === void 0 ? void 0 : _currInternals$intern.handleBounds,\n        z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction fitView(get) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    getNodes,\n    width,\n    height,\n    minZoom,\n    maxZoom,\n    d3Zoom,\n    d3Selection,\n    fitViewOnInitDone,\n    fitViewOnInit,\n    nodeOrigin\n  } = get();\n  const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  const d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    const nodes = getNodes().filter(n => {\n      var _options$nodes;\n      const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if ((_options$nodes = options.nodes) !== null && _options$nodes !== void 0 && _options$nodes.length) {\n        return isVisible && options.nodes.some(optionNode => optionNode.id === n.id);\n      }\n      return isVisible;\n    });\n    const nodesInitialized = nodes.every(n => n.width && n.height);\n    if (nodes.length > 0 && nodesInitialized) {\n      var _options$minZoom, _options$maxZoom, _options$padding;\n      const bounds = getNodesBounds(nodes, nodeOrigin);\n      const {\n        x,\n        y,\n        zoom\n      } = getViewportForBounds(bounds, width, height, (_options$minZoom = options.minZoom) !== null && _options$minZoom !== void 0 ? _options$minZoom : minZoom, (_options$maxZoom = options.maxZoom) !== null && _options$maxZoom !== void 0 ? _options$maxZoom : maxZoom, (_options$padding = options.padding) !== null && _options$padding !== void 0 ? _options$padding : 0.1);\n      const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(change => {\n    const node = nodeInternals.get(change.id);\n    if (node) {\n      nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, {\n        [internalsSymbol]: node[internalsSymbol],\n        selected: change.selected\n      }));\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(e => {\n    const change = edgeChanges.find(change => change.id === e.id);\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref39) {\n  let {\n    changedNodes,\n    changedEdges,\n    get,\n    set\n  } = _ref39;\n  const {\n    nodeInternals,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    hasDefaultNodes,\n    hasDefaultEdges\n  } = get();\n  if (changedNodes !== null && changedNodes !== void 0 && changedNodes.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange === null || onNodesChange === void 0 || onNodesChange(changedNodes);\n  }\n  if (changedEdges !== null && changedEdges !== void 0 && changedEdges.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange === null || onEdgesChange === void 0 || onEdgesChange(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: () => 1,\n  setViewport: noop,\n  getViewport: () => ({\n    x: 0,\n    y: 0,\n    zoom: 1\n  }),\n  fitView: () => false,\n  setCenter: noop,\n  fitBounds: noop,\n  project: position => position,\n  screenToFlowPosition: position => position,\n  flowToScreenPosition: position => position,\n  viewportInitialized: false\n};\nconst selector$b = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection\n});\nconst useViewportHelper = () => {\n  const store = useStoreApi();\n  const {\n    d3Zoom,\n    d3Selection\n  } = useStore(selector$b, shallow);\n  const viewportHelperFunctions = useMemo(() => {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1.2),\n        zoomOut: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1 / 1.2),\n        zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), zoomLevel),\n        getZoom: () => store.getState().transform[2],\n        setViewport: (transform, options) => {\n          var _transform$x, _transform$y, _transform$zoom;\n          const [x, y, zoom] = store.getState().transform;\n          const nextTransform = zoomIdentity.translate((_transform$x = transform.x) !== null && _transform$x !== void 0 ? _transform$x : x, (_transform$y = transform.y) !== null && _transform$y !== void 0 ? _transform$y : y).scale((_transform$zoom = transform.zoom) !== null && _transform$zoom !== void 0 ? _transform$zoom : zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), nextTransform);\n        },\n        getViewport: () => {\n          const [x, y, zoom] = store.getState().transform;\n          return {\n            x,\n            y,\n            zoom\n          };\n        },\n        fitView: options => fitView(store.getState, options),\n        setCenter: (x, y, options) => {\n          const {\n            width,\n            height,\n            maxZoom\n          } = store.getState();\n          const nextZoom = typeof (options === null || options === void 0 ? void 0 : options.zoom) !== 'undefined' ? options.zoom : maxZoom;\n          const centerX = width / 2 - x * nextZoom;\n          const centerY = height / 2 - y * nextZoom;\n          const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        fitBounds: (bounds, options) => {\n          var _options$padding2;\n          const {\n            width,\n            height,\n            minZoom,\n            maxZoom\n          } = store.getState();\n          const {\n            x,\n            y,\n            zoom\n          } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, (_options$padding2 = options === null || options === void 0 ? void 0 : options.padding) !== null && _options$padding2 !== void 0 ? _options$padding2 : 0.1);\n          const transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        // @deprecated Use `screenToFlowPosition`.\n        project: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid\n          } = store.getState();\n          console.warn('[DEPRECATED] `project` is deprecated. Instead use `screenToFlowPosition`. There is no need to subtract the react flow bounds anymore! https://reactflow.dev/api-reference/types/react-flow-instance#screen-to-flow-position');\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        screenToFlowPosition: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid,\n            domNode\n          } = store.getState();\n          if (!domNode) {\n            return position;\n          }\n          const {\n            x: domX,\n            y: domY\n          } = domNode.getBoundingClientRect();\n          const relativePosition = {\n            x: position.x - domX,\n            y: position.y - domY\n          };\n          return pointToRendererPoint(relativePosition, transform, snapToGrid, snapGrid);\n        },\n        flowToScreenPosition: position => {\n          const {\n            transform,\n            domNode\n          } = store.getState();\n          if (!domNode) {\n            return position;\n          }\n          const {\n            x: domX,\n            y: domY\n          } = domNode.getBoundingClientRect();\n          const rendererPosition = rendererPointToPoint(position, transform);\n          return {\n            x: rendererPosition.x + domX,\n            y: rendererPosition.y + domY\n          };\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  const viewportHelper = useViewportHelper();\n  const store = useStoreApi();\n  const getNodes = useCallback(() => {\n    return store.getState().getNodes().map(n => _objectSpread({}, n));\n  }, []);\n  const getNode = useCallback(id => {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  const getEdges = useCallback(() => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.map(e => _objectSpread({}, e));\n  }, []);\n  const getEdge = useCallback(id => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.find(e => e.id === id);\n  }, []);\n  const setNodes = useCallback(payload => {\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    const nodes = getNodes();\n    const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nextNodes.length === 0 ? nodes.map(node => ({\n        type: 'remove',\n        id: node.id\n      })) : nextNodes.map(node => ({\n        item: node,\n        type: 'reset'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const setEdges = useCallback(payload => {\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.length === 0 ? edges.map(edge => ({\n        type: 'remove',\n        id: edge.id\n      })) : nextEdges.map(edge => ({\n        item: edge,\n        type: 'reset'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const addNodes = useCallback(payload => {\n    const nodes = Array.isArray(payload) ? payload : [payload];\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    if (hasDefaultNodes) {\n      const currentNodes = getNodes();\n      const nextNodes = [...currentNodes, ...nodes];\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nodes.map(node => ({\n        item: node,\n        type: 'add'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const addEdges = useCallback(payload => {\n    const nextEdges = Array.isArray(payload) ? payload : [payload];\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    if (hasDefaultEdges) {\n      setEdges([...edges, ...nextEdges]);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.map(edge => ({\n        item: edge,\n        type: 'add'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const toObject = useCallback(() => {\n    const {\n      getNodes,\n      edges = [],\n      transform\n    } = store.getState();\n    const [x, y, zoom] = transform;\n    return {\n      nodes: getNodes().map(n => _objectSpread({}, n)),\n      edges: edges.map(e => _objectSpread({}, e)),\n      viewport: {\n        x,\n        y,\n        zoom\n      }\n    };\n  }, []);\n  const deleteElements = useCallback(_ref40 => {\n    let {\n      nodes: nodesDeleted,\n      edges: edgesDeleted\n    } = _ref40;\n    const {\n      nodeInternals,\n      getNodes,\n      edges,\n      hasDefaultNodes,\n      hasDefaultEdges,\n      onNodesDelete,\n      onEdgesDelete,\n      onNodesChange,\n      onEdgesChange\n    } = store.getState();\n    const nodeIds = (nodesDeleted || []).map(node => node.id);\n    const edgeIds = (edgesDeleted || []).map(edge => edge.id);\n    const nodesToRemove = getNodes().reduce((res, node) => {\n      const parentId = node.parentNode || node.parentId;\n      const parentHit = !nodeIds.includes(node.id) && parentId && res.find(n => n.id === parentId);\n      const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    const deletableEdges = edges.filter(e => typeof e.deletable === 'boolean' ? e.deletable : true);\n    const initialHitEdges = deletableEdges.filter(e => edgeIds.includes(e.id));\n    if (nodesToRemove || initialHitEdges) {\n      const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n      const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(e => !edgeIdsToRemove.includes(e.id))\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(node => {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete === null || onEdgesDelete === void 0 || onEdgesDelete(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(id => ({\n            id,\n            type: 'remove'\n          })));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete === null || onNodesDelete === void 0 || onNodesDelete(nodesToRemove);\n        if (onNodesChange) {\n          const nodeChanges = nodesToRemove.map(n => ({\n            id: n.id,\n            type: 'remove'\n          }));\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  const getNodeRect = useCallback(nodeOrRect => {\n    const isRect = isRectObject(nodeOrRect);\n    const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    if (!isRect && !node) {\n      return [null, null, isRect];\n    }\n    const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  const getIntersectingNodes = useCallback(function (nodeOrRect) {\n    let partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let nodes = arguments.length > 2 ? arguments[2] : undefined;\n    const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(n => {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      const currNodeRect = nodeToRect(n);\n      const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      const partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n    });\n  }, []);\n  const isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    let partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const [nodeRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return false;\n    }\n    const overlappingArea = getOverlappingArea(nodeRect, area);\n    const partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n  }, []);\n  return useMemo(() => {\n    return _objectSpread(_objectSpread({}, viewportHelper), {}, {\n      getNodes,\n      getNode,\n      getEdges,\n      getEdge,\n      setNodes,\n      setEdges,\n      addNodes,\n      addEdges,\n      toObject,\n      deleteElements,\n      getIntersectingNodes,\n      isNodeIntersecting\n    });\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nconst deleteKeyOptions = {\n  actInsideInputWithModifier: false\n};\nvar useGlobalKeyHandler = _ref41 => {\n  let {\n    deleteKeyCode,\n    multiSelectionKeyCode\n  } = _ref41;\n  const store = useStoreApi();\n  const {\n    deleteElements\n  } = useReactFlow();\n  const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n  const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(() => {\n    if (deleteKeyPressed) {\n      const {\n        edges,\n        getNodes\n      } = store.getState();\n      const selectedNodes = getNodes().filter(node => node.selected);\n      const selectedEdges = edges.filter(edge => edge.selected);\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(() => {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  const store = useStoreApi();\n  useEffect(() => {\n    let resizeObserver;\n    const updateDimensions = () => {\n      if (!rendererNode.current) {\n        return;\n      }\n      const size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        var _store$getState$onErr2, _store$getState2;\n        (_store$getState$onErr2 = (_store$getState2 = store.getState()).onError) === null || _store$getState$onErr2 === void 0 || _store$getState$onErr2.call(_store$getState2, '004', errorMessages['error004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(() => updateDimensions());\n      resizeObserver.observe(rendererNode.current);\n    }\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nconst containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = eventTransform => ({\n  x: eventTransform.x,\n  y: eventTransform.y,\n  zoom: eventTransform.k\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(\".\".concat(className));\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = event => {\n  const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection,\n  d3ZoomHandler: s.d3ZoomHandler,\n  userSelectionActive: s.userSelectionActive\n});\nconst ZoomPane = _ref42 => {\n  let {\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onPaneContextMenu,\n    zoomOnScroll = true,\n    zoomOnPinch = true,\n    panOnScroll = false,\n    panOnScrollSpeed = 0.5,\n    panOnScrollMode = PanOnScrollMode.Free,\n    zoomOnDoubleClick = true,\n    elementsSelectable,\n    panOnDrag = true,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    zoomActivationKeyCode,\n    preventScrolling = true,\n    children,\n    noWheelClassName,\n    noPanClassName\n  } = _ref42;\n  const timerId = useRef();\n  const store = useStoreApi();\n  const isZoomingOrPanning = useRef(false);\n  const zoomedWithRightMouseButton = useRef(false);\n  const zoomPane = useRef(null);\n  const prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  const {\n    d3Zoom,\n    d3Selection,\n    d3ZoomHandler,\n    userSelectionActive\n  } = useStore(selector$a, shallow);\n  const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  const mouseButton = useRef(0);\n  const isPanScrolling = useRef(false);\n  const panScrollTimeout = useRef();\n  useResizeHandler(zoomPane);\n  useEffect(() => {\n    if (zoomPane.current) {\n      const bbox = zoomPane.current.getBoundingClientRect();\n      const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      const selection = select(zoomPane.current).call(d3ZoomInstance);\n      const updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      const extent = [[0, 0], [bbox.width, bbox.height]];\n      const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      d3ZoomInstance.wheelDelta(wheelDelta);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', event => {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          const currentZoom = d3Selection.property('__zoom').k || 1;\n          // macos and win set ctrlKey=true for pinch gesture on a trackpad\n          if (event.ctrlKey && zoomOnPinch) {\n            const point = pointer(event);\n            const pinchDelta = wheelDelta(event);\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            // @ts-ignore\n            d3Zoom.scaleTo(d3Selection, zoom, point, event);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          // this enables vertical scrolling with shift + scroll on windows\n          if (!isMacOs() && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n            deltaX = event.deltaY * deltaNormalize;\n            deltaY = 0;\n          }\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed,\n          // @ts-ignore\n          {\n            internal: true\n          });\n          const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n          const {\n            onViewportChangeStart,\n            onViewportChange,\n            onViewportChangeEnd\n          } = store.getState();\n          clearTimeout(panScrollTimeout.current);\n          // for pan on scroll we need to handle the event calls on our own\n          // we can't use the start, zoom and end events from d3-zoom\n          // because start and move gets called on every scroll event and not once at the beginning\n          if (!isPanScrolling.current) {\n            isPanScrolling.current = true;\n            onMoveStart === null || onMoveStart === void 0 || onMoveStart(event, nextViewport);\n            onViewportChangeStart === null || onViewportChangeStart === void 0 || onViewportChangeStart(nextViewport);\n          }\n          if (isPanScrolling.current) {\n            onMove === null || onMove === void 0 || onMove(event, nextViewport);\n            onViewportChange === null || onViewportChange === void 0 || onViewportChange(nextViewport);\n            panScrollTimeout.current = setTimeout(() => {\n              onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd(event, nextViewport);\n              onViewportChangeEnd === null || onViewportChangeEnd === void 0 || onViewportChangeEnd(nextViewport);\n              isPanScrolling.current = false;\n            }, 150);\n          }\n        }, {\n          passive: false\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          // we still want to enable pinch zooming even if preventScrolling is set to false\n          const invalidEvent = !preventScrolling && event.type === 'wheel' && !event.ctrlKey;\n          if (invalidEvent || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        }, {\n          passive: false\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName, onMoveStart, onMove, onMoveEnd]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('start', event => {\n        var _event$sourceEvent, _event$sourceEvent2;\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = (_event$sourceEvent = event.sourceEvent) === null || _event$sourceEvent === void 0 ? void 0 : _event$sourceEvent.button;\n        const {\n          onViewportChangeStart\n        } = store.getState();\n        const flowTransform = eventToFlowTransform(event.transform);\n        isZoomingOrPanning.current = true;\n        prevTransform.current = flowTransform;\n        if (((_event$sourceEvent2 = event.sourceEvent) === null || _event$sourceEvent2 === void 0 ? void 0 : _event$sourceEvent2.type) === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        onViewportChangeStart === null || onViewportChangeStart === void 0 || onViewportChangeStart(flowTransform);\n        onMoveStart === null || onMoveStart === void 0 || onMoveStart(event.sourceEvent, flowTransform);\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(() => {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', event => {\n          var _mouseButton$current, _event$sourceEvent3;\n          const {\n            onViewportChange\n          } = store.getState();\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current = mouseButton.current) !== null && _mouseButton$current !== void 0 ? _mouseButton$current : 0));\n          if ((onMove || onViewportChange) && !((_event$sourceEvent3 = event.sourceEvent) !== null && _event$sourceEvent3 !== void 0 && _event$sourceEvent3.internal)) {\n            const flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange === null || onViewportChange === void 0 || onViewportChange(flowTransform);\n            onMove === null || onMove === void 0 || onMove(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('end', event => {\n        var _mouseButton$current2;\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        const {\n          onViewportChangeEnd\n        } = store.getState();\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current2 = mouseButton.current) !== null && _mouseButton$current2 !== void 0 ? _mouseButton$current2 : 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(() => {\n            onViewportChangeEnd === null || onViewportChangeEnd === void 0 || onViewportChangeEnd(flowTransform);\n            onMoveEnd === null || onMoveEnd === void 0 || onMoveEnd(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.filter(event => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if ((panOnDrag === true || Array.isArray(panOnDrag) && panOnDrag.includes(1)) && event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && (event.type !== 'wheel' || panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed)) {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && event.type === 'mousedown') {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return React.createElement(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle\n  }, children);\n};\nconst selector$9 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  userSelectionRect: s.userSelectionRect\n});\nfunction UserSelection() {\n  const {\n    userSelectionActive,\n    userSelectionRect\n  } = useStore(selector$9, shallow);\n  const isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: \"translate(\".concat(userSelectionRect.x, \"px, \").concat(userSelectionRect.y, \"px)\")\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  const parentId = updateItem.parentNode || updateItem.parentId;\n  const parent = res.find(e => e.id === parentId);\n  if (parent) {\n    const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      var _parent$style$width, _parent$style$height;\n      parent.style = _objectSpread({}, parent.style) || {};\n      parent.style.width = (_parent$style$width = parent.style.width) !== null && _parent$style$width !== void 0 ? _parent$style$width : parent.width;\n      parent.style.height = (_parent$style$height = parent.style.height) !== null && _parent$style$height !== void 0 ? _parent$style$height : parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        const xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        const yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(c => c.type === 'reset')) {\n    return changes.filter(c => c.type === 'reset').map(c => c.item);\n  }\n  const initElements = changes.filter(c => c.type === 'add').map(c => c.item);\n  return elements.reduce((res, item) => {\n    const currentChanges = changes.filter(c => c.id === item.id);\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    const updateItem = _objectSpread({}, item);\n    for (const currentChange of currentChanges) {\n      if (currentChange) {\n        switch (currentChange.type) {\n          case 'select':\n            {\n              updateItem.selected = currentChange.selected;\n              break;\n            }\n          case 'position':\n            {\n              if (typeof currentChange.position !== 'undefined') {\n                updateItem.position = currentChange.position;\n              }\n              if (typeof currentChange.positionAbsolute !== 'undefined') {\n                updateItem.positionAbsolute = currentChange.positionAbsolute;\n              }\n              if (typeof currentChange.dragging !== 'undefined') {\n                updateItem.dragging = currentChange.dragging;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'dimensions':\n            {\n              if (typeof currentChange.dimensions !== 'undefined') {\n                updateItem.width = currentChange.dimensions.width;\n                updateItem.height = currentChange.dimensions.height;\n              }\n              if (typeof currentChange.updateStyle !== 'undefined') {\n                updateItem.style = _objectSpread(_objectSpread({}, updateItem.style || {}), currentChange.dimensions);\n              }\n              if (typeof currentChange.resizing === 'boolean') {\n                updateItem.resizing = currentChange.resizing;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'remove':\n            {\n              return res;\n            }\n        }\n      }\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n  id,\n  type: 'select',\n  selected\n});\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce((res, item) => {\n    const willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\n\n/**\n * The user selection rectangle gets displayed when a user drags the mouse while pressing shift\n */\nconst wrapHandler = (handler, containerRef) => {\n  return event => {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler === null || handler === void 0 || handler(event);\n  };\n};\nconst selector$8 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  elementsSelectable: s.elementsSelectable,\n  dragging: s.paneDragging\n});\nconst Pane = memo(_ref43 => {\n  let {\n    isSelecting,\n    selectionMode = SelectionMode.Full,\n    panOnDrag,\n    onSelectionStart,\n    onSelectionEnd,\n    onPaneClick,\n    onPaneContextMenu,\n    onPaneScroll,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    children\n  } = _ref43;\n  const container = useRef(null);\n  const store = useStoreApi();\n  const prevSelectedNodesCount = useRef(0);\n  const prevSelectedEdgesCount = useRef(0);\n  const containerBounds = useRef();\n  const {\n    userSelectionActive,\n    elementsSelectable,\n    dragging\n  } = useStore(selector$8, shallow);\n  const resetUserSelection = () => {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  const onClick = event => {\n    onPaneClick === null || onPaneClick === void 0 || onPaneClick(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  const onContextMenu = event => {\n    if (Array.isArray(panOnDrag) && panOnDrag !== null && panOnDrag !== void 0 && panOnDrag.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu === null || onPaneContextMenu === void 0 || onPaneContextMenu(event);\n  };\n  const onWheel = onPaneScroll ? event => onPaneScroll(event) : undefined;\n  const onMouseDown = event => {\n    const {\n      resetSelectedElements,\n      domNode\n    } = store.getState();\n    containerBounds.current = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = getEventPosition(event, containerBounds.current);\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x,\n        y\n      }\n    });\n    onSelectionStart === null || onSelectionStart === void 0 || onSelectionStart(event);\n  };\n  const onMouseMove = event => {\n    var _userSelectionRect$st, _userSelectionRect$st2;\n    const {\n      userSelectionRect,\n      nodeInternals,\n      edges,\n      transform,\n      onNodesChange,\n      onEdgesChange,\n      nodeOrigin,\n      getNodes\n    } = store.getState();\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    const mousePos = getEventPosition(event, containerBounds.current);\n    const startX = (_userSelectionRect$st = userSelectionRect.startX) !== null && _userSelectionRect$st !== void 0 ? _userSelectionRect$st : 0;\n    const startY = (_userSelectionRect$st2 = userSelectionRect.startY) !== null && _userSelectionRect$st2 !== void 0 ? _userSelectionRect$st2 : 0;\n    const nextUserSelectRect = _objectSpread(_objectSpread({}, userSelectionRect), {}, {\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    });\n    const nodes = getNodes();\n    const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(e => e.id);\n    const selectedNodeIds = selectedNodes.map(n => n.id);\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      const changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      const changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (changes.length) {\n        onEdgesChange === null || onEdgesChange === void 0 || onEdgesChange(changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  const onMouseUp = event => {\n    if (event.button !== 0) {\n      return;\n    }\n    const {\n      userSelectionRect\n    } = store.getState();\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick === null || onClick === void 0 || onClick(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd === null || onSelectionEnd === void 0 || onSelectionEnd(event);\n  };\n  const onMouseLeave = event => {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd === null || onSelectionEnd === void 0 || onSelectionEnd(event);\n    }\n    resetUserSelection();\n  };\n  const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return React.createElement(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle\n  }, children, React.createElement(UserSelection, null));\n});\nPane.displayName = 'Pane';\nfunction isParentSelected(node, nodeInternals) {\n  const parentId = node.parentNode || node.parentId;\n  if (!parentId) {\n    return false;\n  }\n  const parentNode = nodeInternals.get(parentId);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  let current = target;\n  do {\n    var _current;\n    if ((_current = current) !== null && _current !== void 0 && _current.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(n => (n.selected || n.id === nodeId) && (!n.parentNode || n.parentId || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined')).map(n => {\n    var _n$positionAbsolute$x, _n$positionAbsolute, _n$positionAbsolute$y, _n$positionAbsolute2;\n    return {\n      id: n.id,\n      position: n.position || {\n        x: 0,\n        y: 0\n      },\n      positionAbsolute: n.positionAbsolute || {\n        x: 0,\n        y: 0\n      },\n      distance: {\n        x: mousePos.x - ((_n$positionAbsolute$x = (_n$positionAbsolute = n.positionAbsolute) === null || _n$positionAbsolute === void 0 ? void 0 : _n$positionAbsolute.x) !== null && _n$positionAbsolute$x !== void 0 ? _n$positionAbsolute$x : 0),\n        y: mousePos.y - ((_n$positionAbsolute$y = (_n$positionAbsolute2 = n.positionAbsolute) === null || _n$positionAbsolute2 === void 0 ? void 0 : _n$positionAbsolute2.y) !== null && _n$positionAbsolute$y !== void 0 ? _n$positionAbsolute$y : 0)\n      },\n      delta: {\n        x: 0,\n        y: 0\n      },\n      extent: n.extent,\n      parentNode: n.parentNode || n.parentId,\n      parentId: n.parentNode || n.parentId,\n      width: n.width,\n      height: n.height,\n      expandParent: n.expandParent\n    };\n  });\n}\nfunction clampNodeExtent(node, extent) {\n  if (!extent || extent === 'parent') {\n    return extent;\n  }\n  return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  let nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  let onError = arguments.length > 5 ? arguments[5] : undefined;\n  const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n  let currentExtent = clampedNodeExtent;\n  const parentId = node.parentNode || node.parentId;\n  if (node.extent === 'parent' && !node.expandParent) {\n    if (parentId && node.width && node.height) {\n      const parent = nodeInternals.get(parentId);\n      const {\n        x: parentX,\n        y: parentY\n      } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError === null || onError === void 0 || onError('005', errorMessages['error005']());\n      currentExtent = clampedNodeExtent;\n    }\n  } else if (node.extent && parentId && node.extent !== 'parent') {\n    const parent = nodeInternals.get(parentId);\n    const {\n      x: parentX,\n      y: parentY\n    } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n    currentExtent = [[node.extent[0][0] + parentX, node.extent[0][1] + parentY], [node.extent[1][0] + parentX, node.extent[1][1] + parentY]];\n  }\n  let parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (parentId) {\n    const parentNode = nodeInternals.get(parentId);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  const positionAbsolute = currentExtent && currentExtent !== 'parent' ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref44) {\n  let {\n    nodeId,\n    dragItems,\n    nodeInternals\n  } = _ref44;\n  const extentedDragItems = dragItems.map(n => {\n    const node = nodeInternals.get(n.id);\n    return _objectSpread(_objectSpread({}, node), {}, {\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    });\n  });\n  return [nodeId ? extentedDragItems.find(n => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n  const handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  const handlesArray = Array.from(handles);\n  const nodeBounds = nodeElement.getBoundingClientRect();\n  const nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(handle => {\n    const handleBounds = handle.getBoundingClientRect();\n    return _objectSpread({\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom\n    }, getDimensions(handle));\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const node = getState().nodeInternals.get(id);\n    if (node) {\n      handler(event, _objectSpread({}, node));\n    }\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref45) {\n  let {\n    id,\n    store,\n    unselect = false,\n    nodeRef\n  } = _ref45;\n  const {\n    addSelectedNodes,\n    unselectNodesAndEdges,\n    multiSelectionActive,\n    nodeInternals,\n    onError\n  } = store.getState();\n  const node = nodeInternals.get(id);\n  if (!node) {\n    onError === null || onError === void 0 || onError('012', errorMessages['error012'](id));\n    return;\n  }\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node],\n      edges: []\n    });\n    requestAnimationFrame(() => {\n      var _nodeRef$current;\n      return nodeRef === null || nodeRef === void 0 || (_nodeRef$current = nodeRef.current) === null || _nodeRef$current === void 0 ? void 0 : _nodeRef$current.blur();\n    });\n  }\n}\nfunction useGetPointerPosition() {\n  const store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  const getPointerPosition = useCallback(_ref46 => {\n    let {\n      sourceEvent\n    } = _ref46;\n    const {\n      transform,\n      snapGrid,\n      snapToGrid\n    } = store.getState();\n    const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    const pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return _objectSpread({\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y\n    }, pointerPos);\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return (event, _, nodes) => selectionFunc === null || selectionFunc === void 0 ? void 0 : selectionFunc(event, nodes);\n}\nfunction useDrag(_ref47) {\n  let {\n    nodeRef,\n    disabled = false,\n    noDragClassName,\n    handleSelector,\n    nodeId,\n    isSelectable,\n    selectNodesOnDrag\n  } = _ref47;\n  const store = useStoreApi();\n  const [dragging, setDragging] = useState(false);\n  const dragItems = useRef([]);\n  const lastPos = useRef({\n    x: null,\n    y: null\n  });\n  const autoPanId = useRef(0);\n  const containerBounds = useRef(null);\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const dragEvent = useRef(null);\n  const autoPanStarted = useRef(false);\n  const dragStarted = useRef(false);\n  const abortDrag = useRef(false);\n  const getPointerPosition = useGetPointerPosition();\n  useEffect(() => {\n    if (nodeRef !== null && nodeRef !== void 0 && nodeRef.current) {\n      const selection = select(nodeRef.current);\n      const updateNodes = _ref48 => {\n        let {\n          x,\n          y\n        } = _ref48;\n        const {\n          nodeInternals,\n          onNodeDrag,\n          onSelectionDrag,\n          updateNodePositions,\n          nodeExtent,\n          snapGrid,\n          snapToGrid,\n          nodeOrigin,\n          onError\n        } = store.getState();\n        lastPos.current = {\n          x,\n          y\n        };\n        let hasChange = false;\n        let nodesBox = {\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 0\n        };\n        if (dragItems.current.length > 1 && nodeExtent) {\n          const rect = getNodesBounds(dragItems.current, nodeOrigin);\n          nodesBox = rectToBox(rect);\n        }\n        dragItems.current = dragItems.current.map(n => {\n          const nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n          // based on its position so that the node stays at it's position relative to the selection.\n          const adjustedNodeExtent = [[nodeExtent[0][0], nodeExtent[0][1]], [nodeExtent[1][0], nodeExtent[1][1]]];\n          if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n            var _n$width, _n$height;\n            adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n            adjustedNodeExtent[1][0] = n.positionAbsolute.x + ((_n$width = n.width) !== null && _n$width !== void 0 ? _n$width : 0) - nodesBox.x2 + nodeExtent[1][0];\n            adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n            adjustedNodeExtent[1][1] = n.positionAbsolute.y + ((_n$height = n.height) !== null && _n$height !== void 0 ? _n$height : 0) - nodesBox.y2 + nodeExtent[1][1];\n          }\n          const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a change\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          const [currentNode, nodes] = getEventHandlerParams({\n            nodeId,\n            dragItems: dragItems.current,\n            nodeInternals\n          });\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      const autoPan = () => {\n        if (!containerBounds.current) {\n          return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n        if (xMovement !== 0 || yMovement !== 0) {\n          var _lastPos$current$x, _lastPos$current$y;\n          const {\n            transform,\n            panBy\n          } = store.getState();\n          lastPos.current.x = ((_lastPos$current$x = lastPos.current.x) !== null && _lastPos$current$x !== void 0 ? _lastPos$current$x : 0) - xMovement / transform[2];\n          lastPos.current.y = ((_lastPos$current$y = lastPos.current.y) !== null && _lastPos$current$y !== void 0 ? _lastPos$current$y : 0) - yMovement / transform[2];\n          if (panBy({\n            x: xMovement,\n            y: yMovement\n          })) {\n            updateNodes(lastPos.current);\n          }\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      const startDrag = event => {\n        const {\n          nodeInternals,\n          multiSelectionActive,\n          nodesDraggable,\n          unselectNodesAndEdges,\n          onNodeDragStart,\n          onSelectionDragStart\n        } = store.getState();\n        dragStarted.current = true;\n        const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n        if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n          var _nodeInternals$get;\n          if (!((_nodeInternals$get = nodeInternals.get(nodeId)) !== null && _nodeInternals$get !== void 0 && _nodeInternals$get.selected)) {\n            // we need to reset selected nodes when selectNodesOnDrag=false\n            unselectNodesAndEdges();\n          }\n        }\n        if (nodeId && isSelectable && selectNodesOnDrag) {\n          handleNodeClick({\n            id: nodeId,\n            store,\n            nodeRef: nodeRef\n          });\n        }\n        const pointerPos = getPointerPosition(event);\n        lastPos.current = pointerPos;\n        dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n        if (onStart && dragItems.current) {\n          const [currentNode, nodes] = getEventHandlerParams({\n            nodeId,\n            dragItems: dragItems.current,\n            nodeInternals\n          });\n          onStart(event.sourceEvent, currentNode, nodes);\n        }\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        const dragHandler = drag().on('start', event => {\n          const {\n            domNode,\n            nodeDragThreshold\n          } = store.getState();\n          if (nodeDragThreshold === 0) {\n            startDrag(event);\n          }\n          abortDrag.current = false;\n          const pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          containerBounds.current = (domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect()) || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', event => {\n          const pointerPos = getPointerPosition(event);\n          const {\n            autoPanOnNodeDrag,\n            nodeDragThreshold\n          } = store.getState();\n          if (event.sourceEvent.type === 'touchmove' && event.sourceEvent.touches.length > 1) {\n            abortDrag.current = true;\n          }\n          if (abortDrag.current) {\n            return;\n          }\n          if (!autoPanStarted.current && dragStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          if (!dragStarted.current) {\n            var _lastPos$current$x2, _lastPos$current, _lastPos$current$y2, _lastPos$current2;\n            const x = pointerPos.xSnapped - ((_lastPos$current$x2 = lastPos === null || lastPos === void 0 || (_lastPos$current = lastPos.current) === null || _lastPos$current === void 0 ? void 0 : _lastPos$current.x) !== null && _lastPos$current$x2 !== void 0 ? _lastPos$current$x2 : 0);\n            const y = pointerPos.ySnapped - ((_lastPos$current$y2 = lastPos === null || lastPos === void 0 || (_lastPos$current2 = lastPos.current) === null || _lastPos$current2 === void 0 ? void 0 : _lastPos$current2.y) !== null && _lastPos$current$y2 !== void 0 ? _lastPos$current$y2 : 0);\n            const distance = Math.sqrt(x * x + y * y);\n            if (distance > nodeDragThreshold) {\n              startDrag(event);\n            }\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current && dragStarted.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', event => {\n          if (!dragStarted.current || abortDrag.current) {\n            return;\n          }\n          setDragging(false);\n          autoPanStarted.current = false;\n          dragStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            const {\n              updateNodePositions,\n              nodeInternals,\n              onNodeDragStop,\n              onSelectionDragStop\n            } = store.getState();\n            const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(event => {\n          const target = event.target;\n          const isDraggable = !event.button && (!noDragClassName || !hasSelector(target, \".\".concat(noDragClassName), nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return () => {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  const store = useStoreApi();\n  const updatePositions = useCallback(params => {\n    const {\n      nodeInternals,\n      nodeExtent,\n      updateNodePositions,\n      getNodes,\n      snapToGrid,\n      snapGrid,\n      onError,\n      nodesDraggable\n    } = store.getState();\n    const selectedNodes = getNodes().filter(n => n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined'));\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    const xVelo = snapToGrid ? snapGrid[0] : 5;\n    const yVelo = snapToGrid ? snapGrid[1] : 5;\n    const factor = params.isShiftPressed ? 4 : 1;\n    const positionDiffX = params.x * xVelo * factor;\n    const positionDiffY = params.y * yVelo * factor;\n    const nodeUpdates = selectedNodes.map(n => {\n      if (n.positionAbsolute) {\n        const nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        const {\n          positionAbsolute,\n          position\n        } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nconst arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = NodeComponent => {\n  const NodeWrapper = _ref49 => {\n    let {\n      id,\n      type,\n      data,\n      xPos,\n      yPos,\n      xPosOrigin,\n      yPosOrigin,\n      selected,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      onContextMenu,\n      onDoubleClick,\n      style,\n      className,\n      isDraggable,\n      isSelectable,\n      isConnectable,\n      isFocusable,\n      selectNodesOnDrag,\n      sourcePosition,\n      targetPosition,\n      hidden,\n      resizeObserver,\n      dragHandle,\n      zIndex,\n      isParent,\n      noDragClassName,\n      noPanClassName,\n      initialized,\n      disableKeyboardA11y,\n      ariaLabel,\n      rfId,\n      hasHandleBounds\n    } = _ref49;\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const prevNodeRef = useRef(null);\n    const prevSourcePosition = useRef(sourcePosition);\n    const prevTargetPosition = useRef(targetPosition);\n    const prevType = useRef(type);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const updatePositions = useUpdateNodePositions();\n    const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    const onSelectNodeHandler = event => {\n      const {\n        nodeDragThreshold\n      } = store.getState();\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id,\n          store,\n          nodeRef\n        });\n      }\n      if (onClick) {\n        const node = store.getState().nodeInternals.get(id);\n        if (node) {\n          onClick(event, _objectSpread({}, node));\n        }\n      }\n    };\n    const onKeyDown = event => {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (disableKeyboardA11y) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        const unselect = event.key === 'Escape';\n        handleNodeClick({\n          id,\n          store,\n          unselect,\n          nodeRef\n        });\n      } else if (isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: \"Moved selected node \".concat(event.key.replace('Arrow', '').toLowerCase(), \". New position, x: \").concat(~~xPos, \", y: \").concat(~~yPos)\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(() => {\n      return () => {\n        if (prevNodeRef.current) {\n          resizeObserver === null || resizeObserver === void 0 || resizeObserver.unobserve(prevNodeRef.current);\n          prevNodeRef.current = null;\n        }\n      };\n    }, []);\n    useEffect(() => {\n      if (nodeRef.current && !hidden) {\n        const currNode = nodeRef.current;\n        if (!initialized || !hasHandleBounds || prevNodeRef.current !== currNode) {\n          // At this point we always want to make sure that the node gets re-measured / re-initialized.\n          // We need to unobserve it first in case it is still observed\n          if (prevNodeRef.current) {\n            resizeObserver === null || resizeObserver === void 0 || resizeObserver.unobserve(prevNodeRef.current);\n          }\n          resizeObserver === null || resizeObserver === void 0 || resizeObserver.observe(currNode);\n          prevNodeRef.current = currNode;\n        }\n      }\n    }, [hidden, initialized, hasHandleBounds]);\n    useEffect(() => {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      const typeChanged = prevType.current !== type;\n      const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      const targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    const dragging = useDrag({\n      nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable,\n      selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return React.createElement(\"div\", {\n      className: cc(['react-flow__node', \"react-flow__node-\".concat(type), {\n        // this is overwritable by passing `nopan` as a class name\n        [noPanClassName]: isDraggable\n      }, className, {\n        selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging\n      }]),\n      ref: nodeRef,\n      style: _objectSpread({\n        zIndex,\n        transform: \"translate(\".concat(xPosOrigin, \"px,\").concat(yPosOrigin, \"px)\"),\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden'\n      }, style),\n      \"data-id\": id,\n      \"data-testid\": \"rf__node-\".concat(id),\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      \"aria-label\": ariaLabel\n    }, React.createElement(Provider, {\n      value: id\n    }, React.createElement(NodeComponent, {\n      id: id,\n      data: data,\n      type: type,\n      xPos: xPos,\n      yPos: yPos,\n      selected: selected,\n      isConnectable: isConnectable,\n      sourcePosition: sourcePosition,\n      targetPosition: targetPosition,\n      dragging: dragging,\n      dragHandle: dragHandle,\n      zIndex: zIndex\n    })));\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\n\n/**\n * The nodes selection rectangle gets displayed when a user\n * made a selection with on or several nodes\n */\nconst selector$7 = s => {\n  const selectedNodes = s.getNodes().filter(n => n.selected);\n  return _objectSpread(_objectSpread({}, getNodesBounds(selectedNodes, s.nodeOrigin)), {}, {\n    transformString: \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\"),\n    userSelectionActive: s.userSelectionActive\n  });\n};\nfunction NodesSelection(_ref50) {\n  let {\n    onSelectionContextMenu,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref50;\n  const store = useStoreApi();\n  const {\n    width,\n    height,\n    x: left,\n    y: top,\n    transformString,\n    userSelectionActive\n  } = useStore(selector$7, shallow);\n  const updatePositions = useUpdateNodePositions();\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    if (!disableKeyboardA11y) {\n      var _nodeRef$current2;\n      (_nodeRef$current2 = nodeRef.current) === null || _nodeRef$current2 === void 0 || _nodeRef$current2.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  const onContextMenu = onSelectionContextMenu ? event => {\n    const selectedNodes = store.getState().getNodes().filter(n => n.selected);\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  const onKeyDown = event => {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return React.createElement(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    }\n  }, React.createElement(\"div\", {\n    ref: nodeRef,\n    className: \"react-flow__nodesselection-rect\",\n    onContextMenu: onContextMenu,\n    tabIndex: disableKeyboardA11y ? undefined : -1,\n    onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n    style: {\n      width,\n      height,\n      top,\n      left\n    }\n  }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\nconst selector$6 = s => s.nodesSelectionActive;\nconst FlowRenderer = _ref51 => {\n  let {\n    children,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneContextMenu,\n    onPaneScroll,\n    deleteKeyCode,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    onSelectionStart,\n    onSelectionEnd,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    elementsSelectable,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll: _panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag: _panOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    onSelectionContextMenu,\n    noWheelClassName,\n    noPanClassName,\n    disableKeyboardA11y\n  } = _ref51;\n  const nodesSelectionActive = useStore(selector$6);\n  const selectionKeyPressed = useKeyPress(selectionKeyCode);\n  const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  const panOnDrag = panActivationKeyPressed || _panOnDrag;\n  const panOnScroll = panActivationKeyPressed || _panOnScroll;\n  const isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode,\n    multiSelectionKeyCode\n  });\n  return React.createElement(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName\n  }, React.createElement(Pane, {\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    panOnDrag: panOnDrag,\n    isSelecting: !!isSelecting,\n    selectionMode: selectionMode\n  }, children, nodesSelectionActive && React.createElement(NodesSelection$1, {\n    onSelectionContextMenu: onSelectionContextMenu,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y\n  })));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  const nodes = useStore(useCallback(s => onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n    x: 0,\n    y: 0,\n    width: s.width,\n    height: s.height\n  }, s.transform, true) : s.getNodes(), [onlyRenderVisible]));\n  return nodes;\n}\nfunction createNodeTypes(nodeTypes) {\n  const standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(nodeTypes).filter(k => !['input', 'default', 'output', 'group'].includes(k)).reduce((res, key) => {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nconst getPositionWithOrigin = _ref52 => {\n  let {\n    x,\n    y,\n    width,\n    height,\n    origin\n  } = _ref52;\n  if (!width || !height) {\n    return {\n      x,\n      y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x,\n      y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nconst selector$5 = s => ({\n  nodesDraggable: s.nodesDraggable,\n  nodesConnectable: s.nodesConnectable,\n  nodesFocusable: s.nodesFocusable,\n  elementsSelectable: s.elementsSelectable,\n  updateNodeDimensions: s.updateNodeDimensions,\n  onError: s.onError\n});\nconst NodeRenderer = props => {\n  const {\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    elementsSelectable,\n    updateNodeDimensions,\n    onError\n  } = useStore(selector$5, shallow);\n  const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  const resizeObserverRef = useRef();\n  const resizeObserver = useMemo(() => {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    const observer = new ResizeObserver(entries => {\n      const updates = entries.map(entry => ({\n        id: entry.target.getAttribute('data-id'),\n        nodeElement: entry.target,\n        forceUpdate: true\n      }));\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(() => {\n    return () => {\n      var _resizeObserverRef$cu;\n      resizeObserverRef === null || resizeObserverRef === void 0 || (_resizeObserverRef$cu = resizeObserverRef.current) === null || _resizeObserverRef$cu === void 0 || _resizeObserverRef$cu.disconnect();\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle\n  }, nodes.map(node => {\n    var _clampedPosition$x, _clampedPosition$y, _node$width2, _node$height2, _node$internalsSymbol3, _node$internalsSymbol4, _node$internalsSymbol5, _node$internalsSymbol6;\n    let nodeType = node.type || 'default';\n    if (!props.nodeTypes[nodeType]) {\n      onError === null || onError === void 0 || onError('003', errorMessages['error003'](nodeType));\n      nodeType = 'default';\n    }\n    const NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n    const isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n    const isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n    const isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n    const isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n    const clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n    const posX = (_clampedPosition$x = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.x) !== null && _clampedPosition$x !== void 0 ? _clampedPosition$x : 0;\n    const posY = (_clampedPosition$y = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.y) !== null && _clampedPosition$y !== void 0 ? _clampedPosition$y : 0;\n    const posOrigin = getPositionWithOrigin({\n      x: posX,\n      y: posY,\n      width: (_node$width2 = node.width) !== null && _node$width2 !== void 0 ? _node$width2 : 0,\n      height: (_node$height2 = node.height) !== null && _node$height2 !== void 0 ? _node$height2 : 0,\n      origin: props.nodeOrigin\n    });\n    return React.createElement(NodeComponent, {\n      key: node.id,\n      id: node.id,\n      className: node.className,\n      style: node.style,\n      type: nodeType,\n      data: node.data,\n      sourcePosition: node.sourcePosition || Position.Bottom,\n      targetPosition: node.targetPosition || Position.Top,\n      hidden: node.hidden,\n      xPos: posX,\n      yPos: posY,\n      xPosOrigin: posOrigin.x,\n      yPosOrigin: posOrigin.y,\n      selectNodesOnDrag: props.selectNodesOnDrag,\n      onClick: props.onNodeClick,\n      onMouseEnter: props.onNodeMouseEnter,\n      onMouseMove: props.onNodeMouseMove,\n      onMouseLeave: props.onNodeMouseLeave,\n      onContextMenu: props.onNodeContextMenu,\n      onDoubleClick: props.onNodeDoubleClick,\n      selected: !!node.selected,\n      isDraggable: isDraggable,\n      isSelectable: isSelectable,\n      isConnectable: isConnectable,\n      isFocusable: isFocusable,\n      resizeObserver: resizeObserver,\n      dragHandle: node.dragHandle,\n      zIndex: (_node$internalsSymbol3 = (_node$internalsSymbol4 = node[internalsSymbol]) === null || _node$internalsSymbol4 === void 0 ? void 0 : _node$internalsSymbol4.z) !== null && _node$internalsSymbol3 !== void 0 ? _node$internalsSymbol3 : 0,\n      isParent: !!((_node$internalsSymbol5 = node[internalsSymbol]) !== null && _node$internalsSymbol5 !== void 0 && _node$internalsSymbol5.isParent),\n      noDragClassName: props.noDragClassName,\n      noPanClassName: props.noPanClassName,\n      initialized: !!node.width && !!node.height,\n      rfId: props.rfId,\n      disableKeyboardA11y: props.disableKeyboardA11y,\n      ariaLabel: node.ariaLabel,\n      hasHandleBounds: !!((_node$internalsSymbol6 = node[internalsSymbol]) !== null && _node$internalsSymbol6 !== void 0 && _node$internalsSymbol6.handleBounds)\n    });\n  }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nconst shiftX = (x, shift, position) => {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nconst shiftY = (y, shift, position) => {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = _ref53 => {\n  let {\n    position,\n    centerX,\n    centerY,\n    radius = 10,\n    onMouseDown,\n    onMouseEnter,\n    onMouseOut,\n    type\n  } = _ref53;\n  return React.createElement(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, \"\".concat(EdgeUpdaterClassName, \"-\").concat(type)]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nconst alwaysValidConnection = () => true;\nvar wrapEdge = EdgeComponent => {\n  const EdgeWrapper = _ref54 => {\n    let {\n      id,\n      className,\n      type,\n      data,\n      onClick,\n      onEdgeDoubleClick,\n      selected,\n      animated,\n      label,\n      labelStyle,\n      labelShowBg,\n      labelBgStyle,\n      labelBgPadding,\n      labelBgBorderRadius,\n      style,\n      source,\n      target,\n      sourceX,\n      sourceY,\n      targetX,\n      targetY,\n      sourcePosition,\n      targetPosition,\n      elementsSelectable,\n      hidden,\n      sourceHandleId,\n      targetHandleId,\n      onContextMenu,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      reconnectRadius,\n      onReconnect,\n      onReconnectStart,\n      onReconnectEnd,\n      markerEnd,\n      markerStart,\n      rfId,\n      ariaLabel,\n      isFocusable,\n      isReconnectable,\n      pathOptions,\n      interactionWidth,\n      disableKeyboardA11y\n    } = _ref54;\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [updating, setUpdating] = useState(false);\n    const store = useStoreApi();\n    const markerStartUrl = useMemo(() => \"url('#\".concat(getMarkerId(markerStart, rfId), \"')\"), [markerStart, rfId]);\n    const markerEndUrl = useMemo(() => \"url('#\".concat(getMarkerId(markerEnd, rfId), \"')\"), [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    const onEdgeClick = event => {\n      const {\n        edges,\n        addSelectedEdges,\n        unselectNodesAndEdges,\n        multiSelectionActive\n      } = store.getState();\n      const edge = edges.find(e => e.id === id);\n      if (!edge) {\n        return;\n      }\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        if (edge.selected && multiSelectionActive) {\n          var _edgeRef$current;\n          unselectNodesAndEdges({\n            nodes: [],\n            edges: [edge]\n          });\n          (_edgeRef$current = edgeRef.current) === null || _edgeRef$current === void 0 || _edgeRef$current.blur();\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n      if (onClick) {\n        onClick(event, edge);\n      }\n    };\n    const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    const handleEdgeUpdater = (event, isSourceHandle) => {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      const {\n        edges,\n        isValidConnection: isValidConnectionStore\n      } = store.getState();\n      const nodeId = isSourceHandle ? target : source;\n      const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      const handleType = isSourceHandle ? 'target' : 'source';\n      const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n      const isTarget = isSourceHandle;\n      const edge = edges.find(e => e.id === id);\n      setUpdating(true);\n      onReconnectStart === null || onReconnectStart === void 0 || onReconnectStart(event, edge, handleType);\n      const _onReconnectEnd = evt => {\n        setUpdating(false);\n        onReconnectEnd === null || onReconnectEnd === void 0 || onReconnectEnd(evt, edge, handleType);\n      };\n      const onConnectEdge = connection => onReconnect === null || onReconnect === void 0 ? void 0 : onReconnect(edge, connection);\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectEdge,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection,\n        edgeUpdaterType: handleType,\n        onReconnectEnd: _onReconnectEnd\n      });\n    };\n    const onEdgeUpdaterSourceMouseDown = event => handleEdgeUpdater(event, true);\n    const onEdgeUpdaterTargetMouseDown = event => handleEdgeUpdater(event, false);\n    const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n    const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n    const inactive = !elementsSelectable && !onClick;\n    const onKeyDown = event => {\n      if (!disableKeyboardA11y && elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        const {\n          unselectNodesAndEdges,\n          addSelectedEdges,\n          edges\n        } = store.getState();\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          var _edgeRef$current2;\n          (_edgeRef$current2 = edgeRef.current) === null || _edgeRef$current2 === void 0 || _edgeRef$current2.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(e => e.id === id)]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return React.createElement(\"g\", {\n      className: cc(['react-flow__edge', \"react-flow__edge-\".concat(type), className, {\n        selected,\n        animated,\n        inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : 'img',\n      \"data-testid\": \"rf__edge-\".concat(id),\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : \"Edge from \".concat(source, \" to \").concat(target),\n      \"aria-describedby\": isFocusable ? \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId) : undefined,\n      ref: edgeRef\n    }, !updating && React.createElement(EdgeComponent, {\n      id: id,\n      source: source,\n      target: target,\n      selected: selected,\n      animated: animated,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius,\n      data: data,\n      style: style,\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourcePosition: sourcePosition,\n      targetPosition: targetPosition,\n      sourceHandleId: sourceHandleId,\n      targetHandleId: targetHandleId,\n      markerStart: markerStartUrl,\n      markerEnd: markerEndUrl,\n      pathOptions: pathOptions,\n      interactionWidth: interactionWidth\n    }), isReconnectable && React.createElement(React.Fragment, null, (isReconnectable === 'source' || isReconnectable === true) && React.createElement(EdgeAnchor, {\n      position: sourcePosition,\n      centerX: sourceX,\n      centerY: sourceY,\n      radius: reconnectRadius,\n      onMouseDown: onEdgeUpdaterSourceMouseDown,\n      onMouseEnter: onEdgeUpdaterMouseEnter,\n      onMouseOut: onEdgeUpdaterMouseOut,\n      type: \"source\"\n    }), (isReconnectable === 'target' || isReconnectable === true) && React.createElement(EdgeAnchor, {\n      position: targetPosition,\n      centerX: targetX,\n      centerY: targetY,\n      radius: reconnectRadius,\n      onMouseDown: onEdgeUpdaterTargetMouseDown,\n      onMouseEnter: onEdgeUpdaterMouseEnter,\n      onMouseOut: onEdgeUpdaterMouseOut,\n      type: \"target\"\n    })));\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  const standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(edgeTypes).filter(k => !['default', 'bezier'].includes(k)).reduce((res, key) => {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nfunction getHandlePosition(position, nodeRect) {\n  let handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const x = ((handle === null || handle === void 0 ? void 0 : handle.x) || 0) + nodeRect.x;\n  const y = ((handle === null || handle === void 0 ? void 0 : handle.y) || 0) + nodeRect.y;\n  const width = (handle === null || handle === void 0 ? void 0 : handle.width) || nodeRect.width;\n  const height = (handle === null || handle === void 0 ? void 0 : handle.height) || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (bounds.length === 1 || !handleId) {\n    return bounds[0];\n  } else if (handleId) {\n    return bounds.find(d => d.id === handleId) || null;\n  }\n  return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n  const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref55) {\n  let {\n    sourcePos,\n    targetPos,\n    sourceWidth,\n    sourceHeight,\n    targetWidth,\n    targetHeight,\n    width,\n    height,\n    transform\n  } = _ref55;\n  const edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  const viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  const overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  var _node$internalsSymbol7, _node$positionAbsolut5, _node$positionAbsolut6, _node$positionAbsolut7, _node$positionAbsolut8;\n  const handleBounds = (node === null || node === void 0 || (_node$internalsSymbol7 = node[internalsSymbol]) === null || _node$internalsSymbol7 === void 0 ? void 0 : _node$internalsSymbol7.handleBounds) || null;\n  const isValid = handleBounds && (node === null || node === void 0 ? void 0 : node.width) && (node === null || node === void 0 ? void 0 : node.height) && typeof (node === null || node === void 0 || (_node$positionAbsolut5 = node.positionAbsolute) === null || _node$positionAbsolut5 === void 0 ? void 0 : _node$positionAbsolut5.x) !== 'undefined' && typeof (node === null || node === void 0 || (_node$positionAbsolut6 = node.positionAbsolute) === null || _node$positionAbsolut6 === void 0 ? void 0 : _node$positionAbsolut6.y) !== 'undefined';\n  return [{\n    x: (node === null || node === void 0 || (_node$positionAbsolut7 = node.positionAbsolute) === null || _node$positionAbsolut7 === void 0 ? void 0 : _node$positionAbsolut7.x) || 0,\n    y: (node === null || node === void 0 || (_node$positionAbsolut8 = node.positionAbsolute) === null || _node$positionAbsolut8 === void 0 ? void 0 : _node$positionAbsolut8.y) || 0,\n    width: (node === null || node === void 0 ? void 0 : node.width) || 0,\n    height: (node === null || node === void 0 ? void 0 : node.height) || 0\n  }, handleBounds, !!isValid];\n}\nconst defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  let elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let maxLevel = -1;\n  const levelLookup = edges.reduce((tree, edge) => {\n    const hasZIndex = isNumeric(edge.zIndex);\n    let z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      var _sourceNode$internals, _targetNode$internals;\n      const targetNode = nodeInternals.get(edge.target);\n      const sourceNode = nodeInternals.get(edge.source);\n      const edgeOrConnectedNodeSelected = edge.selected || (targetNode === null || targetNode === void 0 ? void 0 : targetNode.selected) || (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.selected);\n      const selectedZIndex = Math.max((sourceNode === null || sourceNode === void 0 || (_sourceNode$internals = sourceNode[internalsSymbol]) === null || _sourceNode$internals === void 0 ? void 0 : _sourceNode$internals.z) || 0, (targetNode === null || targetNode === void 0 || (_targetNode$internals = targetNode[internalsSymbol]) === null || _targetNode$internals === void 0 ? void 0 : _targetNode$internals.z) || 0, 1000);\n      z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  const edgeTree = Object.entries(levelLookup).map(_ref56 => {\n    let [key, edges] = _ref56;\n    const level = +key;\n    return {\n      edges,\n      level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  const edges = useStore(useCallback(s => {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(e => {\n      const sourceNode = nodeInternals.get(e.source);\n      const targetNode = nodeInternals.get(e.target);\n      return (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.width) && (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.height) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.width) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.height) && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nconst ArrowSymbol = _ref57 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref57;\n  return React.createElement(\"polyline\", {\n    style: {\n      stroke: color,\n      strokeWidth\n    },\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nconst ArrowClosedSymbol = _ref58 => {\n  let {\n    color = 'none',\n    strokeWidth = 1\n  } = _ref58;\n  return React.createElement(\"polyline\", {\n    style: {\n      stroke: color,\n      fill: color,\n      strokeWidth\n    },\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nconst MarkerSymbols = {\n  [MarkerType.Arrow]: ArrowSymbol,\n  [MarkerType.ArrowClosed]: ArrowClosedSymbol\n};\nfunction useMarkerSymbol(type) {\n  const store = useStoreApi();\n  const symbol = useMemo(() => {\n    const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      var _store$getState$onErr3, _store$getState3;\n      (_store$getState$onErr3 = (_store$getState3 = store.getState()).onError) === null || _store$getState$onErr3 === void 0 || _store$getState$onErr3.call(_store$getState3, '009', errorMessages['error009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nconst Marker = _ref59 => {\n  let {\n    id,\n    type,\n    color,\n    width = 12.5,\n    height = 12.5,\n    markerUnits = 'strokeWidth',\n    strokeWidth,\n    orient = 'auto-start-reverse'\n  } = _ref59;\n  const Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return React.createElement(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: \"\".concat(width),\n    markerHeight: \"\".concat(height),\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\"\n  }, React.createElement(Symbol, {\n    color: color,\n    strokeWidth: strokeWidth\n  }));\n};\nconst markerSelector = _ref60 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref60;\n  return s => {\n    const ids = [];\n    return s.edges.reduce((markers, edge) => {\n      [edge.markerStart, edge.markerEnd].forEach(marker => {\n        if (marker && typeof marker === 'object') {\n          const markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push(_objectSpread({\n              id: markerId,\n              color: marker.color || defaultColor\n            }, marker));\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort((a, b) => a.id.localeCompare(b.id));\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = _ref61 => {\n  let {\n    defaultColor,\n    rfId\n  } = _ref61;\n  const markers = useStore(useCallback(markerSelector({\n    defaultColor,\n    rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n  return React.createElement(\"defs\", null, markers.map(marker => React.createElement(Marker, {\n    id: marker.id,\n    key: marker.id,\n    type: marker.type,\n    color: marker.color,\n    width: marker.width,\n    height: marker.height,\n    markerUnits: marker.markerUnits,\n    strokeWidth: marker.strokeWidth,\n    orient: marker.orient\n  })));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nconst selector$4 = s => ({\n  nodesConnectable: s.nodesConnectable,\n  edgesFocusable: s.edgesFocusable,\n  edgesUpdatable: s.edgesUpdatable,\n  elementsSelectable: s.elementsSelectable,\n  width: s.width,\n  height: s.height,\n  connectionMode: s.connectionMode,\n  nodeInternals: s.nodeInternals,\n  onError: s.onError\n});\nconst EdgeRenderer = _ref62 => {\n  let {\n    defaultMarkerColor,\n    onlyRenderVisibleElements,\n    elevateEdgesOnSelect,\n    rfId,\n    edgeTypes,\n    noPanClassName,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onEdgeClick,\n    onEdgeDoubleClick,\n    onReconnect,\n    onReconnectStart,\n    onReconnectEnd,\n    reconnectRadius,\n    children,\n    disableKeyboardA11y\n  } = _ref62;\n  const {\n    edgesFocusable,\n    edgesUpdatable,\n    elementsSelectable,\n    width,\n    height,\n    connectionMode,\n    nodeInternals,\n    onError\n  } = useStore(selector$4, shallow);\n  const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return React.createElement(React.Fragment, null, edgeTree.map(_ref63 => {\n    let {\n      level,\n      edges,\n      isMaxLevel\n    } = _ref63;\n    return React.createElement(\"svg\", {\n      key: level,\n      style: {\n        zIndex: level\n      },\n      width: width,\n      height: height,\n      className: \"react-flow__edges react-flow__container\"\n    }, isMaxLevel && React.createElement(MarkerDefinitions$1, {\n      defaultColor: defaultMarkerColor,\n      rfId: rfId\n    }), React.createElement(\"g\", null, edges.map(edge => {\n      var _targetHandleBounds$t, _targetHandleBounds$s;\n      const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n      const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n      if (!sourceIsValid || !targetIsValid) {\n        return null;\n      }\n      let edgeType = edge.type || 'default';\n      if (!edgeTypes[edgeType]) {\n        onError === null || onError === void 0 || onError('011', errorMessages['error011'](edgeType));\n        edgeType = 'default';\n      }\n      const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n      // when connection type is loose we can define all handles as sources and connect source -> source\n      const targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : ((_targetHandleBounds$t = targetHandleBounds.target) !== null && _targetHandleBounds$t !== void 0 ? _targetHandleBounds$t : []).concat((_targetHandleBounds$s = targetHandleBounds.source) !== null && _targetHandleBounds$s !== void 0 ? _targetHandleBounds$s : []);\n      const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n      const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n      const sourcePosition = (sourceHandle === null || sourceHandle === void 0 ? void 0 : sourceHandle.position) || Position.Bottom;\n      const targetPosition = (targetHandle === null || targetHandle === void 0 ? void 0 : targetHandle.position) || Position.Top;\n      const isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n      const edgeReconnectable = edge.reconnectable || edge.updatable;\n      const isReconnectable = typeof onReconnect !== 'undefined' && (edgeReconnectable || edgesUpdatable && typeof edgeReconnectable === 'undefined');\n      if (!sourceHandle || !targetHandle) {\n        onError === null || onError === void 0 || onError('008', errorMessages['error008'](sourceHandle, edge));\n        return null;\n      }\n      const {\n        sourceX,\n        sourceY,\n        targetX,\n        targetY\n      } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n      return React.createElement(EdgeComponent, {\n        key: edge.id,\n        id: edge.id,\n        className: cc([edge.className, noPanClassName]),\n        type: edgeType,\n        data: edge.data,\n        selected: !!edge.selected,\n        animated: !!edge.animated,\n        hidden: !!edge.hidden,\n        label: edge.label,\n        labelStyle: edge.labelStyle,\n        labelShowBg: edge.labelShowBg,\n        labelBgStyle: edge.labelBgStyle,\n        labelBgPadding: edge.labelBgPadding,\n        labelBgBorderRadius: edge.labelBgBorderRadius,\n        style: edge.style,\n        source: edge.source,\n        target: edge.target,\n        sourceHandleId: edge.sourceHandle,\n        targetHandleId: edge.targetHandle,\n        markerEnd: edge.markerEnd,\n        markerStart: edge.markerStart,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        elementsSelectable: elementsSelectable,\n        onContextMenu: onEdgeContextMenu,\n        onMouseEnter: onEdgeMouseEnter,\n        onMouseMove: onEdgeMouseMove,\n        onMouseLeave: onEdgeMouseLeave,\n        onClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onReconnect: onReconnect,\n        onReconnectStart: onReconnectStart,\n        onReconnectEnd: onReconnectEnd,\n        reconnectRadius: reconnectRadius,\n        rfId: rfId,\n        ariaLabel: edge.ariaLabel,\n        isFocusable: isFocusable,\n        isReconnectable: isReconnectable,\n        pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n        interactionWidth: edge.interactionWidth,\n        disableKeyboardA11y: disableKeyboardA11y\n      });\n    })));\n  }), children);\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nconst selector$3 = s => \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\");\nfunction Viewport(_ref64) {\n  let {\n    children\n  } = _ref64;\n  const transform = useStore(selector$3);\n  return React.createElement(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform\n    }\n  }, children);\n}\nfunction useOnInitHandler(onInit) {\n  const rfInstance = useReactFlow();\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(() => onInit(rfInstance), 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nconst oppositePosition = {\n  [Position.Left]: Position.Right,\n  [Position.Right]: Position.Left,\n  [Position.Top]: Position.Bottom,\n  [Position.Bottom]: Position.Top\n};\nconst ConnectionLine = _ref65 => {\n  var _fromNode$internalsSy, _fromNode$width, _fromNode$height, _fromNode$positionAbs, _fromNode$positionAbs2, _fromNode$positionAbs3, _fromNode$positionAbs4;\n  let {\n    nodeId,\n    handleType,\n    style,\n    type = ConnectionLineType.Bezier,\n    CustomComponent,\n    connectionStatus\n  } = _ref65;\n  const {\n    fromNode,\n    handleId,\n    toX,\n    toY,\n    connectionMode\n  } = useStore(useCallback(s => ({\n    fromNode: s.nodeInternals.get(nodeId),\n    handleId: s.connectionHandleId,\n    toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n    toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n    connectionMode: s.connectionMode\n  }), [nodeId]), shallow);\n  const fromHandleBounds = fromNode === null || fromNode === void 0 || (_fromNode$internalsSy = fromNode[internalsSymbol]) === null || _fromNode$internalsSy === void 0 ? void 0 : _fromNode$internalsSy.handleBounds;\n  let handleBounds = fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  const fromHandle = handleId ? handleBounds.find(d => d.id === handleId) : handleBounds[0];\n  const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : ((_fromNode$width = fromNode.width) !== null && _fromNode$width !== void 0 ? _fromNode$width : 0) / 2;\n  const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : (_fromNode$height = fromNode.height) !== null && _fromNode$height !== void 0 ? _fromNode$height : 0;\n  const fromX = ((_fromNode$positionAbs = (_fromNode$positionAbs2 = fromNode.positionAbsolute) === null || _fromNode$positionAbs2 === void 0 ? void 0 : _fromNode$positionAbs2.x) !== null && _fromNode$positionAbs !== void 0 ? _fromNode$positionAbs : 0) + fromHandleX;\n  const fromY = ((_fromNode$positionAbs3 = (_fromNode$positionAbs4 = fromNode.positionAbsolute) === null || _fromNode$positionAbs4 === void 0 ? void 0 : _fromNode$positionAbs4.y) !== null && _fromNode$positionAbs3 !== void 0 ? _fromNode$positionAbs3 : 0) + fromHandleY;\n  const fromPosition = fromHandle === null || fromHandle === void 0 ? void 0 : fromHandle.position;\n  const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return React.createElement(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  let dAttr = '';\n  const pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    [dAttr] = getBezierPath(pathParams);\n  } else if (type === ConnectionLineType.Step) {\n    [dAttr] = getSmoothStepPath(_objectSpread(_objectSpread({}, pathParams), {}, {\n      borderRadius: 0\n    }));\n  } else if (type === ConnectionLineType.SmoothStep) {\n    [dAttr] = getSmoothStepPath(pathParams);\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    [dAttr] = getSimpleBezierPath(pathParams);\n  } else {\n    dAttr = \"M\".concat(fromX, \",\").concat(fromY, \" \").concat(toX, \",\").concat(toY);\n  }\n  return React.createElement(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = s => ({\n  nodeId: s.connectionNodeId,\n  handleType: s.connectionHandleType,\n  nodesConnectable: s.nodesConnectable,\n  connectionStatus: s.connectionStatus,\n  width: s.width,\n  height: s.height\n});\nfunction ConnectionLineWrapper(_ref66) {\n  let {\n    containerStyle,\n    style,\n    type,\n    component\n  } = _ref66;\n  const {\n    nodeId,\n    handleType,\n    nodesConnectable,\n    width,\n    height,\n    connectionStatus\n  } = useStore(selector$2, shallow);\n  const isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return React.createElement(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\"\n  }, React.createElement(\"g\", {\n    className: cc(['react-flow__connection', connectionStatus])\n  }, React.createElement(ConnectionLine, {\n    nodeId: nodeId,\n    handleType: handleType,\n    style: style,\n    type: type,\n    CustomComponent: component,\n    connectionStatus: connectionStatus\n  })));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  const typesKeysRef = useRef(null);\n  const store = useStoreApi();\n  const typesParsed = useMemo(() => {\n    if (process.env.NODE_ENV === 'development') {\n      const typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        var _store$getState$onErr4, _store$getState4;\n        (_store$getState$onErr4 = (_store$getState4 = store.getState()).onError) === null || _store$getState$onErr4 === void 0 || _store$getState$onErr4.call(_store$getState4, '002', errorMessages['error002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nconst GraphView = _ref67 => {\n  let {\n    nodeTypes,\n    edgeTypes,\n    onMove,\n    onMoveStart,\n    onMoveEnd,\n    onInit,\n    onNodeClick,\n    onEdgeClick,\n    onNodeDoubleClick,\n    onEdgeDoubleClick,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeContextMenu,\n    onSelectionContextMenu,\n    onSelectionStart,\n    onSelectionEnd,\n    connectionLineType,\n    connectionLineStyle,\n    connectionLineComponent,\n    connectionLineContainerStyle,\n    selectionKeyCode,\n    selectionOnDrag,\n    selectionMode,\n    multiSelectionKeyCode,\n    panActivationKeyCode,\n    zoomActivationKeyCode,\n    deleteKeyCode,\n    onlyRenderVisibleElements,\n    elementsSelectable,\n    selectNodesOnDrag,\n    defaultViewport,\n    translateExtent,\n    minZoom,\n    maxZoom,\n    preventScrolling,\n    defaultMarkerColor,\n    zoomOnScroll,\n    zoomOnPinch,\n    panOnScroll,\n    panOnScrollSpeed,\n    panOnScrollMode,\n    zoomOnDoubleClick,\n    panOnDrag,\n    onPaneClick,\n    onPaneMouseEnter,\n    onPaneMouseMove,\n    onPaneMouseLeave,\n    onPaneScroll,\n    onPaneContextMenu,\n    onEdgeContextMenu,\n    onEdgeMouseEnter,\n    onEdgeMouseMove,\n    onEdgeMouseLeave,\n    onReconnect,\n    onReconnectStart,\n    onReconnectEnd,\n    reconnectRadius,\n    noDragClassName,\n    noWheelClassName,\n    noPanClassName,\n    elevateEdgesOnSelect,\n    disableKeyboardA11y,\n    nodeOrigin,\n    nodeExtent,\n    rfId\n  } = _ref67;\n  const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  useOnInitHandler(onInit);\n  return React.createElement(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y\n  }, React.createElement(Viewport, null, React.createElement(EdgeRenderer$1, {\n    edgeTypes: edgeTypesWrapped,\n    onEdgeClick: onEdgeClick,\n    onEdgeDoubleClick: onEdgeDoubleClick,\n    onlyRenderVisibleElements: onlyRenderVisibleElements,\n    onEdgeContextMenu: onEdgeContextMenu,\n    onEdgeMouseEnter: onEdgeMouseEnter,\n    onEdgeMouseMove: onEdgeMouseMove,\n    onEdgeMouseLeave: onEdgeMouseLeave,\n    onReconnect: onReconnect,\n    onReconnectStart: onReconnectStart,\n    onReconnectEnd: onReconnectEnd,\n    reconnectRadius: reconnectRadius,\n    defaultMarkerColor: defaultMarkerColor,\n    noPanClassName: noPanClassName,\n    elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n    disableKeyboardA11y: disableKeyboardA11y,\n    rfId: rfId\n  }, React.createElement(ConnectionLineWrapper, {\n    style: connectionLineStyle,\n    type: connectionLineType,\n    component: connectionLineComponent,\n    containerStyle: connectionLineContainerStyle\n  })), React.createElement(\"div\", {\n    className: \"react-flow__edgelabel-renderer\"\n  }), React.createElement(NodeRenderer$1, {\n    nodeTypes: nodeTypesWrapped,\n    onNodeClick: onNodeClick,\n    onNodeDoubleClick: onNodeDoubleClick,\n    onNodeMouseEnter: onNodeMouseEnter,\n    onNodeMouseMove: onNodeMouseMove,\n    onNodeMouseLeave: onNodeMouseLeave,\n    onNodeContextMenu: onNodeContextMenu,\n    selectNodesOnDrag: selectNodesOnDrag,\n    onlyRenderVisibleElements: onlyRenderVisibleElements,\n    noPanClassName: noPanClassName,\n    noDragClassName: noDragClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    nodeOrigin: nodeOrigin,\n    nodeExtent: nodeExtent,\n    rfId: rfId\n  })));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nconst infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nconst initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  nodeDragThreshold: 0,\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  edgesUpdatable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  onSelectionChange: [],\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectionEndHandle: null,\n  connectionClickStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn,\n  isValidConnection: undefined\n};\nconst createRFStore = () => createWithEqualityFn((set, get) => _objectSpread(_objectSpread({}, initialState), {}, {\n  setNodes: nodes => {\n    const {\n      nodeInternals,\n      nodeOrigin,\n      elevateNodesOnSelect\n    } = get();\n    set({\n      nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n    });\n  },\n  getNodes: () => {\n    return Array.from(get().nodeInternals.values());\n  },\n  setEdges: edges => {\n    const {\n      defaultEdgeOptions = {}\n    } = get();\n    set({\n      edges: edges.map(e => _objectSpread(_objectSpread({}, defaultEdgeOptions), e))\n    });\n  },\n  setDefaultNodesAndEdges: (nodes, edges) => {\n    const hasDefaultNodes = typeof nodes !== 'undefined';\n    const hasDefaultEdges = typeof edges !== 'undefined';\n    const nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n    const nextEdges = hasDefaultEdges ? edges : [];\n    set({\n      nodeInternals,\n      edges: nextEdges,\n      hasDefaultNodes,\n      hasDefaultEdges\n    });\n  },\n  updateNodeDimensions: updates => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      fitViewOnInit,\n      fitViewOnInitDone,\n      fitViewOnInitOptions,\n      domNode,\n      nodeOrigin\n    } = get();\n    const viewportNode = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector('.react-flow__viewport');\n    if (!viewportNode) {\n      return;\n    }\n    const style = window.getComputedStyle(viewportNode);\n    const {\n      m22: zoom\n    } = new window.DOMMatrixReadOnly(style.transform);\n    const changes = updates.reduce((res, update) => {\n      const node = nodeInternals.get(update.id);\n      if (node !== null && node !== void 0 && node.hidden) {\n        nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, {\n          [internalsSymbol]: _objectSpread(_objectSpread({}, node[internalsSymbol]), {}, {\n            // we need to reset the handle bounds when the node is hidden\n            // in order to force a new observation when the node is shown again\n            handleBounds: undefined\n          })\n        }));\n      } else if (node) {\n        const dimensions = getDimensions(update.nodeElement);\n        const doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n        if (doUpdate) {\n          nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, {\n            [internalsSymbol]: _objectSpread(_objectSpread({}, node[internalsSymbol]), {}, {\n              handleBounds: {\n                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n              }\n            })\n          }, dimensions));\n          res.push({\n            id: node.id,\n            type: 'dimensions',\n            dimensions\n          });\n        }\n      }\n      return res;\n    }, []);\n    updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n    const nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && fitView(get, _objectSpread({\n      initial: true\n    }, fitViewOnInitOptions));\n    set({\n      nodeInternals: new Map(nodeInternals),\n      fitViewOnInitDone: nextFitViewOnInitDone\n    });\n    if ((changes === null || changes === void 0 ? void 0 : changes.length) > 0) {\n      onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n    }\n  },\n  updateNodePositions: function (nodeDragItems) {\n    let positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const {\n      triggerNodeChanges\n    } = get();\n    const changes = nodeDragItems.map(node => {\n      const change = {\n        id: node.id,\n        type: 'position',\n        dragging\n      };\n      if (positionChanged) {\n        change.positionAbsolute = node.positionAbsolute;\n        change.position = node.position;\n      }\n      return change;\n    });\n    triggerNodeChanges(changes);\n  },\n  triggerNodeChanges: changes => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      hasDefaultNodes,\n      nodeOrigin,\n      getNodes,\n      elevateNodesOnSelect\n    } = get();\n    if (changes !== null && changes !== void 0 && changes.length) {\n      if (hasDefaultNodes) {\n        const nodes = applyNodeChanges(changes, getNodes());\n        const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n        set({\n          nodeInternals: nextNodeInternals\n        });\n      }\n      onNodesChange === null || onNodesChange === void 0 || onNodesChange(changes);\n    }\n  },\n  addSelectedNodes: selectedNodeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedNodes;\n    let changedEdges = null;\n    if (multiSelectionActive) {\n      changedNodes = selectedNodeIds.map(nodeId => createSelectionChange(nodeId, true));\n    } else {\n      changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n      changedEdges = getSelectionChanges(edges, []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  addSelectedEdges: selectedEdgeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedEdges;\n    let changedNodes = null;\n    if (multiSelectionActive) {\n      changedEdges = selectedEdgeIds.map(edgeId => createSelectionChange(edgeId, true));\n    } else {\n      changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n      changedNodes = getSelectionChanges(getNodes(), []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  unselectNodesAndEdges: function () {\n    let {\n      nodes,\n      edges\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      edges: storeEdges,\n      getNodes\n    } = get();\n    const nodesToUnselect = nodes ? nodes : getNodes();\n    const edgesToUnselect = edges ? edges : storeEdges;\n    const changedNodes = nodesToUnselect.map(n => {\n      n.selected = false;\n      return createSelectionChange(n.id, false);\n    });\n    const changedEdges = edgesToUnselect.map(edge => createSelectionChange(edge.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  setMinZoom: minZoom => {\n    const {\n      d3Zoom,\n      maxZoom\n    } = get();\n    d3Zoom === null || d3Zoom === void 0 || d3Zoom.scaleExtent([minZoom, maxZoom]);\n    set({\n      minZoom\n    });\n  },\n  setMaxZoom: maxZoom => {\n    const {\n      d3Zoom,\n      minZoom\n    } = get();\n    d3Zoom === null || d3Zoom === void 0 || d3Zoom.scaleExtent([minZoom, maxZoom]);\n    set({\n      maxZoom\n    });\n  },\n  setTranslateExtent: translateExtent => {\n    var _get$d3Zoom;\n    (_get$d3Zoom = get().d3Zoom) === null || _get$d3Zoom === void 0 || _get$d3Zoom.translateExtent(translateExtent);\n    set({\n      translateExtent\n    });\n  },\n  resetSelectedElements: () => {\n    const {\n      edges,\n      getNodes\n    } = get();\n    const nodes = getNodes();\n    const nodesToUnselect = nodes.filter(e => e.selected).map(n => createSelectionChange(n.id, false));\n    const edgesToUnselect = edges.filter(e => e.selected).map(e => createSelectionChange(e.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes: nodesToUnselect,\n      changedEdges: edgesToUnselect,\n      get,\n      set\n    });\n  },\n  setNodeExtent: nodeExtent => {\n    const {\n      nodeInternals\n    } = get();\n    nodeInternals.forEach(node => {\n      node.positionAbsolute = clampPosition(node.position, nodeExtent);\n    });\n    set({\n      nodeExtent,\n      nodeInternals: new Map(nodeInternals)\n    });\n  },\n  panBy: delta => {\n    const {\n      transform,\n      width,\n      height,\n      d3Zoom,\n      d3Selection,\n      translateExtent\n    } = get();\n    if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n      return false;\n    }\n    const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n    const extent = [[0, 0], [width, height]];\n    const constrainedTransform = d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.constrain()(nextTransform, extent, translateExtent);\n    d3Zoom.transform(d3Selection, constrainedTransform);\n    const transformChanged = transform[0] !== constrainedTransform.x || transform[1] !== constrainedTransform.y || transform[2] !== constrainedTransform.k;\n    return transformChanged;\n  },\n  cancelConnection: () => set({\n    connectionNodeId: initialState.connectionNodeId,\n    connectionHandleId: initialState.connectionHandleId,\n    connectionHandleType: initialState.connectionHandleType,\n    connectionStatus: initialState.connectionStatus,\n    connectionStartHandle: initialState.connectionStartHandle,\n    connectionEndHandle: initialState.connectionEndHandle\n  }),\n  reset: () => set(_objectSpread({}, initialState))\n}), Object.is);\nconst ReactFlowProvider = _ref68 => {\n  let {\n    children\n  } = _ref68;\n  const storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return React.createElement(Provider$1, {\n    value: storeRef.current\n  }, children);\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nconst Wrapper = _ref69 => {\n  let {\n    children\n  } = _ref69;\n  const isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return React.createElement(React.Fragment, null, children);\n  }\n  return React.createElement(ReactFlowProvider, null, children);\n};\nWrapper.displayName = 'ReactFlowWrapper';\nconst defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nconst defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nconst wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nconst ReactFlow = forwardRef((_ref70, ref) => {\n  let {\n      nodes,\n      edges,\n      defaultNodes,\n      defaultEdges,\n      className,\n      nodeTypes = defaultNodeTypes,\n      edgeTypes = defaultEdgeTypes,\n      onNodeClick,\n      onEdgeClick,\n      onInit,\n      onMove,\n      onMoveStart,\n      onMoveEnd,\n      onConnect,\n      onConnectStart,\n      onConnectEnd,\n      onClickConnectStart,\n      onClickConnectEnd,\n      onNodeMouseEnter,\n      onNodeMouseMove,\n      onNodeMouseLeave,\n      onNodeContextMenu,\n      onNodeDoubleClick,\n      onNodeDragStart,\n      onNodeDrag,\n      onNodeDragStop,\n      onNodesDelete,\n      onEdgesDelete,\n      onSelectionChange,\n      onSelectionDragStart,\n      onSelectionDrag,\n      onSelectionDragStop,\n      onSelectionContextMenu,\n      onSelectionStart,\n      onSelectionEnd,\n      connectionMode = ConnectionMode.Strict,\n      connectionLineType = ConnectionLineType.Bezier,\n      connectionLineStyle,\n      connectionLineComponent,\n      connectionLineContainerStyle,\n      deleteKeyCode = 'Backspace',\n      selectionKeyCode = 'Shift',\n      selectionOnDrag = false,\n      selectionMode = SelectionMode.Full,\n      panActivationKeyCode = 'Space',\n      multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control',\n      zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control',\n      snapToGrid = false,\n      snapGrid = initSnapGrid,\n      onlyRenderVisibleElements = false,\n      selectNodesOnDrag = true,\n      nodesDraggable,\n      nodesConnectable,\n      nodesFocusable,\n      nodeOrigin = initNodeOrigin,\n      edgesFocusable,\n      edgesUpdatable,\n      elementsSelectable,\n      defaultViewport = initDefaultViewport,\n      minZoom = 0.5,\n      maxZoom = 2,\n      translateExtent = infiniteExtent,\n      preventScrolling = true,\n      nodeExtent,\n      defaultMarkerColor = '#b1b1b7',\n      zoomOnScroll = true,\n      zoomOnPinch = true,\n      panOnScroll = false,\n      panOnScrollSpeed = 0.5,\n      panOnScrollMode = PanOnScrollMode.Free,\n      zoomOnDoubleClick = true,\n      panOnDrag = true,\n      onPaneClick,\n      onPaneMouseEnter,\n      onPaneMouseMove,\n      onPaneMouseLeave,\n      onPaneScroll,\n      onPaneContextMenu,\n      children,\n      onEdgeContextMenu,\n      onEdgeDoubleClick,\n      onEdgeMouseEnter,\n      onEdgeMouseMove,\n      onEdgeMouseLeave,\n      onEdgeUpdate,\n      onEdgeUpdateStart,\n      onEdgeUpdateEnd,\n      onReconnect,\n      onReconnectStart,\n      onReconnectEnd,\n      reconnectRadius = 10,\n      edgeUpdaterRadius = 10,\n      onNodesChange,\n      onEdgesChange,\n      noDragClassName = 'nodrag',\n      noWheelClassName = 'nowheel',\n      noPanClassName = 'nopan',\n      fitView = false,\n      fitViewOptions,\n      connectOnClick = true,\n      attributionPosition,\n      proOptions,\n      defaultEdgeOptions,\n      elevateNodesOnSelect = true,\n      elevateEdgesOnSelect = false,\n      disableKeyboardA11y = false,\n      autoPanOnConnect = true,\n      autoPanOnNodeDrag = true,\n      connectionRadius = 20,\n      isValidConnection,\n      onError,\n      style,\n      id,\n      nodeDragThreshold\n    } = _ref70,\n    rest = _objectWithoutProperties(_ref70, _excluded5);\n  const rfId = id || '1';\n  return React.createElement(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    style: _objectSpread(_objectSpread({}, style), wrapperStyle),\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id\n  }), React.createElement(Wrapper, null, React.createElement(GraphView$1, {\n    onInit: onInit,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onNodeClick: onNodeClick,\n    onEdgeClick: onEdgeClick,\n    onNodeMouseEnter: onNodeMouseEnter,\n    onNodeMouseMove: onNodeMouseMove,\n    onNodeMouseLeave: onNodeMouseLeave,\n    onNodeContextMenu: onNodeContextMenu,\n    onNodeDoubleClick: onNodeDoubleClick,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    connectionLineType: connectionLineType,\n    connectionLineStyle: connectionLineStyle,\n    connectionLineComponent: connectionLineComponent,\n    connectionLineContainerStyle: connectionLineContainerStyle,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    deleteKeyCode: deleteKeyCode,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    onlyRenderVisibleElements: onlyRenderVisibleElements,\n    selectNodesOnDrag: selectNodesOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    preventScrolling: preventScrolling,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneScroll: onPaneScroll,\n    onPaneContextMenu: onPaneContextMenu,\n    onSelectionContextMenu: onSelectionContextMenu,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    onEdgeContextMenu: onEdgeContextMenu,\n    onEdgeDoubleClick: onEdgeDoubleClick,\n    onEdgeMouseEnter: onEdgeMouseEnter,\n    onEdgeMouseMove: onEdgeMouseMove,\n    onEdgeMouseLeave: onEdgeMouseLeave,\n    onReconnect: onReconnect !== null && onReconnect !== void 0 ? onReconnect : onEdgeUpdate,\n    onReconnectStart: onReconnectStart !== null && onReconnectStart !== void 0 ? onReconnectStart : onEdgeUpdateStart,\n    onReconnectEnd: onReconnectEnd !== null && onReconnectEnd !== void 0 ? onReconnectEnd : onEdgeUpdateEnd,\n    reconnectRadius: reconnectRadius !== null && reconnectRadius !== void 0 ? reconnectRadius : edgeUpdaterRadius,\n    defaultMarkerColor: defaultMarkerColor,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    elevateEdgesOnSelect: elevateEdgesOnSelect,\n    rfId: rfId,\n    disableKeyboardA11y: disableKeyboardA11y,\n    nodeOrigin: nodeOrigin,\n    nodeExtent: nodeExtent\n  }), React.createElement(StoreUpdater, {\n    nodes: nodes,\n    edges: edges,\n    defaultNodes: defaultNodes,\n    defaultEdges: defaultEdges,\n    onConnect: onConnect,\n    onConnectStart: onConnectStart,\n    onConnectEnd: onConnectEnd,\n    onClickConnectStart: onClickConnectStart,\n    onClickConnectEnd: onClickConnectEnd,\n    nodesDraggable: nodesDraggable,\n    nodesConnectable: nodesConnectable,\n    nodesFocusable: nodesFocusable,\n    edgesFocusable: edgesFocusable,\n    edgesUpdatable: edgesUpdatable,\n    elementsSelectable: elementsSelectable,\n    elevateNodesOnSelect: elevateNodesOnSelect,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    nodeExtent: nodeExtent,\n    onNodesChange: onNodesChange,\n    onEdgesChange: onEdgesChange,\n    snapToGrid: snapToGrid,\n    snapGrid: snapGrid,\n    connectionMode: connectionMode,\n    translateExtent: translateExtent,\n    connectOnClick: connectOnClick,\n    defaultEdgeOptions: defaultEdgeOptions,\n    fitView: fitView,\n    fitViewOptions: fitViewOptions,\n    onNodesDelete: onNodesDelete,\n    onEdgesDelete: onEdgesDelete,\n    onNodeDragStart: onNodeDragStart,\n    onNodeDrag: onNodeDrag,\n    onNodeDragStop: onNodeDragStop,\n    onSelectionDrag: onSelectionDrag,\n    onSelectionDragStart: onSelectionDragStart,\n    onSelectionDragStop: onSelectionDragStop,\n    noPanClassName: noPanClassName,\n    nodeOrigin: nodeOrigin,\n    rfId: rfId,\n    autoPanOnConnect: autoPanOnConnect,\n    autoPanOnNodeDrag: autoPanOnNodeDrag,\n    onError: onError,\n    connectionRadius: connectionRadius,\n    isValidConnection: isValidConnection,\n    nodeDragThreshold: nodeDragThreshold\n  }), React.createElement(Wrapper$1, {\n    onSelectionChange: onSelectionChange\n  }), children, React.createElement(Attribution, {\n    proOptions: proOptions,\n    position: attributionPosition\n  }), React.createElement(A11yDescriptions, {\n    rfId: rfId,\n    disableKeyboardA11y: disableKeyboardA11y\n  })));\n});\nReactFlow.displayName = 'ReactFlow';\nconst selector$1 = s => {\n  var _s$domNode;\n  return (_s$domNode = s.domNode) === null || _s$domNode === void 0 ? void 0 : _s$domNode.querySelector('.react-flow__edgelabel-renderer');\n};\nfunction EdgeLabelRenderer(_ref71) {\n  let {\n    children\n  } = _ref71;\n  const edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  const store = useStoreApi();\n  return useCallback(id => {\n    const {\n      domNode,\n      updateNodeDimensions\n    } = store.getState();\n    const updateIds = Array.isArray(id) ? id : [id];\n    const updates = updateIds.reduce((res, updateId) => {\n      const nodeElement = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector(\".react-flow__node[data-id=\\\"\".concat(updateId, \"\\\"]\"));\n      if (nodeElement) {\n        res.push({\n          id: updateId,\n          nodeElement,\n          forceUpdate: true\n        });\n      }\n      return res;\n    }, []);\n    requestAnimationFrame(() => updateNodeDimensions(updates));\n  }, []);\n}\nconst nodesSelector = state => state.getNodes();\nfunction useNodes() {\n  const nodes = useStore(nodesSelector, shallow);\n  return nodes;\n}\nconst edgesSelector = state => state.edges;\nfunction useEdges() {\n  const edges = useStore(edgesSelector, shallow);\n  return edges;\n}\nconst viewportSelector = state => ({\n  x: state.transform[0],\n  y: state.transform[1],\n  zoom: state.transform[2]\n});\nfunction useViewport() {\n  const viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return initialItems => {\n    const [items, setItems] = useState(initialItems);\n    const onItemsChange = useCallback(changes => setItems(items => applyChanges(changes, items)), []);\n    return [items, setItems, onItemsChange];\n  };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref72) {\n  let {\n    onStart,\n    onChange,\n    onEnd\n  } = _ref72;\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(() => {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(() => {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref73) {\n  let {\n    onChange\n  } = _ref73;\n  const store = useStoreApi();\n  useEffect(() => {\n    const nextSelectionChangeHandlers = [...store.getState().onSelectionChange, onChange];\n    store.setState({\n      onSelectionChange: nextSelectionChangeHandlers\n    });\n    return () => {\n      const nextHandlers = store.getState().onSelectionChange.filter(fn => fn !== onChange);\n      store.setState({\n        onSelectionChange: nextHandlers\n      });\n    };\n  }, [onChange]);\n}\nconst selector = options => s => {\n  if (s.nodeInternals.size === 0) {\n    return false;\n  }\n  return s.getNodes().filter(n => options.includeHiddenNodes ? true : !n.hidden).every(n => {\n    var _n$internalsSymbol;\n    return ((_n$internalsSymbol = n[internalsSymbol]) === null || _n$internalsSymbol === void 0 ? void 0 : _n$internalsSymbol.handleBounds) !== undefined;\n  });\n};\nconst defaultOptions = {\n  includeHiddenNodes: false\n};\nfunction useNodesInitialized() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  const initialized = useStore(selector(options));\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getNodesBounds, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, getViewportForBounds, handleParentExpand, internalsSymbol, isEdge, isNode, reconnectEdge, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["React","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStoreWithEqualityFn","createWithEqualityFn","shallow","zoomIdentity","zoom","select","pointer","drag","createPortal","StoreContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","concat","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","error012","zustandErrorMessage","useStore","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","_ref","position","children","className","style","rest","_objectWithoutProperties","_excluded","pointerEvents","positionClasses","split","createElement","_objectSpread","Attribution","_ref2","proOptions","hideAttribution","href","target","rel","EdgeText","_ref3","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","_excluded2","edgeRef","edgeTextBbox","setEdgeTextBbox","width","height","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","arguments","length","undefined","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","_element$getRootNode","_window","getRootNode","call","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","_ref4","boxToRect","_ref5","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","_kbEvent$composedPath","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","_event$touches","_event$touches2","_bounds$left","_bounds$top","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","isMacOs","_navigator","navigator","userAgent","indexOf","BaseEdge","_ref6","path","labelX","labelY","markerEnd","markerStart","interactionWidth","Fragment","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","edges","find","e","getEdgeCenter","_ref7","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","_ref8","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","_ref9","x1","y1","Left","Right","getSimpleBezierPath","_ref0","sourcePosition","Bottom","targetPosition","Top","SimpleBezierEdge","_ref1","handleDirections","getDirection","_ref10","source","distance","a","b","sqrt","pow","getPoints","_ref11","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","sourceGapOffset","targetGapOffset","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","_center$x","_center$y","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","sourceGapPoint","targetGapPoint","maxXDistance","maxYDistance","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","_ref12","borderRadius","reduce","res","p","i","segment","SmoothStepEdge","_ref13","pathOptions","StepEdge","props","_props$pathOptions2","_props$pathOptions","getStraightPath","_ref14","StraightEdge","_ref15","calculateControlOffset","curvature","getControlWithCurvature","_ref16","getBezierPath","_ref17","BezierEdge","_ref18","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","_ref19","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","reconnectEdge","oldEdge","newConnection","options","shouldReplaceId","oldEdgeId","_excluded3","foundEdge","updateEdge","pointToRendererPoint","_ref20","_ref21","snapToGrid","_ref22","tx","ty","tScale","snapX","snapY","round","rendererPointToPoint","_ref23","_ref24","getNodePositionWithOrigin","_node$width","_node$height","nodeOrigin","getNodesBounds","box","currBox","Infinity","getRectOfNodes","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","getViewportForBounds","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","_node$positionAbsolut","_node$positionAbsolut2","_node$positionAbsolut3","_node$positionAbsolut4","getClosestHandle","doc","connectionRadius","handles","validator","domNodes","elementsFromPoint","handleBelow","classList","contains","handleNodeId","getAttribute","handleType","getHandleType","handleId","validHandleResult","handle","closestHandles","minDistance","defaultResult","hasValidHandle","_ref25","isValid","hasTargetHandle","_ref26","_ref27","nullConnection","handleDomNode","connection","endHandle","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","isTarget","handleToCheck","querySelector","result","connectable","connectableEnd","isConnectable","Strict","getHandleLookup","_ref28","sourceHandles","targetHandles","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","_ref29","onConnect","onReconnectEnd","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","closestHandle","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","connectionEndHandle","onPointerMove","add","toggle","onPointerUp","_getState$onConnectEn","_getState","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","connectingSelector","state","startHandle","connectionClickStartHandle","clickHandle","connecting","clickConnecting","Handle","_ref30","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","_excluded4","_store$getState$onErr","_store$getState","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","setEdges","onPointerDown","button","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","connectablestart","connectableend","connectionindicator","Handle$1","DefaultNode","_ref31","data","DefaultNode$1","InputNode","_ref32","InputNode$1","OutputNode","_ref33","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","_ref34","onSelectionChange","fn","changeSelector","Wrapper$1","_ref35","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","_ref36","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","nodeDragThreshold","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","_ref37","A11yDescriptions","_ref38","disableKeyboardA11y","useKeyPress","keyCode","actInsideInputWithModifier","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","keyCodeArr","Array","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","shiftKey","preventAction","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","k","has","eventCode","calculateXYZPosition","_result$x","_result$y","_parentNode$internals","_parentNode$internals2","_result$z","_parentNode$internals3","_parentNode$internals4","_result$z2","parentId","parentNode","get","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","_node$internalsSymbol","_node$internalsSymbol2","isParent","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","_currInternals$intern","zIndex","currInternals","internals","resetHandleBounds","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","_options$nodes","includeHiddenNodes","optionNode","nodesInitialized","_options$minZoom","_options$maxZoom","_options$padding","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","_ref39","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","screenToFlowPosition","flowToScreenPosition","viewportInitialized","selector$b","useViewportHelper","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","_transform$x","_transform$y","_transform$zoom","nextZoom","_options$padding2","domX","domY","relativePosition","rendererPosition","useReactFlow","viewportHelper","getNode","getEdges","getEdge","payload","nextNodes","changes","nextEdges","addNodes","currentNodes","addEdges","toObject","viewport","deleteElements","_ref40","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","deleteKeyOptions","useGlobalKeyHandler","_ref41","deleteKeyCode","multiSelectionKeyCode","deleteKeyPressed","multiSelectionKeyPressed","nodesSelectionActive","multiSelectionActive","useResizeHandler","rendererNode","resizeObserver","updateDimensions","_store$getState$onErr2","_store$getState2","ResizeObserver","observe","unobserve","containerStyle","viewChanged","prevViewport","eventTransform","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","wheelDelta","factor","deltaY","deltaMode","selector$a","d3ZoomHandler","ZoomPane","_ref42","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","isPanScrolling","panScrollTimeout","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","on","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","internal","nextViewport","onViewportChangeStart","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","passive","invalidEvent","_event$sourceEvent","_event$sourceEvent2","sourceEvent","flowTransform","paneDragging","_mouseButton$current","_event$sourceEvent3","_mouseButton$current2","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","isActive","handleParentExpand","updateItem","parent","extendWidth","extendHeight","_parent$style$width","_parent$style$height","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","_ref43","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","onContextMenu","onWheel","startX","startY","onMouseMove","_userSelectionRect$st","_userSelectionRect$st2","mousePos","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","onMouseLeave","hasActiveSelection","onMouseEnter","isParentSelected","hasSelector","nodeRef","_current","matches","parentElement","getDragItems","from","values","draggable","_n$positionAbsolute$x","_n$positionAbsolute","_n$positionAbsolute$y","_n$positionAbsolute2","delta","clampNodeExtent","calcNextPosition","nextPosition","clampedNodeExtent","currentExtent","parentX","parentY","parentPosition","getEventHandlerParams","_ref44","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","_ref45","unselect","addSelectedNodes","unselectNodesAndEdges","_nodeRef$current","blur","useGetPointerPosition","getPointerPosition","_ref46","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","_ref47","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","dragStarted","abortDrag","updateNodes","_ref48","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","_n$width","_n$height","updatedPos","onDrag","currentNode","_lastPos$current$x","_lastPos$current$y","startDrag","onStart","_nodeInternals$get","dragHandler","_lastPos$current$x2","_lastPos$current","_lastPos$current$y2","_lastPos$current2","onStop","isDraggable","useUpdateNodePositions","updatePositions","xVelo","yVelo","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","_ref49","xPos","yPos","xPosOrigin","yPosOrigin","onDoubleClick","isFocusable","dragHandle","initialized","ariaLabel","hasHandleBounds","prevNodeRef","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","onKeyDown","prototype","hasOwnProperty","replace","toLowerCase","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","tabIndex","role","selector$7","transformString","NodesSelection","_ref50","onSelectionContextMenu","_nodeRef$current2","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","_ref51","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnScroll","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","createNodeTypes","nodeTypes","standardTypes","input","default","output","group","wrappedTypes","specialTypes","getPositionWithOrigin","_ref52","origin","selector$5","NodeRenderer","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","_resizeObserverRef$cu","disconnect","_clampedPosition$x","_clampedPosition$y","_node$width2","_node$height2","_node$internalsSymbol3","_node$internalsSymbol4","_node$internalsSymbol5","_node$internalsSymbol6","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","_ref53","radius","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","_ref54","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","reconnectRadius","onReconnect","onReconnectStart","isReconnectable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","addSelectedEdges","_edgeRef$current","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_onReconnectEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","_edgeRef$current2","createEdgeTypes","edgeTypes","straight","bezier","step","smoothstep","simplebezier","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","_ref55","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","_node$internalsSymbol7","_node$positionAbsolut5","_node$positionAbsolut6","_node$positionAbsolut7","_node$positionAbsolut8","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","_sourceNode$internals","_targetNode$internals","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","_ref56","useVisibleEdges","ArrowSymbol","_ref57","color","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","_ref58","MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","_store$getState$onErr3","_store$getState3","Marker","_ref59","markerUnits","orient","markerWidth","markerHeight","refX","refY","markerSelector","_ref60","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","_ref61","m","MarkerDefinitions$1","selector$4","EdgeRenderer","_ref62","defaultMarkerColor","_ref63","_targetHandleBounds$t","_targetHandleBounds$s","sourceHandleBounds","sourceIsValid","targetHandleBounds","targetIsValid","targetNodeHandles","edgeReconnectable","reconnectable","updatable","EdgeRenderer$1","selector$3","Viewport","_ref64","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","ConnectionLine","_ref65","_fromNode$internalsSy","_fromNode$width","_fromNode$height","_fromNode$positionAbs","_fromNode$positionAbs2","_fromNode$positionAbs3","_fromNode$positionAbs4","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","_ref66","component","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","_store$getState$onErr4","_store$getState4","GraphView","_ref67","connectionLineComponent","connectionLineContainerStyle","nodeTypesWrapped","edgeTypesWrapped","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","nodesToUnselect","edgesToUnselect","_get$d3Zoom","transformChanged","is","ReactFlowProvider","_ref68","storeRef","Wrapper","_ref69","isWrapped","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","_ref70","onEdgeUpdate","onEdgeUpdateStart","onEdgeUpdateEnd","edgeUpdaterRadius","attributionPosition","_excluded5","selector$1","_s$domNode","EdgeLabelRenderer","_ref71","edgeLabelRenderer","useUpdateNodeInternals","updateIds","updateId","nodesSelector","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","_ref72","onChange","onEnd","useOnSelectionChange","_ref73","nextSelectionChangeHandlers","nextHandlers","_n$internalsSymbol","defaultOptions","useNodesInitialized"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/node_modules/@reactflow/core/dist/esm/index.mjs"],"sourcesContent":["import React, { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (React.createElement(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest }, children));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (React.createElement(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://reactflow.dev/pro\" },\n        React.createElement(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\" }, \"React Flow\")));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (React.createElement(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest },\n        labelShowBg && (React.createElement(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })),\n        React.createElement(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle }, label),\n        children));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }),\n        interactionWidth && (React.createElement(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })),\n        label && isNumeric(labelX) && isNumeric(labelY) ? (React.createElement(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x ?? defaultCenterX;\n        centerY = center.y ?? defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (React.createElement(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (React.createElement(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst reconnectEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\n/**\n *\n * @deprecated Use `reconnectEdge` instead.\n */\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    console.warn('[DEPRECATED] `updateEdge` is deprecated. Instead use `reconnectEdge` https://reactflow.dev/api-reference/utils/reconnect-edge');\n    return reconnectEdge(oldEdge, newConnection, edges, options);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getNodesBounds = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\n// @deprecated Use `getNodesBounds`.\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    console.warn('[DEPRECATED] `getRectOfNodes` is deprecated. Instead use `getNodesBounds` https://reactflow.dev/api-reference/utils/get-nodes-bounds.');\n    return getNodesBounds(nodes, nodeOrigin);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\n// @deprecated Use `getViewportForBounds`.\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, padding);\n    console.warn('[DEPRECATED] `getTransformForBounds` is deprecated. Instead use `getViewportForBounds`. Beware that the return value is type Viewport (`{ x: number, y: number, zoom: number }`) instead of Transform (`[number, number, number]`). https://reactflow.dev/api-reference/utils/get-viewport-for-bounds');\n    return [x, y, zoom];\n};\nconst getViewportForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return { x, y, zoom: clampedZoom };\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                const handle = handles.find((h) => h.nodeId === handleNodeId && h.type === handleType && h.id === handleId);\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: handle?.x || pos.x,\n                        y: handle?.y || pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onReconnectEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onReconnectEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (React.createElement(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest }, children));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n        data?.label,\n        React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (React.createElement(React.Fragment, null,\n    data?.label,\n    React.createElement(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (React.createElement(React.Fragment, null,\n    React.createElement(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }),\n    data?.label));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected).map((e) => ({ ...e })),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange.forEach((fn) => fn(params));\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return React.createElement(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, nodeDragThreshold, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useDirectStoreUpdater('nodeDragThreshold', nodeDragThreshold, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (React.createElement(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle }, ariaLiveMessage));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style },\n            \"Press enter or space to select a node.\",\n            !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.',\n            \" Press delete to remove it and escape to cancel.\",\n            ' '),\n        React.createElement(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style }, \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"),\n        !disableKeyboardA11y && React.createElement(AriaLiveMessage, { rfId: rfId })));\n}\n\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { actInsideInputWithModifier: true }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        const doc = typeof document !== 'undefined' ? document : null;\n        const target = options?.target || doc;\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                const preventAction = (!modifierPressed.current || (modifierPressed.current && !options.actInsideInputWithModifier)) &&\n                    isInputDOMNode(event);\n                if (preventAction) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            target?.addEventListener('keydown', downHandler);\n            target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                target?.removeEventListener('keydown', downHandler);\n                target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    const parentId = node.parentNode || node.parentId;\n    if (!parentId) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(parentId);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        const parentId = node.parentNode || node.parentId;\n        if (parentId && !nodeInternals.has(parentId)) {\n            throw new Error(`Parent node ${parentId} not found`);\n        }\n        if (parentId || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        const parentId = node.parentNode || node.parentId;\n        if (parentId) {\n            parentNodes[parentId] = true;\n        }\n        const resetHandleBounds = currInternals?.type && currInternals?.type !== node.type;\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: resetHandleBounds ? undefined : currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getNodesBounds(nodes, nodeOrigin);\n            const { x, y, zoom } = getViewportForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    screenToFlowPosition: (position) => position,\n    flowToScreenPosition: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const { x, y, zoom } = getViewportForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                // @deprecated Use `screenToFlowPosition`.\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    console.warn('[DEPRECATED] `project` is deprecated. Instead use `screenToFlowPosition`. There is no need to subtract the react flow bounds anymore! https://reactflow.dev/api-reference/types/react-flow-instance#screen-to-flow-position');\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                screenToFlowPosition: (position) => {\n                    const { transform, snapToGrid, snapGrid, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const relativePosition = {\n                        x: position.x - domX,\n                        y: position.y - domY,\n                    };\n                    return pointToRendererPoint(relativePosition, transform, snapToGrid, snapGrid);\n                },\n                flowToScreenPosition: (position) => {\n                    const { transform, domNode } = store.getState();\n                    if (!domNode) {\n                        return position;\n                    }\n                    const { x: domX, y: domY } = domNode.getBoundingClientRect();\n                    const rendererPosition = rendererPointToPoint(position, transform);\n                    return {\n                        x: rendererPosition.x + domX,\n                        y: rendererPosition.y + domY,\n                    };\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentId = node.parentNode || node.parentId;\n            const parentHit = !nodeIds.includes(node.id) && parentId && res.find((n) => n.id === parentId);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        if (!isRect && !node) {\n            return [null, null, isRect];\n        }\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeRect.width * nodeRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nconst deleteKeyOptions = { actInsideInputWithModifier: false };\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode, deleteKeyOptions);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = (eventTransform) => ({\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    const isPanScrolling = useRef(false);\n    const panScrollTimeout = useRef();\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            d3ZoomInstance.wheelDelta(wheelDelta);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    // macos and win set ctrlKey=true for pinch gesture on a trackpad\n                    if (event.ctrlKey && zoomOnPinch) {\n                        const point = pointer(event);\n                        const pinchDelta = wheelDelta(event);\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        // @ts-ignore\n                        d3Zoom.scaleTo(d3Selection, zoom, point, event);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    // this enables vertical scrolling with shift + scroll on windows\n                    if (!isMacOs() && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n                        deltaX = event.deltaY * deltaNormalize;\n                        deltaY = 0;\n                    }\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n                    // @ts-ignore\n                    { internal: true });\n                    const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n                    const { onViewportChangeStart, onViewportChange, onViewportChangeEnd } = store.getState();\n                    clearTimeout(panScrollTimeout.current);\n                    // for pan on scroll we need to handle the event calls on our own\n                    // we can't use the start, zoom and end events from d3-zoom\n                    // because start and move gets called on every scroll event and not once at the beginning\n                    if (!isPanScrolling.current) {\n                        isPanScrolling.current = true;\n                        onMoveStart?.(event, nextViewport);\n                        onViewportChangeStart?.(nextViewport);\n                    }\n                    if (isPanScrolling.current) {\n                        onMove?.(event, nextViewport);\n                        onViewportChange?.(nextViewport);\n                        panScrollTimeout.current = setTimeout(() => {\n                            onMoveEnd?.(event, nextViewport);\n                            onViewportChangeEnd?.(nextViewport);\n                            isPanScrolling.current = false;\n                        }, 150);\n                    }\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    // we still want to enable pinch zooming even if preventScrolling is set to false\n                    const invalidEvent = !preventScrolling && event.type === 'wheel' && !event.ctrlKey;\n                    if (invalidEvent || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent?.button;\n                const { onViewportChangeStart } = store.getState();\n                const flowTransform = eventToFlowTransform(event.transform);\n                isZoomingOrPanning.current = true;\n                prevTransform.current = flowTransform;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                onViewportChangeStart?.(flowTransform);\n                onMoveStart?.(event.sourceEvent, flowTransform);\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if ((panOnDrag === true || (Array.isArray(panOnDrag) && panOnDrag.includes(1))) &&\n                    event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) &&\n                    (event.type !== 'wheel' || (panOnScroll && event.type === 'wheel' && !zoomActivationKeyPressed))) {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && event.type === 'mousedown') {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (React.createElement(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle }, children));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parentId = updateItem.parentNode || updateItem.parentId;\n    const parent = res.find((e) => e.id === parentId);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\n/**\n * The user selection rectangle gets displayed when a user drags the mouse while pressing shift\n */\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (React.createElement(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle },\n        children,\n        React.createElement(UserSelection, null)));\n});\nPane.displayName = 'Pane';\n\nfunction isParentSelected(node, nodeInternals) {\n    const parentId = node.parentNode || node.parentId;\n    if (!parentId) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(parentId);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || n.parentId || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode || n.parentId,\n        parentId: n.parentNode || n.parentId,\n        width: n.width,\n        height: n.height,\n        expandParent: n.expandParent,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    const parentId = node.parentNode || node.parentId;\n    if (node.extent === 'parent' && !node.expandParent) {\n        if (parentId && node.width && node.height) {\n            const parent = nodeInternals.get(parentId);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && parentId && node.extent !== 'parent') {\n        const parent = nodeInternals.get(parentId);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (parentId) {\n        const parentNode = nodeInternals.get(parentId);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent && currentExtent !== 'parent'\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            if (node) {\n                handler(event, { ...node });\n            }\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals, onError } = store.getState();\n    const node = nodeInternals.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node], edges: [] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const dragStarted = useRef(false);\n    const abortDrag = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n                if (dragItems.current.length > 1 && nodeExtent) {\n                    const rect = getNodesBounds(dragItems.current, nodeOrigin);\n                    nodesBox = rectToBox(rect);\n                }\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                    // based on its position so that the node stays at it's position relative to the selection.\n                    const adjustedNodeExtent = [\n                        [nodeExtent[0][0], nodeExtent[0][1]],\n                        [nodeExtent[1][0], nodeExtent[1][1]],\n                    ];\n                    if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n                        adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                        adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n                        adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                        adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a change\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            const startDrag = (event) => {\n                const { nodeInternals, multiSelectionActive, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                dragStarted.current = true;\n                const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                if ((!selectNodesOnDrag || !isSelectable) && !multiSelectionActive && nodeId) {\n                    if (!nodeInternals.get(nodeId)?.selected) {\n                        // we need to reset selected nodes when selectNodesOnDrag=false\n                        unselectNodesAndEdges();\n                    }\n                }\n                if (nodeId && isSelectable && selectNodesOnDrag) {\n                    handleNodeClick({\n                        id: nodeId,\n                        store,\n                        nodeRef: nodeRef,\n                    });\n                }\n                const pointerPos = getPointerPosition(event);\n                lastPos.current = pointerPos;\n                dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                if (onStart && dragItems.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onStart(event.sourceEvent, currentNode, nodes);\n                }\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { domNode, nodeDragThreshold } = store.getState();\n                    if (nodeDragThreshold === 0) {\n                        startDrag(event);\n                    }\n                    abortDrag.current = false;\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag, nodeDragThreshold } = store.getState();\n                    if (event.sourceEvent.type === 'touchmove' && event.sourceEvent.touches.length > 1) {\n                        abortDrag.current = true;\n                    }\n                    if (abortDrag.current) {\n                        return;\n                    }\n                    if (!autoPanStarted.current && dragStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    if (!dragStarted.current) {\n                        const x = pointerPos.xSnapped - (lastPos?.current?.x ?? 0);\n                        const y = pointerPos.ySnapped - (lastPos?.current?.y ?? 0);\n                        const distance = Math.sqrt(x * x + y * y);\n                        if (distance > nodeDragThreshold) {\n                            startDrag(event);\n                        }\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current &&\n                        dragStarted.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    if (!dragStarted.current || abortDrag.current) {\n                        return;\n                    }\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    dragStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, hasHandleBounds, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevNodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            const { nodeDragThreshold } = store.getState();\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable || nodeDragThreshold > 0)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                if (node) {\n                    onClick(event, { ...node });\n                }\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (disableKeyboardA11y) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            return () => {\n                if (prevNodeRef.current) {\n                    resizeObserver?.unobserve(prevNodeRef.current);\n                    prevNodeRef.current = null;\n                }\n            };\n        }, []);\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                if (!initialized || !hasHandleBounds || prevNodeRef.current !== currNode) {\n                    // At this point we always want to make sure that the node gets re-measured / re-initialized.\n                    // We need to unobserve it first in case it is still observed\n                    if (prevNodeRef.current) {\n                        resizeObserver?.unobserve(prevNodeRef.current);\n                    }\n                    resizeObserver?.observe(currNode);\n                    prevNodeRef.current = currNode;\n                }\n            }\n        }, [hidden, initialized, hasHandleBounds]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel },\n            React.createElement(Provider, { value: id },\n                React.createElement(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }))));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\n/**\n * The nodes selection rectangle gets displayed when a user\n * made a selection with on or several nodes\n */\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getNodesBounds(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (React.createElement(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        } },\n        React.createElement(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } })));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll: _panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const panOnScroll = panActivationKeyPressed || _panOnScroll;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (React.createElement(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName },\n        React.createElement(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode },\n            children,\n            nodesSelectionActive && (React.createElement(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y })))));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (React.createElement(\"div\", { className: \"react-flow__nodes\", style: containerStyle }, nodes.map((node) => {\n        let nodeType = node.type || 'default';\n        if (!props.nodeTypes[nodeType]) {\n            onError?.('003', errorMessages['error003'](nodeType));\n            nodeType = 'default';\n        }\n        const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n        const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n        const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n        const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n        const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n        const clampedPosition = props.nodeExtent\n            ? clampPosition(node.positionAbsolute, props.nodeExtent)\n            : node.positionAbsolute;\n        const posX = clampedPosition?.x ?? 0;\n        const posY = clampedPosition?.y ?? 0;\n        const posOrigin = getPositionWithOrigin({\n            x: posX,\n            y: posY,\n            width: node.width ?? 0,\n            height: node.height ?? 0,\n            origin: props.nodeOrigin,\n        });\n        return (React.createElement(NodeComponent, { key: node.id, id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel, hasHandleBounds: !!node[internalsSymbol]?.handleBounds }));\n    })));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (React.createElement(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, reconnectRadius, onReconnect, onReconnectStart, onReconnectEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isReconnectable, pathOptions, interactionWidth, disableKeyboardA11y, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url('#${getMarkerId(markerStart, rfId)}')`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url('#${getMarkerId(markerEnd, rfId)}')`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges, unselectNodesAndEdges, multiSelectionActive } = store.getState();\n            const edge = edges.find((e) => e.id === id);\n            if (!edge) {\n                return;\n            }\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                if (edge.selected && multiSelectionActive) {\n                    unselectNodesAndEdges({ nodes: [], edges: [edge] });\n                    edgeRef.current?.blur();\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n            if (onClick) {\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onReconnectStart?.(event, edge, handleType);\n            const _onReconnectEnd = (evt) => {\n                setUpdating(false);\n                onReconnectEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onReconnect?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onReconnectEnd: _onReconnectEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (!disableKeyboardA11y && elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (React.createElement(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef },\n            !updating && (React.createElement(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })),\n            isReconnectable && (React.createElement(React.Fragment, null,\n                (isReconnectable === 'source' || isReconnectable === true) && (React.createElement(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: reconnectRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })),\n                (isReconnectable === 'target' || isReconnectable === true) && (React.createElement(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: reconnectRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))))));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (React.createElement(\"polyline\", { style: {\n            stroke: color,\n            fill: color,\n            strokeWidth,\n        }, strokeLinecap: \"round\", strokeLinejoin: \"round\", points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (React.createElement(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\" },\n        React.createElement(Symbol, { color: color, strokeWidth: strokeWidth })));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (React.createElement(\"defs\", null, markers.map((marker) => (React.createElement(Marker, { id: marker.id, key: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient })))));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, onEdgeDoubleClick, onReconnect, onReconnectStart, onReconnectEnd, reconnectRadius, children, disableKeyboardA11y, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        edgeTree.map(({ level, edges, isMaxLevel }) => (React.createElement(\"svg\", { key: level, style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\" },\n            isMaxLevel && React.createElement(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }),\n            React.createElement(\"g\", null, edges.map((edge) => {\n                const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                if (!sourceIsValid || !targetIsValid) {\n                    return null;\n                }\n                let edgeType = edge.type || 'default';\n                if (!edgeTypes[edgeType]) {\n                    onError?.('011', errorMessages['error011'](edgeType));\n                    edgeType = 'default';\n                }\n                const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                // when connection type is loose we can define all handles as sources and connect source -> source\n                const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                    ? targetHandleBounds.target\n                    : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                const sourcePosition = sourceHandle?.position || Position.Bottom;\n                const targetPosition = targetHandle?.position || Position.Top;\n                const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                const edgeReconnectable = edge.reconnectable || edge.updatable;\n                const isReconnectable = typeof onReconnect !== 'undefined' &&\n                    (edgeReconnectable || (edgesUpdatable && typeof edgeReconnectable === 'undefined'));\n                if (!sourceHandle || !targetHandle) {\n                    onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                    return null;\n                }\n                const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                return (React.createElement(EdgeComponent, { key: edge.id, id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, reconnectRadius: reconnectRadius, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isReconnectable: isReconnectable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth, disableKeyboardA11y: disableKeyboardA11y }));\n            }))))),\n        children));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (React.createElement(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform } }, children));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (React.createElement(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return React.createElement(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (React.createElement(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\" },\n        React.createElement(\"g\", { className: cc(['react-flow__connection', connectionStatus]) },\n            React.createElement(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }))));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const store = useStoreApi();\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                store.getState().onError?.('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onReconnect, onReconnectStart, onReconnectEnd, reconnectRadius, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    useOnInitHandler(onInit);\n    return (React.createElement(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y },\n        React.createElement(Viewport, null,\n            React.createElement(EdgeRenderer$1, { edgeTypes: edgeTypesWrapped, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onReconnect: onReconnect, onReconnectStart: onReconnectStart, onReconnectEnd: onReconnectEnd, reconnectRadius: reconnectRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId },\n                React.createElement(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle })),\n            React.createElement(\"div\", { className: \"react-flow__edgelabel-renderer\" }),\n            React.createElement(NodeRenderer$1, { nodeTypes: nodeTypesWrapped, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId }))));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    nodeDragThreshold: 0,\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    onSelectionChange: [],\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node?.hidden) {\n                nodeInternals.set(node.id, {\n                    ...node,\n                    [internalsSymbol]: {\n                        ...node[internalsSymbol],\n                        // we need to reset the handle bounds when the node is hidden\n                        // in order to force a new observation when the node is shown again\n                        handleBounds: undefined,\n                    },\n                });\n            }\n            else if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity\n            .translate(transform[0] + delta.x, transform[1] + delta.y)\n            .scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}), Object.is);\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return React.createElement(Provider$1, { value: storeRef.current }, children);\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return React.createElement(React.Fragment, null, children);\n    }\n    return React.createElement(ReactFlowProvider, null, children);\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, onReconnect, onReconnectStart, onReconnectEnd, reconnectRadius = 10, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, nodeDragThreshold, ...rest }, ref) => {\n    const rfId = id || '1';\n    return (React.createElement(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id },\n        React.createElement(Wrapper, null,\n            React.createElement(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onReconnect: onReconnect ?? onEdgeUpdate, onReconnectStart: onReconnectStart ?? onEdgeUpdateStart, onReconnectEnd: onReconnectEnd ?? onEdgeUpdateEnd, reconnectRadius: reconnectRadius ?? edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }),\n            React.createElement(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection, nodeDragThreshold: nodeDragThreshold }),\n            React.createElement(Wrapper$1, { onSelectionChange: onSelectionChange }),\n            children,\n            React.createElement(Attribution, { proOptions: proOptions, position: attributionPosition }),\n            React.createElement(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y }))));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        const nextSelectionChangeHandlers = [...store.getState().onSelectionChange, onChange];\n        store.setState({ onSelectionChange: nextSelectionChangeHandlers });\n        return () => {\n            const nextHandlers = store.getState().onSelectionChange.filter((fn) => fn !== onChange);\n            store.setState({ onSelectionChange: nextHandlers });\n        };\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getNodesBounds, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, getViewportForBounds, handleParentExpand, internalsSymbol, isEdge, isNode, reconnectEdge, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}