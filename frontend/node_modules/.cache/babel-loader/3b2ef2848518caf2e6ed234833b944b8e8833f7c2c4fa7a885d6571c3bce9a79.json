{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Blueprints from \"./Blueprints\";\nimport NodalGraph from \"./NodalGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  user,\n  companies = []\n}) {\n  _s();\n  const [currentCompany, setCurrentCompany] = useState(null);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [blueprintOpen, setBlueprintOpen] = useState(false);\n  useEffect(() => {\n    if (!user) return;\n\n    // Find the company corresponding to logged-in user\n    const myCompany = companies.find(c => c.email === user.email);\n    setCurrentCompany(myCompany || null);\n  }, [user, companies]);\n  if (!currentCompany) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading your company data... Please add your company if missing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  const otherCompanies = companies.filter(c => c.email && c.email !== currentCompany.email);\n  const handleGenerateBlueprint = company => {\n    if (!(currentCompany !== null && currentCompany !== void 0 && currentCompany.email) || !(company !== null && company !== void 0 && company.email)) return;\n    setSelectedCompany(company);\n    setBlueprintOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: [\"Your Company: \", currentCompany.name || currentCompany.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\",\n      children: otherCompanies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-4 shadow bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold mb-2\",\n          children: company.name || company.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Needs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 28\n          }, this), \" \", company.needs || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Produces:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 28\n          }, this), \" \", company.waste || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), currentCompany && company ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenerateBlueprint(company),\n          className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\",\n          children: \"Generate Blueprint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this) : null]\n      }, company.id || company.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NodalGraph, {\n      nodes: companies,\n      edges: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), blueprintOpen && selectedCompany && /*#__PURE__*/_jsxDEV(Blueprints, {\n      currentCompany: currentCompany,\n      targetCompany: selectedCompany,\n      onClose: () => setBlueprintOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"rVm8+19ikacCVrXWwO+QRpUS7B0=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Blueprints","NodalGraph","jsxDEV","_jsxDEV","Dashboard","user","companies","_s","currentCompany","setCurrentCompany","selectedCompany","setSelectedCompany","blueprintOpen","setBlueprintOpen","myCompany","find","c","email","children","fileName","_jsxFileName","lineNumber","columnNumber","otherCompanies","filter","handleGenerateBlueprint","company","className","displayName","name","map","needs","waste","onClick","id","nodes","edges","targetCompany","onClose","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Blueprints from \"./Blueprints\";\r\nimport NodalGraph from \"./NodalGraph\";\r\n\r\nexport default function Dashboard({ user, companies = [] }) {\r\n    const [currentCompany, setCurrentCompany] = useState(null);\r\n    const [selectedCompany, setSelectedCompany] = useState(null);\r\n    const [blueprintOpen, setBlueprintOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n\r\n        // Find the company corresponding to logged-in user\r\n        const myCompany = companies.find((c) => c.email === user.email);\r\n        setCurrentCompany(myCompany || null);\r\n    }, [user, companies]);\r\n\r\n    if (!currentCompany) {\r\n        return <p>Loading your company data... Please add your company if missing.</p>;\r\n    }\r\n\r\n    const otherCompanies = companies.filter(\r\n        (c) => c.email && c.email !== currentCompany.email\r\n    );\r\n\r\n    const handleGenerateBlueprint = (company) => {\r\n        if (!currentCompany?.email || !company?.email) return;\r\n        setSelectedCompany(company);\r\n        setBlueprintOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <h2 className=\"text-3xl font-bold mb-4\">Welcome, {user?.displayName}</h2>\r\n\r\n            <h3 className=\"text-xl font-semibold mb-4\">\r\n                Your Company: {currentCompany.name || currentCompany.email}\r\n            </h3>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\r\n                {otherCompanies.map((company) => (\r\n                    <div key={company.id || company.email} className=\"border rounded p-4 shadow bg-white\">\r\n                        <h4 className=\"font-semibold mb-2\">{company.name || company.email}</h4>\r\n                        <p><strong>Needs:</strong> {company.needs || \"N/A\"}</p>\r\n                        <p><strong>Produces:</strong> {company.waste || \"N/A\"}</p>\r\n                        {currentCompany && company ? (\r\n                            <button\r\n                                onClick={() => handleGenerateBlueprint(company)}\r\n                                className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n                            >\r\n                                Generate Blueprint\r\n                            </button>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <NodalGraph nodes={companies} edges={[]} />\r\n\r\n            {blueprintOpen && selectedCompany && (\r\n                <Blueprints\r\n                    currentCompany={currentCompany}\r\n                    targetCompany={selectedCompany}\r\n                    onClose={() => setBlueprintOpen(false)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}