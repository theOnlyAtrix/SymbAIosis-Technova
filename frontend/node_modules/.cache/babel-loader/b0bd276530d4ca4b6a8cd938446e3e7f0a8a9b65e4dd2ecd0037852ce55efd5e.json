{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Blueprints from \"./Blueprints\";\nimport NodalGraph from \"./NodalGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  user,\n  companies = [],\n  currentCompany\n}) {\n  _s();\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [blueprintOpen, setBlueprintOpen] = useState(false);\n  if (!currentCompany) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading your company...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 33\n  }, this);\n  const otherCompanies = companies.filter(c => c.email !== currentCompany.email);\n  const handleGenerateBlueprint = company => {\n    setSelectedCompany(company);\n    setBlueprintOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: [\"Welcome, \", user.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: [\"Your Company: \", currentCompany.name || currentCompany.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\",\n      children: otherCompanies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-4 shadow bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold mb-2\",\n          children: company.name || company.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Needs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 28\n          }, this), \" \", company.needs || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Produces:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 28\n          }, this), \" \", company.waste || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleGenerateBlueprint(company),\n          className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\",\n          children: \"Generate Blueprint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NodalGraph, {\n      nodes: companies,\n      edges: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), blueprintOpen && selectedCompany && /*#__PURE__*/_jsxDEV(Blueprints, {\n      currentCompany: currentCompany,\n      targetCompany: selectedCompany,\n      onClose: () => setBlueprintOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"VKoZj/qrpHsR5lvjOmicaplySBs=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Blueprints","NodalGraph","jsxDEV","_jsxDEV","Dashboard","user","companies","currentCompany","_s","selectedCompany","setSelectedCompany","blueprintOpen","setBlueprintOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","otherCompanies","filter","c","email","handleGenerateBlueprint","company","className","displayName","name","map","needs","waste","onClick","id","nodes","edges","targetCompany","onClose","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Blueprints from \"./Blueprints\";\r\nimport NodalGraph from \"./NodalGraph\";\r\n\r\nexport default function Dashboard({ user, companies = [], currentCompany }) {\r\n    const [selectedCompany, setSelectedCompany] = useState(null);\r\n    const [blueprintOpen, setBlueprintOpen] = useState(false);\r\n\r\n    if (!currentCompany) return <p>Loading your company...</p>;\r\n\r\n    const otherCompanies = companies.filter((c) => c.email !== currentCompany.email);\r\n\r\n    const handleGenerateBlueprint = (company) => {\r\n        setSelectedCompany(company);\r\n        setBlueprintOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <h2 className=\"text-3xl font-bold mb-4\">Welcome, {user.displayName}</h2>\r\n\r\n            <h3 className=\"text-xl font-semibold mb-2\">Your Company: {currentCompany.name || currentCompany.email}</h3>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\r\n                {otherCompanies.map((company) => (\r\n                    <div key={company.id} className=\"border rounded p-4 shadow bg-white\">\r\n                        <h4 className=\"font-semibold mb-2\">{company.name || company.email}</h4>\r\n                        <p><strong>Needs:</strong> {company.needs || \"N/A\"}</p>\r\n                        <p><strong>Produces:</strong> {company.waste || \"N/A\"}</p>\r\n                        <button\r\n                            onClick={() => handleGenerateBlueprint(company)}\r\n                            className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n                        >\r\n                            Generate Blueprint\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <NodalGraph nodes={companies} edges={[]} />\r\n\r\n            {blueprintOpen && selectedCompany && (\r\n                <Blueprints\r\n                    currentCompany={currentCompany}\r\n                    targetCompany={selectedCompany}\r\n                    onClose={() => setBlueprintOpen(false)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}