{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\NodalGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport ReactFlow, { Background, Controls, useNodesState, useEdgesState, useReactFlow } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NodalGraph({\n  companies,\n  currentUserEmail\n}) {\n  _s();\n  const initialNodes = companies.map((c, idx) => ({\n    id: c.email,\n    data: {\n      label: c.name\n    },\n    position: {\n      x: 100 + idx * 200,\n      y: 100 + idx % 2 * 200\n    },\n    style: {\n      background: c.email === currentUserEmail ? \"red\" : \"#1A192B\",\n      color: \"#fff\",\n      border: \"1px solid #222\",\n      width: 150\n    }\n  }));\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNodeId, setSelectedNodeId] = useState(currentUserEmail);\n  const {\n    project\n  } = useReactFlow(); // to convert node coords to screen coords\n\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNodeId(node.id);\n  }, []);\n  const onNodeDragStop = useCallback((event, node) => {\n    setNodes(nds => nds.map(n => n.id === node.id ? {\n      ...n,\n      position: node.position\n    } : n));\n  }, []);\n  const selectedNode = nodes.find(n => n.id === selectedNodeId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"600px\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      onNodeDragStop: onNodeDragStop,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: project(selectedNode.position)[1] + 50,\n        left: project(selectedNode.position)[0] + 50,\n        padding: \"8px 12px\",\n        background: \"#fff\",\n        border: \"1px solid #222\",\n        borderRadius: \"8px\",\n        pointerEvents: \"none\",\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedNode.data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", selectedNode.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(NodalGraph, \"ZnUuPYApOi+S5p2E5kQnNc6Tvhk=\", false, function () {\n  return [useNodesState, useEdgesState, useReactFlow];\n});\n_c = NodalGraph;\nvar _c;\n$RefreshReg$(_c, \"NodalGraph\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","Background","Controls","useNodesState","useEdgesState","useReactFlow","jsxDEV","_jsxDEV","NodalGraph","companies","currentUserEmail","_s","initialNodes","map","c","idx","id","email","data","label","name","position","x","y","style","background","color","border","width","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNodeId","setSelectedNodeId","project","onNodeClick","event","node","onNodeDragStop","nds","n","selectedNode","find","height","children","fitView","variant","gap","size","fileName","_jsxFileName","lineNumber","columnNumber","top","left","padding","borderRadius","pointerEvents","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/NodalGraph.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport ReactFlow, {\r\n    Background,\r\n    Controls,\r\n    useNodesState,\r\n    useEdgesState,\r\n    useReactFlow,\r\n} from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nexport default function NodalGraph({ companies, currentUserEmail }) {\r\n    const initialNodes = companies.map((c, idx) => ({\r\n        id: c.email,\r\n        data: { label: c.name },\r\n        position: { x: 100 + idx * 200, y: 100 + (idx % 2) * 200 },\r\n        style: {\r\n            background: c.email === currentUserEmail ? \"red\" : \"#1A192B\",\r\n            color: \"#fff\",\r\n            border: \"1px solid #222\",\r\n            width: 150,\r\n        },\r\n    }));\r\n\r\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n    const [selectedNodeId, setSelectedNodeId] = useState(currentUserEmail);\r\n\r\n    const { project } = useReactFlow(); // to convert node coords to screen coords\r\n\r\n    const onNodeClick = useCallback((event, node) => {\r\n        setSelectedNodeId(node.id);\r\n    }, []);\r\n\r\n    const onNodeDragStop = useCallback((event, node) => {\r\n        setNodes((nds) =>\r\n            nds.map((n) => (n.id === node.id ? { ...n, position: node.position } : n))\r\n        );\r\n    }, []);\r\n\r\n    const selectedNode = nodes.find((n) => n.id === selectedNodeId);\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"600px\", position: \"relative\" }}>\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onNodeClick={onNodeClick}\r\n                onNodeDragStop={onNodeDragStop}\r\n                fitView\r\n            >\r\n                <Background variant=\"dots\" gap={12} size={1} />\r\n                <Controls />\r\n            </ReactFlow>\r\n\r\n            {selectedNode && (\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: project(selectedNode.position)[1] + 50,\r\n                        left: project(selectedNode.position)[0] + 50,\r\n                        padding: \"8px 12px\",\r\n                        background: \"#fff\",\r\n                        border: \"1px solid #222\",\r\n                        borderRadius: \"8px\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 10,\r\n                    }}\r\n                >\r\n                    <strong>{selectedNode.data.label}</strong>\r\n                    <div>Email: {selectedNode.id}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}