{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\WebstormProjects\\\\SymbAIosisFinalTwo\\\\frontend\\\\src\\\\components\\\\NodalGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport ReactFlow, { Background, Controls, useNodesState, useEdgesState } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NodalGraph({\n  companies,\n  currentUserEmail\n}) {\n  _s();\n  const initialNodes = companies.map((c, idx) => ({\n    id: c.email,\n    data: {\n      label: c.name\n    },\n    position: {\n      x: 100 + idx * 200,\n      y: 100 + idx % 2 * 200\n    },\n    style: {\n      background: c.email === currentUserEmail ? \"red\" : \"#1A192B\",\n      color: \"#fff\",\n      border: \"1px solid #222\",\n      width: 150\n    }\n  }));\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // Ensure current user node is selected after nodes are initialized\n  useEffect(() => {\n    const currentNode = nodes.find(n => n.id === currentUserEmail);\n    if (currentNode) setSelectedNode(currentNode);\n  }, [nodes, currentUserEmail]);\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n  }, []);\n  const onNodeDragStop = useCallback((event, node) => {\n    setNodes(nds => nds.map(n => n.id === node.id ? {\n      ...n,\n      position: node.position\n    } : n));\n    if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id) === node.id) {\n      setSelectedNode({\n        ...node\n      });\n    }\n  }, [selectedNode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"600px\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      onNodeDragStop: onNodeDragStop,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: selectedNode.position.y + 50,\n        left: selectedNode.position.x + 50,\n        padding: \"8px 12px\",\n        background: \"#fff\",\n        border: \"1px solid #222\",\n        borderRadius: \"8px\",\n        pointerEvents: \"none\",\n        zIndex: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedNode.data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Email: \", selectedNode.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(NodalGraph, \"7Yo+b9KwhgXSiFYMnimshum2zrs=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = NodalGraph;\nvar _c;\n$RefreshReg$(_c, \"NodalGraph\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","ReactFlow","Background","Controls","useNodesState","useEdgesState","jsxDEV","_jsxDEV","NodalGraph","companies","currentUserEmail","_s","initialNodes","map","c","idx","id","email","data","label","name","position","x","y","style","background","color","border","width","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","currentNode","find","n","onNodeClick","event","node","onNodeDragStop","nds","height","children","fitView","variant","gap","size","fileName","_jsxFileName","lineNumber","columnNumber","top","left","padding","borderRadius","pointerEvents","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/roger/WebstormProjects/SymbAIosisFinalTwo/frontend/src/components/NodalGraph.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ReactFlow, { Background, Controls, useNodesState, useEdgesState } from \"reactflow\";\r\nimport \"reactflow/dist/style.css\";\r\n\r\nexport default function NodalGraph({ companies, currentUserEmail }) {\r\n    const initialNodes = companies.map((c, idx) => ({\r\n        id: c.email,\r\n        data: { label: c.name },\r\n        position: { x: 100 + idx * 200, y: 100 + (idx % 2) * 200 },\r\n        style: {\r\n            background: c.email === currentUserEmail ? \"red\" : \"#1A192B\",\r\n            color: \"#fff\",\r\n            border: \"1px solid #222\",\r\n            width: 150,\r\n        },\r\n    }));\r\n\r\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n    // Ensure current user node is selected after nodes are initialized\r\n    useEffect(() => {\r\n        const currentNode = nodes.find((n) => n.id === currentUserEmail);\r\n        if (currentNode) setSelectedNode(currentNode);\r\n    }, [nodes, currentUserEmail]);\r\n\r\n    const onNodeClick = useCallback((event, node) => {\r\n        setSelectedNode(node);\r\n    }, []);\r\n\r\n    const onNodeDragStop = useCallback((event, node) => {\r\n        setNodes((nds) =>\r\n            nds.map((n) => (n.id === node.id ? { ...n, position: node.position } : n))\r\n        );\r\n        if (selectedNode?.id === node.id) {\r\n            setSelectedNode({ ...node });\r\n        }\r\n    }, [selectedNode]);\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"600px\", position: \"relative\" }}>\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onNodeClick={onNodeClick}\r\n                onNodeDragStop={onNodeDragStop}\r\n                fitView\r\n            >\r\n                <Background variant=\"dots\" gap={12} size={1} />\r\n                <Controls />\r\n            </ReactFlow>\r\n\r\n            {selectedNode && (\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: selectedNode.position.y + 50,\r\n                        left: selectedNode.position.x + 50,\r\n                        padding: \"8px 12px\",\r\n                        background: \"#fff\",\r\n                        border: \"1px solid #222\",\r\n                        borderRadius: \"8px\",\r\n                        pointerEvents: \"none\",\r\n                        zIndex: 10,\r\n                    }}\r\n                >\r\n                    <strong>{selectedNode.data.label}</strong>\r\n                    <div>Email: {selectedNode.id}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}